#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\ReportFarmerBasicInfo\ADSLRPWiseReport.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9165ab7ee346bcc2a6b81a0be067abcb93e461f1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ReportFarmerBasicInfo_ADSLRPWiseReport), @"mvc.1.0.view", @"/Views/ReportFarmerBasicInfo/ADSLRPWiseReport.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\_ViewImports.cshtml"
using FFI_Reports;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\_ViewImports.cshtml"
using FFI_Reports.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9165ab7ee346bcc2a6b81a0be067abcb93e461f1", @"/Views/ReportFarmerBasicInfo/ADSLRPWiseReport.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f808a1843a3e01ed807d8e48267df3333a21a91", @"/Views/_ViewImports.cshtml")]
    public class Views_ReportFarmerBasicInfo_ADSLRPWiseReport : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("adslrp_rpt"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\ReportFarmerBasicInfo\ADSLRPWiseReport.cshtml"
  
    ViewBag.List = "Farmer ADS LRP";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9165ab7ee346bcc2a6b81a0be067abcb93e461f14007", async() => {
                WriteLiteral("\r\n    <div class=\"col-xs-12\">\r\n        <div id=\"gd-adslrp\">\r\n            <div id=\"ADSLRP_grid\">\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    $(document).ready(function () {
        LoadReport();
    });

    function LoadReport() {
        $.ajax({
            type: ""POST"",
            // data: '',
            url: ""/FarmerADSLRP/LoadLRPBasedADS"",
            dataType: ""json"",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                $('#lblprog').hide();
                if (response != null) {
                    console.log(response);
                    $(""#gd_adslrp"").empty();
                    $(""#gd_adslrp"").append(""<div id='AdsLRP_grid'></div>"");
                    FarmerADSLRPGrid(response);
                }
            },
            error: function (er) {
                $('#lblprog').hide();
                console.log(er)
            }
        });
    };

    //function FarmerADSLRPGrid(data) {
    //    try {
    //        $(""#AdsLRP_grid"").kendoGrid(
    //            {
    //                dataSource: {
    //           ");
            WriteLiteral(@"         data: data,
    //                    schema: {
    //                        model: {
    //                            fields: {
    //                                lrp_name: { type: ""string"" },
    //                                no_of_total: { type: ""string"" },
    //                                no_of_completed: { type: ""string"" },
    //                                no_of_incomplete: { type: ""string"" },
    //                            }
    //                        }
    //                    },
    //                },
    //                filterable: true,
    //                height: 300,
    //                scrollable: true,
    //                sortable: true,
    //                pageable: {
    //                    refresh: false,
    //                    pageSizes: true,
    //                    previousNext: true,
    //                    buttonCount: 8,
    //                    pageSize: 20,
    //                },
    //                co");
            WriteLiteral(@"lumns: [
    //                    {
    //                        field: ""lrp_name"",
    //                        title: ""LRP NAME"",
    //                        width: 100,
    //                    },
    //                    {
    //                        field: ""no_of_total"",
    //                        title: ""Total No of Records"",
    //                        width: 100,
    //                    },
    //                    {
    //                        field: ""no_of_completed"",
    //                        title: ""Completed Records"",
    //                        width: 100,
    //                    },
    //                    {
    //                        field: ""no_of_incomplete"",
    //                        title: ""InComplete Records"",
    //                        width: 100,
    //                    },
    //                ]
    //            });
    //        $("".k-dropdown-operator"").css('display', 'none');
    //        $(""#AdsLRP_grid .k-input"").attr");
            WriteLiteral(@"('disabled', 'false');
    //    }
    //    catch (err) {
    //        javascript_log4j_root(arguments.callee.name, err);
    //    }
    //};

    //function ExportButtonClick() {
    //    var grid = $(""#Expenses_grid"").data(""kendoGrid"");
    //    if (grid.dataSource.total() == 0) {
    //        kendoAlert('No records available in the Grid to Export!!!');
    //    }
    //    else {
    //        grid.bind(""excelExport"", function (e) {
    //            debugger;
    //            e.workbook.fileName = ""Bank Details and KYC.xlsx"";
    //            var rows1 = e.workbook.sheets[0];

    //            var sheet = e.workbook.sheets[0];
    //            var gd = $(""#Expenses_grid"").data(""kendoGrid"");
    //            var gd_fi = $(""#Expenses_grid"").data(""kendoGrid"").dataSource;
    //            var filters = gd_fi.filter();
    //            var allData = gd_fi.data();
    //            var query = new kendo.data.Query(allData);
    //            var data = query.filter(filters)");
            WriteLiteral(@".data;
    //            var data_tt = gd.dataSource.data();
    //            var sheet = e.workbook.sheets[0];
    //            var gridColumns = gd.columns;

    //            var columnCells = [];
    //            for (var c = 0; c < gridColumns.length; c++) {
    //                var fieldName = gd.columns[c].hidden;
    //                if (typeof (fieldName) === ""undefined"") {
    //                    var cellValue = gridColumns[c].title ? gridColumns[c].title : gridColumns[c].field;
    //                    columnCells.push({ value: cellValue, autoWidth: true, background: ""#7a7a7a"", color: ""#fff"" });
    //                }
    //            }
    //            var rows = [{ cells: columnCells, type: ""header"" }];
    //            for (var i = 0; i < data.length; i++) {
    //                var rowCells = [];
    //                for (var j = 0; j < gridColumns.length; j++) {

    //                    var fieldName = gd.columns[j].hidden;
    //                    if (typeo");
            WriteLiteral(@"f (fieldName) === ""undefined"") {
    //                        var cellValue = data[i][gridColumns[j].field];
    //                        rowCells.push({ value: cellValue });
    //                    }
    //                }
    //                rows.push({ cells: rowCells, type: ""data"" });
    //            }
    //            sheet.rows = rows;
    //        });
    //        grid.saveAsExcel();
    //        kendoAlert('Exported Sucessfully');
    //    }
    //};
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
