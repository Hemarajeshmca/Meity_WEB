#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\Reportlist\Reportlist.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b88b2a9d51e0cdd156cafbb1f35c4b6b6aeda085"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Reportlist_Reportlist), @"mvc.1.0.view", @"/Views/Reportlist/Reportlist.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\_ViewImports.cshtml"
using FFI_Reports;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\_ViewImports.cshtml"
using FFI_Reports.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b88b2a9d51e0cdd156cafbb1f35c4b6b6aeda085", @"/Views/Reportlist/Reportlist.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f808a1843a3e01ed807d8e48267df3333a21a91", @"/Views/_ViewImports.cshtml")]
    public class Views_Reportlist_Reportlist : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_Reportslist"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\Reportlist\Reportlist.cshtml"
  
    ViewBag.List = "Reports";
    Layout = "~/Views/Shared/ActionLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            WriteLiteral(@"<style>
    .loading {
        background-image: url('http://www.fotos-lienzo.es/media/aw_searchautocomplete/default/loading.gif');
        background-repeat: no-repeat;
    }

        .loading:after {
            content: ""Processing...PleaseWait..."";
            text-align: right;
            color :red;
            padding-left: 25px;
        }
</style>

");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b88b2a9d51e0cdd156cafbb1f35c4b6b6aeda0855938", async() => {
                WriteLiteral(@"
    <div class=""panel panel-default"">
        <div class=""panel-body"" style=""padding-top:6px;padding-bottom:2px"">
            <div class=""row"" style=""padding-bottom:5px"">
                <div class=""col-sm-4"">
                    <div class=""form-group"">
                        <label for=""cmb_menu"" class=""col-sm-5 control-label required "">Report Name</label>
                        <div class=""col-sm-7"">
                            <input id=""cmb_filter"" name=""module_code"" style=""width: 100%"" data-role=""filtercombo"" onchange=""setfinyear()"">
                            <a id=""downloadpath"" download");
                BeginWriteAttribute("href", " href=\"", 1543, "\"", 1550, 0);
                EndWriteAttribute();
                WriteLiteral(@"></a>
                        </div>
                    </div>

                    <div class=""form-group display: none"" id=""divfin"">
                        <label for=""cmb_menu"" class=""col-sm-5 control-label required "">Financial Year</label>
                        <div class=""col-sm-7"">
                            <input id=""cmb_finyear"" name=""module_code"" style=""width: 100%"" data-role=""filtercombo"">
                            <a id=""downloadpath"" download");
                BeginWriteAttribute("href", " href=\"", 2025, "\"", 2032, 0);
                EndWriteAttribute();
                WriteLiteral("></a>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"col-sm-4\">\r\n                    <div class=\"form-group\">\r\n");
                WriteLiteral("                        <input id=\"myButton1\" type=\"button\" style=\"width:30%;height:31px;background-color:#00c0ef;margin: 4px 10px;border-radius: 15px;\" value=\"GetReport\" onclick=\"return GetReportName()\" />\r\n<div class=\"load\"></div>\r\n");
                WriteLiteral("\r\n");
                WriteLiteral("\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b88b2a9d51e0cdd156cafbb1f35c4b6b6aeda0859622", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    click_act_name = ""ReportForm"";
    click_ctrl_name = ""Reportlist"";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;

    function setfinyear() {
        if ($(""#cmb_filter"").val() == ""RPTADR"" || $(""#cmb_filter"").val() == ""RPTARM"" || $(""#cmb_filter"").val() == ""RPTART"") {
            $(""#divfin"").show();
        }
        else {
            $(""#divfin"").hide();
        }

    }
    function getfinyear() {
        $.ajax({
            type: ""POST"",
            data: {},
            url: ""/Reportlist/finyear"",
            dataType: ""json"",
            contentType: 'application/json; charset-utf-8;',
            success: function (response) {
                debugger;
                if (response != null) {
                    debugger;
                    var url_path = (response);
                    var itemArr = [];
                    for (var i = 0; i < response.length; i++) {
                        var list = {};
                        list.id");
            WriteLiteral(@" = response[i].finyear_rowid;
                        list.code = response[i].finyear_code;
                        list.desc = response[i].finyear_code;
                        itemArr.push(list);
                    }
                    filter_combobox(""cmb_finyear"", itemArr);
                }
            },
            error: function (er) {
                alert(er);
                console.log(er);
            }
        });
    }
    function GetReportName() {
        debugger;
		 $('#myButton1').hide();
        $('.load').addClass('loading');
        var selected_value = $(""#cmb_filter"").val();
        var param_value = $(""#cmb_finyear"").val();
        //console.log(selected_value);
        var data = {};
        data.context = WebAPIProxy.getContext();
        var Context = data.context;
        if ($(""#cmb_filter"").val() == ""RPTADR"" || $(""#cmb_filter"").val() == ""RPTARM"" || $(""#cmb_filter"").val() == ""RPTART"") {
            if (param_value == """") {
                kendoAlert(");
            WriteLiteral(@"""Please select Financial Year"");
                return;
            }
        }
        if (selected_value != """") {
            //window.location = ""/FarmerRegRpt/FarmerRegRpt?id="" + selected_value;
            $.ajax({
                type: ""POST"",
                data: JSON.stringify({ cmbrptname: selected_value, userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, cmbparam: param_value }),
                url: ""/Reportlist/GetReport"",
                dataType: ""json"",
                contentType: 'application/json; charset-utf-8;',
                success: function (response) {
                    debugger;
                    $('.load').removeClass('loading');
                    selected_value = '';
                    $(""#cmb_filter"").val('');
                    $('#myButton1').show();

                    if (response != null) {
                        debugger;
                        var url_path = (response);
                    ");
            WriteLiteral(@"    $(""#downloadpath"").attr(""href"", url_path.path);
                        document.getElementById(""downloadpath"").click();
                    }
                },
                error: function (er) {
                    alert(er);
                    console.log(er);
                }
            });
        }
        else {
            kendoAlert(""Please select Report Name"");
        }

        //Introduced by Venkat Reportlist page  Download Excel  End
    }
</script>




<script>
    var menuId = """";
    var permission = """";
    $(document).ready(function () {
        debugger;
        //  $("".adv_filter"").attr(""hdrtitle"", ""Reports configuration List Record"");
        //  $("".adv_filter"").attr(""fltid"", ""ReportConfig"");
        //  $("".Export"").attr(""hdrtitle"", ""Reports configuration"");
        // $("".Export"").attr(""SubTreeId"", ""RPT_CONFIG"");
        //  list_grid_id = ""Repors_grid"";
        $(""#trackeup"").hide();
        var formval = form_Serialize(""frm_Reportslist"");");
            WriteLiteral(@"
        var obj_val = JSON.parse(formval);
        obj_val.FilterBy_Option = getlocalStorage('ModuleId');
        obj_val.FilterBy_Code = ""."";
        if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != """") {
            obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
        }
        else {
            obj_val.FilterBy_FromValue = ""."";
        }
        obj_val.FilterBy_ToValue = ""."";

        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Filter = obj_val;


        //Report  List Loaded start 22-05-2020
        var Context = data.context;
        $.ajax({
            type: ""POST"",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, filterby_option: Context.Filter.FilterBy_Option, filterby_code: Context.Filter.FilterBy_Code, filterby_fromvalue: Context.Filter.FilterBy_FromValue, filterby_tovalue: Context.Filter.Filt");
            WriteLiteral(@"erBy_ToValue }),
            url: ""/Reportlist/fetchReportlist"",
            dataType: ""json"",
            contentType: 'application/json; charset-utf-8;',
            success: function (response) {
                debugger;
                if (response.context.List != null) {
                    debugger;
                    var itemArr = [];
                    for (var i = 0; i < response.context.List.length; i++) {
                        var list = {};
                        list.id = response.context.List[i].Out_report_rowid
                        list.code = response.context.List[i].Out_report_code;
                        list.desc = response.context.List[i].Out_report_name;
                        itemArr.push(list);
                    }
                    filter_combobox(""cmb_filter"", itemArr);

                }
                else {
                    $(""#cmb_filter"").empty();
                }
            },
            error: function (er) {
                alert(er");
            WriteLiteral(@");
                console.log(er);
            }
        });

        //Stock  List Loaded End 22-05-2020



        //  $(""#btn_run"").show();
        //Screen_Id = ""REPORTS"";
        // permission = sec_Permission(Screen_Id);
        //page_load_list_permission(permission);
        //$('#btn_new').attr(""disabled"", true);
        //$('#btn_Edit').attr(""disabled"", true);
        //setlocalStorage(""ls_pageList"", """");
        //filterhover();


        getfinyear();
        $(""#divfin"").hide();
    });


</script>

<script>
    function listpageloadfetch() {
        var formval = form_Serialize(""frm_Reportslist"");
        var obj_val = JSON.parse(formval);
        obj_val.FilterBy_Option = getlocalStorage('ModuleId');
        obj_val.FilterBy_Code = ""."";
        if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != """") {
            obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
        }
        else {
            obj_val.Fi");
            WriteLiteral(@"lterBy_FromValue = ""."";
        }
        obj_val.FilterBy_ToValue = ""."";

        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Filter = obj_val;
        retrieve_ReportsConfig_list(data);

        setlocalStorage('flt_condition', """");
    }
    var status_Priority = [];
    function Reportlist(data) {
        $.each(data, function (index, value) {
            var flag = false;
            $.each(status_Priority, function (sindex, svalue) {
                if (svalue == value.status_desc) {
                    flag = true;
                }
            });
            if (flag == false) {
                status_Priority.push(value.status_desc);
            }
        });
        $(""#Repors_grid"").kendoGrid(
            {
                dataSource: {
                    data: data,
                    pageSize: 20,
                    change: function (e) {
                        setTimeout(function () {
                            var gd ");
            WriteLiteral(@"= $(""#Repors_grid"").data(""kendoGrid"");
                            filter_row(gd);
                            $('.k-i-close').css('display', 'none');
                            $('button.k-button-icon').css('display', 'none');
                            $('#Repors_grid .k-input').prop('disabled', false);
                            $('#Repors_grid .k-input').prop('readonly', true);

                        }, 1);
                    },
                },
                toolbar: ""<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>"",
                excelExport: function (e) {
                    var gd = $(""#Repors_grid"").data(""kendoGrid"");
                    var len = gd.dataSource._data.length;
                    var chkall = $('#chkall').is(':checked');
                    var chkfilter = $('#chkfilter').is(':checked');
                    var chktemp = $('");
            WriteLiteral(@"#chktemp').is(':checked');
                    var twokendobox = true;
                    gd.dataSource.pageSize(len);
                    if (e.sender.dataSource._data.length == len) {
                        twokendobox = false;
                        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    }
                    else {
                        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    }
                    gd.dataSource.pageSize('10');
                    return false;
                },
                //filterable: {
                //    enabled: true,
                //    delay: 1500,
                //    mode: ""menu, row"",
                //    height: 200,
                //    click: function (e) {
                //        var gd = $(""#Repors_grid"").data(""kendoGrid"");
                //        filter_row(gd);
                //    }
                //},

                filterable: true,");
            WriteLiteral(@"
                resizable: true, 
                filterMenuInit: function (e) {
                    var gd = $(""#Repors_grid"").data(""kendoGrid"");
                    filter_row(gd);
                },

                height: 450,
                sortable: true,
                selectable: true,
                change: selectRow,
                selectable: ""singl"",   //  Grid Row Selection
                pageable: {
                    refresh: false,
                    pageSizes: true,
                    buttonCount: 5
                },
                navigatable: true,
                groupable: false,

                columns: [

                    {
                        field: ""report_rowid"",
                        title: ""report rowid"", 
                        hidden: true,
                    },
                    {
                        field: ""module_code"",
                        title: ""module code"", 
                        hidden: true,
              ");
            WriteLiteral(@"      },

                    {
                        field: ""module_name"",
                        title: ""Module"", 
                        hidden: true
                    },

                    {
                        field: ""report_code"",
                        title: ""Report Code"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width:150
                    },
                    {
                        field: ""report_type"",
                        title: ""report type"", 
                        hidden: true,
                    },

                    {
                        field: ""report_name"",
                        title: ""Report Name"",
                        filterable: {
 ");
            WriteLiteral(@"                           extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width:150
                    },
                    {
                        field: ""report_source"",
                        title: ""Report Filename"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 150
                    },

                    {
                        field: ""report_type_desc"",
                        title: ""report_source"", 
                        hidden: true,
                  ");
            WriteLiteral(@"  },
                    {
                        field: ""status_code"",
                        title: ""status code"", 
                        hidden: true,
                    },
                    {
                        field: ""status_desc"",
                        title: ""Status"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 150
                    },
                ]

            });



        $("".k-dropdown-operator"").css('display', 'none');
        $(""#Repors_grid .k-input"").attr('disabled', 'false');
    }

    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLa");
            WriteLiteral(@"bel: ""--Select Value--""
        });
    }

    function selectRow() {
        var grid = $(""#Repors_grid"").data(""kendoGrid"");
        var selectedItem = grid.dataItem(grid.select());
        setlocalStorage(""ls_pageList"", selectedItem);
    }

</script>
<script>
    $(""#btn_Edit"").bind(""click"", function () {
        getSerializedSelectedRows('edit');
    });

    $(""#btn_View"").bind(""click"", function () {
        getSerializedSelectedRows('view');
    });

    $(""#btn_new"").bind(""click"", function () {
        btn_onClick('Create');
        location.href = ""../Reportlist/ReportForm"";
    });

    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage(""ls_pageList"") != undefined) {
                var items = getlocalStorage(""ls_pageList"");
                if (items.length == 0) {
                    kendoAlert(""Please select records"");
                }
                else {
                    if (mode == ""edit"") {
                        bt");
            WriteLiteral(@"n_onClick('Edit');
                        location.href = ""../Reportlist/ReportForm"";
                    }
                    else if (mode == ""view"") {
                        btn_onClick('View');
                        location.href = ""../Reportlist/ReportForm"";
                    }
                }
            }
        }
        catch (err) {
        }
    }


</script>
");
            WriteLiteral("\r\n\r\n\r\n\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
