#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\ReportFarmerBasicInfo\ReportLandDetailsInfo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "72599e109b926e200b52bc585c758f6147bd5864"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ReportFarmerBasicInfo_ReportLandDetailsInfo), @"mvc.1.0.view", @"/Views/ReportFarmerBasicInfo/ReportLandDetailsInfo.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\_ViewImports.cshtml"
using FFI_Reports;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\_ViewImports.cshtml"
using FFI_Reports.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"72599e109b926e200b52bc585c758f6147bd5864", @"/Views/ReportFarmerBasicInfo/ReportLandDetailsInfo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f808a1843a3e01ed807d8e48267df3333a21a91", @"/Views/_ViewImports.cshtml")]
    public class Views_ReportFarmerBasicInfo_ReportLandDetailsInfo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_landdetailsinforeport"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/Common_func.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/HelpFile.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/ExportExcel.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\ReportFarmerBasicInfo\ReportLandDetailsInfo.cshtml"
  
    ViewBag.Form = "Land Details Info";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    #display_loading {
        position: absolute;
        top: 30%;
        left: 50%;
        transform: translate(-50%, 50%);
        display: none;
    }

    body {
        background-color: #ffffff;
    }
    button#btnExport {
        background-color: #00c0ef;
        border-color: #00acd6;
        margin-top: -6%;
        display: inline-block;
        padding: 6px 12px;
        margin-bottom: 0;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
        color: #fff;
    }
</style>
<script src=""https://cdnjs.cloudfla");
            WriteLiteral("re.com/ajax/libs/jszip/2.4.0/jszip.min.js\"></script>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "72599e109b926e200b52bc585c758f6147bd58646815", async() => {
                WriteLiteral(@"
    <div class=""panel panel-default"">
        <div class=""panel-body"" style=""padding-top:6px;padding-bottom:2px"">
            <div class=""row"" style=""padding-bottom:5px;padding-top:12px;"">
                <div class=""col-sm-12"">
                    <div class=""row"">

                        <div class=""col-sm-4"" id=""cmddist"">
                            <div class=""form-group"">
                                <label for=""cmb_farmerdist"" class=""col-sm-4 control-label required"">Farmer District</label>
                                <div class=""col-sm-7"">
                                    <input id=""cmb_dist"" name=""cmb_dist"" style=""width: 100%"" data-role=""filtercombo"">
                                </div>
                            </div>
                        </div>
                        <div class=""col-sm-4"" id=""cmdtaluk"">
                            <div class=""form-group"">
                                <label for=""cmb_farmertaluk"" class=""col-sm-5 control-label required"">Farmer T");
                WriteLiteral(@"aluk</label>
                                <div class=""col-sm-7"">
                                    <input id=""cmb_taluk"" name=""cmb_taluk"" style=""width: 100%"" data-role=""filtercombo"">
                                </div>
                            </div>
                        </div>
                        <div class=""col-sm-4"" id=""cmdvillage"">
                            <div class=""form-group"">
                                <label for=""cmb_farmervillage"" class=""col-sm-5 control-label required"">Farmer Village</label>
                                <div class=""col-sm-7"">
                                    <input id=""cmb_village"" name=""cmb_village"" style=""width: 100%"" data-role=""filtercombo"">
                                    <input type=""hidden"" id=""hdn_inputstring"">
                                </div>
                            </div>
                        </div>
                        </div>
                    <div class=""pull-right"" style=""margin-top: 1px"">
         ");
                WriteLiteral("               <button id=\"refresh\"");
                BeginWriteAttribute("title", " title=\"", 3325, "\"", 3333, 0);
                EndWriteAttribute();
                WriteLiteral(" data-placement=\"top\" data-toggle=\"tooltip\" class=\"btn btn-info\" type=\"button\"\r\n                                data-original-title=\"Refresh\" onclick=\"listRefresh()\"");
                BeginWriteAttribute("style", " style=\"", 3499, "\"", 3507, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                            <span class=""glyphicon glyphicon-refresh""></span>
                        </button>
                      
                        <div id=""display_loading"" style=""z-index: 999;""><img src=""https://i.stack.imgur.com/rBLb3.gif"" style=""height:100px; width:100px;""></div>

                        <button id=""clear""");
                BeginWriteAttribute("title", " title=\"", 3855, "\"", 3863, 0);
                EndWriteAttribute();
                WriteLiteral(" data-placement=\"top\" data-toggle=\"tooltip\" class=\"btn btn-info\" type=\"button\"\r\n                                data-original-title=\"clear\" onclick=\"listclear()\"");
                BeginWriteAttribute("style", " style=\"", 4025, "\"", 4033, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                            clear\r\n                        </button>\r\n                        <button id=\"btnExport\"");
                BeginWriteAttribute("title", " title=\"", 4153, "\"", 4161, 0);
                EndWriteAttribute();
                WriteLiteral(@" data-placement=""top"" data-toggle=""tooltip"" class=""btn btn-info"" type=""button"" data-original-title=""Export"" style=""background-color: #00c0ef ;border-color: #00acd6; margin-top:0%"" ;>
                            Export to Excel
                        </button>
                    </div>
                    </div>

            </div>
            <div class=""row"">
                <div class=""col-xs-12"">
                    <div id=""gd_land"">
                        <div id=""LandDetailsInforeport_grid""></div>
    
                    </div>
                </div>
            </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "72599e109b926e200b52bc585c758f6147bd586412712", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "72599e109b926e200b52bc585c758f6147bd586413752", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "72599e109b926e200b52bc585c758f6147bd586414792", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>
    click_act_name = ""home "";
    click_ctrl_name = ""home"";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>
<script>
    var menuId = """";
    var permission = """";
    $(document).ready(function () {
        debugger;
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $(""#frm_landdetailsinforeport"");
        kendo.init(container);
        container.kendoValidator({
        });
        $(""#Topsubheader"").show();
        $(""#bottomFooter"").show();
        $(""#bottom_menus"").hide();
        $(""#btndiv"").show();
        $(""#frmlayerdiv"").hide();
        $(""#divCreate"").hide();
        $(""#divEdit"").hide();
        $(""#divView"").show();
        $(""#DocStat"").show();
        $("".edtviw_item"").show();
        $("".create_item"").hide();
        $(""#btnExport"").hide();
        $("".Export"").attr(""hdrtitle"", ""Land Details Info Report"");
        $("".Export"").attr(""SubTreeId"", ""FARMLANDCRPT"");

        Screen_Id ");
            WriteLiteral(@"= ""FARMLANDCRPT"";
        permission = sec_PermissionNew(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage(""ls_pageList"", """");
        var security = permission;
        console.log(security);
        if (security['print'] == true) {
            $(""#btnExport"").show();
        }
        else {
            $(""#btnExport"").hide();
        }

        listgrid([]);

        $(""#btnExport"").kendoButton({
            click: function () {
                debugger;
                ExportButtonClick();
            }
        });
        /*  Prema added for fpo based abd ri user base loading*/
        var role = getlocalStorage(""orgn_level"");
        if (role == ""ORG_FO"") {
            $(""#RIform"").show();
            $(""#FPOform"").show();
            filter_combobox(""cmb_RIBelongform"", getlocalStorage(""rilist""));
            filter_combobox(""cmb_FPOBelongform"", getlocalStorage(""fpolist""));
            var cmb_riform3 = $(""#cmb_RIBelongform"").data(""kendoComboB");
            WriteLiteral(@"ox"");
            cmb_riform3.value(getlocalStorage(""org_id""));
            $(""#cmb_FPOBelongform"").data(""kendoComboBox"").value(""ALL"");
            $(""#cmb_RIBelongform"").data(""kendoComboBox"").enable(false);
            $(""#cmb_FPOBelongform"").data(""kendoComboBox"").enable(true);
            Alldropdownload();
        }
        if (role == ""ORG_PF"") {
            $(""#RIform"").show();
            $(""#FPOform"").show();
            filter_combobox(""cmb_RIBelongform"", getlocalStorage(""rilist""));
            $(""#cmb_RIBelongform"").data(""kendoComboBox"").value(""ALL"");
            filter_combobox(""cmb_FPOBelongform"", getlocalStorage(""fpolist""));
            $(""#cmb_FPOBelongform"").data(""kendoComboBox"").value(""ALL"");
            $(""#cmb_RIBelongform"").data(""kendoComboBox"").enable(true);
            $(""#cmb_FPOBelongform"").data(""kendoComboBox"").enable(true);
            fpoload();
            Alldropdownload();
        }
        if (role == ""ORG_FPO"") {
            $(""#RIform"").show();
            $");
            WriteLiteral(@"(""#FPOform"").show();
            filter_combobox(""cmb_RIBelongform"", getlocalStorage(""rilist""));
            filter_combobox(""cmb_FPOBelongform"", getlocalStorage(""fpolist""));
            var cmb_riform3 = $(""#cmb_RIBelongform"").data(""kendoComboBox"");
            cmb_riform3.value(getlocalStorage(""parent_code""));
            $(""#cmb_RIBelongform"").data(""kendoComboBox"").enable(false);
            $(""#cmb_FPOBelongform"").data(""kendoComboBox"").enable(false);
            var cmap_inselform = $(""#cmb_FPOBelongform"").data(""kendoComboBox"");
            cmap_inselform.value(getlocalStorage(""org_code""));
            Alldropdownload();
        }
        /*  prema ended*/
        var list_in = """";
        // $(""#cmb_filter"").empty();
        var list_in = [
            { ""code"": ""Fpo Name"", ""desc"": ""Fpo Name"" },
            { ""code"": ""Dist"", ""desc"": ""Dist"" }
        ];

    });
        $(""#cmb_RIBelongform"").change(function () {
        debugger;
             var selected_value = $(this).val();
   ");
            WriteLiteral("          var data1 = { RI_Code: selected_value}\r\n            $.ajax({\r\n            url: \'");
#nullable restore
#line 216 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\ReportFarmerBasicInfo\ReportLandDetailsInfo.cshtml"
             Write(Url.Action("GetFPOlistRIBASE", "Login"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""post"",
            contentType: 'application/x-www-form-urlencoded',
            data: data1,
            success: function (response1) {
            debugger;
                var url_path = JSON.parse(response1);
                var itemArrFPO = [];
                for (var i = 0; i < url_path.Table.length; i++) {
                    var list = {};
                    list.id = url_path.Table[i].serial_number;
                    list.code = url_path.Table[i].dist_code;
                    list.desc = url_path.Table[i].Member_district_name;
                    itemArrFPO.push(list);
                }
                filter_combobox(""cmb_FPOBelongform"", itemArrFPO);
                Alldropdownload();
            },
                error: function (er)
                {
                alert(er)
                console.log(er)
                }
            });

    });
    function Alldropdownload() {
        load_master_code();
        var orgcode = $(""#cmb_FP");
            WriteLiteral(@"OBelongform"").data(""kendoComboBox"").value();
        var parentcode = $(""#cmb_RIBelongform"").data(""kendoComboBox"").value();
        var selected_value = orgcode;
        var data = { fpo_code: selected_value, parent_code: parentcode };
         $.ajax({
            url: '");
#nullable restore
#line 249 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\ReportFarmerBasicInfo\ReportLandDetailsInfo.cshtml"
             Write(Url.Action("GetDistrict", "ReportFarmerBasicInfo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""post"",
            contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response1) {
            debugger;
                if (response1 != null) {
                    $(""#cmb_dist"").val('');
                    $(""#cmb_taluk"").val('');
                    $(""#cmb_village"").val('');
                debugger;
                var url_path = JSON.parse(response1);
                var itemArr = [];
                for (var i = 0; i < url_path.length; i++) {
                    var list = {};
                    list.id = url_path[i].serial_number;
                    list.code = url_path[i].dist_code;
                    list.desc = url_path[i].Member_district_name;
                    itemArr.push(list);
                }
                filter_combobox(""cmb_dist"", itemArr);
            }
          },
         error: function (er) {
         alert(er)
        console.log(er)
        }
         });
    }

   //");
            WriteLiteral(@"Venkat Introduced Purpose FPO Name based  district Loaded 02-01-2020

    $(""#cmb_FPOBelongform"").change(function () {
        debugger;
        var selected_value = $(this).val();
        var parentcode = $(""#cmb_RIBelongform"").data(""kendoComboBox"").value();
        var data = { fpo_code: selected_value, parent_code: parentcode };
         $.ajax({
            url: '");
#nullable restore
#line 287 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\ReportFarmerBasicInfo\ReportLandDetailsInfo.cshtml"
             Write(Url.Action("GetDistrict", "ReportFarmerBasicInfo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""post"",
            contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response1) {
            debugger;
            if (response1 != null) {
                debugger;
                $(""#cmb_dist"").val('');
                var url_path = JSON.parse(response1);
                var itemArr = [];
                for (var i = 0; i < url_path.length; i++) {
                    var list = {};
                    list.id = url_path[i].serial_number
                    list.code = url_path[i].dist_code;
                    list.desc = url_path[i].Member_district_name;
                    itemArr.push(list);
                }
                filter_combobox(""cmb_dist"", itemArr);
                listgrid([]);
            }
          },
         error: function (er) {
         alert(er)
        console.log(er)
        }
         });

       })
    //End
    $(""#cmb_dist"").change(function () {
        listgrid([]);");
            WriteLiteral(@"
        var fpo_code = $(""#cmb_FPOBelongform"").val()
        var selected_value = $(this).val();
        var parentcode = $(""#cmb_RIBelongform"").data(""kendoComboBox"").value();
        var data = { fpo_code: fpo_code, dist_code: selected_value, parent_code: parentcode  };
         $.ajax({
            url: '");
#nullable restore
#line 324 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\ReportFarmerBasicInfo\ReportLandDetailsInfo.cshtml"
             Write(Url.Action("GetTaluk", "ReportFarmerBasicInfo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""post"",
            contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response1) {
            debugger;
                if (response1 != null) {
                    $(""#cmb_taluk"").val('');
                    $(""#cmb_village"").val('');
                var url_path = JSON.parse(response1);
                var itemArr = [];
                for (var j = 0; j < url_path.Table.length; j++) {
                    var listtaluk = {};
                    listtaluk.id = url_path.Table[j].serial_number
                    listtaluk.code = url_path.Table[j].taluk_code;
                    listtaluk.desc = url_path.Table[j].Member_taluk_name
                    itemArr.push(listtaluk);
                }
                filter_combobox(""cmb_taluk"", itemArr);
            }
          },
         error: function (er) {
         alert(er)
        console.log(er)
        }
         });
    });
    $(""#cmb_taluk"").change(func");
            WriteLiteral(@"tion () {
        listgrid([]);
        var fpo_code = $(""#cmb_FPOBelongform"").val();
        var dist_code = $(""#cmb_dist"").val();
        var selected_value = $(this).val();
        var parentcode = $(""#cmb_RIBelongform"").data(""kendoComboBox"").value();
        var data = { fpo_code: fpo_code, dist_code: dist_code, taluk_code: selected_value, parent_code: parentcode };
         $.ajax({
            url: '");
#nullable restore
#line 359 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\ReportFarmerBasicInfo\ReportLandDetailsInfo.cshtml"
             Write(Url.Action("GetVillage", "ReportFarmerBasicInfo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""post"",
            contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response1) {
                if (response1 != null) {
                    $(""#cmb_village"").val('');
                var url_path = JSON.parse(response1);
                    var itemArr = [];
                    for (var k = 0; k < url_path.length; k++) {
                    var listvillage = {};
                    listvillage.id = url_path[k].serial_number
                    listvillage.code = url_path[k].village_code;
                    listvillage.desc = url_path[k].Member_village_name;
                    itemArr.push(listvillage);
                }
                filter_combobox(""cmb_village"", itemArr);
            }
          },
         error: function (er) {
               console.log(er)
        }
         });
    });
    $(""#cmb_village"").change(function () {
        listgrid([]);
    });
    function fpoload() {
        va");
            WriteLiteral(@"r data = {};
            data.userId = getlocalStorage(""User_Id_Value"");
        var orgnid = $(""#cmb_RIBelongform"").data(""kendoComboBox"").value();
            var user_code = data.userId;
            var data1 = {User_code: user_code, orgn_code: orgnid}
            $.ajax({
            url: '");
#nullable restore
#line 393 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\ReportFarmerBasicInfo\ReportLandDetailsInfo.cshtml"
             Write(Url.Action("GetFPOlist", "Login"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""post"",
            contentType: 'application/x-www-form-urlencoded',
            data: data1,
            success: function (response1) {
            debugger;
                var url_path = JSON.parse(response1);
                var itemArrFPO = [];
                for (var i = 0; i < url_path.Table.length; i++) {
                    var list = {};
                    list.id = url_path.Table[i].serial_number;
                    list.code = url_path.Table[i].dist_code;
                    list.desc = url_path.Table[i].Member_district_name;
                    itemArrFPO.push(list);
                }
                filter_combobox(""cmb_FPOBelongform"", itemArrFPO);
            },
                error: function (er)
                {
                alert(er)
                console.log(er)
                }
            });
    }

    var isvalid = true;
    function Validation() {
        if ($(""#cmb_FPOBelongform"").val() != """") {
            isvalid = true;");
            WriteLiteral(@"
        }
        else {
            isvalid = false;
            kendoAlert(""Please Select the FPO Name"");
            return;
        }
        if (role == ""ORG_FO"") {
            if ($(""#cmb_FPOBelongform"").val() == ""QCD_CROPTYPE_ALL"") {
                isvalid = false;
                kendoAlert(""Please Select the FPO Name"");
                return;
            }
            else {
                isvalid = true;
            }
        }
        if ($(""#cmb_dist"").val() != """") {
            isvalid = true;
        }
        else {
            isvalid = false;
            kendoAlert(""Please Select the Farmer District"");
            return;
        }
        if ($(""#cmb_taluk"").val() != """") {
            isvalid = true;
        }
        else {
            isvalid = false;
            kendoAlert(""Please Select the Farmer Taluk"");
            return;
        }
        if ($(""#cmb_village"").val() != """") {
            isvalid = true;
        }
        else {
            isv");
            WriteLiteral(@"alid = false;
            kendoAlert(""Please Select the Farmer Village"");
            return;
        }
    }


    $(function () {
        $('#refresh').click(function () {
            Validation();
            var pager_click = true;
              if (isvalid == true) {
                    $('#refresh').hide();
                    $('#lblprog').show();
                  var cmb_fpocode = $(""#cmb_FPOBelongform"").val();
                var cmb_dist = $(""#cmb_dist"").val();
                var cmb_taluk = $(""#cmb_taluk"").val();
                  var cmb_village = $(""#cmb_village"").val();
                  var orgnid = $(""#cmb_RIBelongform"").data(""kendoComboBox"").value();
                  var user_code = getlocalStorage(""User_Id_Value"");
                  $('#refresh').hide();
                  $(""#btnExport"").hide();
                  $(""#clear"").hide();
                  $(""#display_loading"").show();
                  $("".panel-default"").css(""opacity"", 0.2);
                  setTimeo");
            WriteLiteral(@"ut(function () {
                      $("".panel-default"").css(""opacity"", 1);
                      $(""#display_loading"").css({ ""display"": ""none"" });
                  }, 8500);
                  var ABC = ""Input"";
                  var InputString = ABC.concat("" "", ""{"", cmb_fpocode, "","", cmb_dist, "","", cmb_taluk, "","", cmb_village, "","", orgnid, "","", user_code, ""}"");
                  console.log(InputString);
                  $(""#hdn_inputstring"").val(InputString);
                  //Sp Name For this Report : Report_Land_Details_Info
                  console.log(""Report SP : Report_Land_Details_Info"");
                $.ajax({
                    type: ""POST"",
                    data: '{fpocode: ""' + cmb_fpocode + '"",district:""' + cmb_dist + '"",taluk:""' + cmb_taluk + '"",village:""' + cmb_village + '"",parent_code:""' + orgnid + '"",user:""' + user_code +'""}',
                    url: ""/ReportFarmerBasicInfo/Landdetailsinfo"",
                    dataType: ""json"",
                    contentType: ");
            WriteLiteral(@"'application/json; charset=utf-8',
                    success: function (response) {
                        if (response.length == 0) {
                            kendoAlert('No Records found');
                        }
                        //var row_count = response.length;
                        /*    $('#lblprog').hide();*/
                        $(""#display_loading"").hide();
                        $('#refresh').show();
                        $(""#clear"").show();
                        Screen_Id = ""FARMLANDCRPT"";
                        permission = sec_PermissionNew(Screen_Id);
                        var security = permission;
                        console.log(security);
                        if (security['print'] == true) {
                            $(""#btnExport"").show();
                        }
                        else {
                            $(""#btnExport"").hide();
                        }
                       
                   
                ");
            WriteLiteral(@"        if (response != null) {
                            //if (pager_click == true) {
                            //    $(""#LandDetailsInforeport_grid"").empty();
                            //    $(""#LandDetailsInforeport_grid"").append(""<div id='LandDetailsInforeport_grid'></div>"");
                            //    $(""#LandDetailsInforeport_grid"").append(""<div id='pager'></div>"");
                            //    SetPager(row_count);
                            //}
                            //var data = changedataType(res);
                            $(""#gd_land"").empty();
                            $(""#gd_land"").append(""<div id='LandDetailsInforeport_grid'></div>"");
                            listgrid(response);
                        }
                      
                    },
                    error: function (er) {
                        $('#lblprog').hide();
                        $('#refresh').show();
                        $(""#btnExport"").show();
                  ");
            WriteLiteral(@"      $(""#clear"").show();
                        alert(er)
                        console.log(er)
                    }

                });
            }
            else {
                //kendoAlert('Please Select Any One Field');
            }

            return false;
        });
    });
</script>
<script>
    function load_master_code() {
        try {
            var data = {};
            data.screen_Id = ""FARMLAND"";
            var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function ExportButtonClick() {
        debugger
        var grid = $(""#LandDetailsInforeport_grid"").data(""kendoGrid"");
        if (grid.dataSource.total() == 0) {
            kendoAlert('No records available in the Grid to Export!!!');
        }
        else {
            grid.bind(""excelExport"", function (e) {
                debugger;
  ");
            WriteLiteral(@"              e.workbook.fileName = ""Land Details Info Report.xlsx"";
                var rows1 = e.workbook.sheets[0];

                var sheet = e.workbook.sheets[0];
                var gd = $(""#LandDetailsInforeport_grid"").data(""kendoGrid"");
                var gd_fi = $(""#LandDetailsInforeport_grid"").data(""kendoGrid"").dataSource;
                var filters = gd_fi.filter();
                var allData = gd_fi.data();
                var query = new kendo.data.Query(allData);
                var data = query.filter(filters).data;
                var data_tt = gd.dataSource.data();
                var sheet = e.workbook.sheets[0];
                var gridColumns = gd.columns;

                var columnCells = [];
                for (var c = 0; c < gridColumns.length; c++) {
                    var fieldName = gd.columns[c].hidden;
                    if (typeof (fieldName) === ""undefined"") {
                        var cellValue = gridColumns[c].title ? gridColumns[c].title : gridColu");
            WriteLiteral(@"mns[c].field;
                        columnCells.push({ value: cellValue, autoWidth: true, background: ""#7a7a7a"", color: ""#fff"" });
                    }
                }
                var rows = [{ cells: columnCells, type: ""header"" }];
                for (var i = 0; i < data.length; i++) {
                    var rowCells = [];
                    for (var j = 0; j < gridColumns.length; j++) {

                        var fieldName = gd.columns[j].hidden;
                        if (typeof (fieldName) === ""undefined"") {
                            var cellValue = data[i][gridColumns[j].field];
                            rowCells.push({ value: cellValue });
                        }
                    }
                    rows.push({ cells: rowCells, type: ""data"" });
                }

                sheet.rows = rows;

            });
      var InputString = $(""#hdn_inputstring"").val();
            var data = {};
            data.userId = getlocalStorage(""User_Id_Value"");
  ");
            WriteLiteral(@"          var user_code = data.userId;
            var Report_Name = ""Land Details Info Report"";
            var flag = 1;
            var data = { report_name: Report_Name, input_string: InputString, flag: flag, userid: user_code };
         $.ajax({
            url: '");
#nullable restore
#line 620 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI_Reports\Views\ReportFarmerBasicInfo\ReportLandDetailsInfo.cshtml"
             Write(Url.Action("ExportExcelDownload", "ReportFarmerBasicInfo"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""post"",
            contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response1) {
            debugger;
            if (response1 != null) {
                debugger;

            }

          },
         error: function (er) {
         alert(er)
        console.log(er)
        }
         });
            grid.saveAsExcel();
            kendoAlert('Exported Sucessfully');
        }
    }
</script>

<script>
    function listpageloadfetch() {
        try {

            var formval = form_Serialize(""frm_landdetailsinforeport"");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = ""ALL"";
            obj_val.FilterBy_Code = ""."";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != """") {
                obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.Filte");
            WriteLiteral(@"rBy_Fromvalue = ""."";
            }
            obj_val.FilterBy_Tovalue = ""."";
            if (obj_val.status_option == """" || obj_val.status_option == undefined) {
                obj_val.status_option = ""V"";
            }

            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Filter = obj_val;
            var colCount = $(""#LandDetailsInforeport_grid"").find('.k-grid-header colgroup > col').length;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var status_Priority = [];
    function listgrid(data) {
        try {
            $(""#LandDetailsInforeport_grid"").kendoGrid({
                excel: {
                    fileName: ""Land Details Info Report.xlsx"",
                    filterable: true,
                    allPages: true
                },
                dataSource: {
                    data: data,
                    pageSize: 20,
                    sch");
            WriteLiteral(@"ema: {
                        model: {
                            fields: {
                                FpoName: { type: ""string"" },
                                FarmerCode: { type: ""string"" },
                                FarmerName: { type: ""string"" },
                                SurName: { type: ""string"" },
                                FatherName: { type: ""string"" },
                                LandType: { type: ""string"" },
                                Ownership: { type: ""string"" },
                                Noof_Acres: { type: ""string"" },
                                SoilType: { type: ""string"" },
                                Irrigation: { type: ""string"" },
                                PolyHouse: { type: ""string"" },

                            }
                        }
                    },
                },
                filterable: {
                    enabled: true,
                },
                resizable: true,
               ");
            WriteLiteral(@" filterMenuInit: function (e) {
                    var gd = $(""#LandDetailsInforeport_grid"").data(""kendoGrid"");
                    filter_row(gd);
                },
                height: 380,
                sortable: false,
                selectable: true,
                selectable: ""singl"",
                pageable: {
                    refresh: false,
                    pageSizes: true,
                    buttonCount: 5
                },
                navigatable: true,
                groupable: false,
                columns: [

                    {
                        field: ""FpoName"",
                        title: ""FPO Name"",
                        width: 100,
                        filterable: false
                    },

                    {
                        field: ""FarmerCode"",
                        title: ""Farmer Code"",
                        width: 100,
                        filterable: false
                    },

                ");
            WriteLiteral(@"    {
                        field: ""FarmerName"",
                        title: ""Farmer First Name"",
                        width: 100,
                        filterable: false
                    },

                    {
                        field: ""SurName"",
                        title: ""Surname"",
                        width: 100,
                        filterable: false
                    },

                    {
                        field: ""FatherName"",
                        title: ""Father Name"",
                        width: 80,
                        filterable: false
                    },
                    {
                        field: ""LandType"",
                        title: ""Land Type"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
      ");
            WriteLiteral(@"                      }
                        },
                        width: 80,

                    },
                    {
                        field: ""Ownership"",
                        title: ""Ownership"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 80,

                    },
                    {
                        field: ""Noof_Acres"",
                        title: ""No of Acres"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
        ");
            WriteLiteral(@"                },
                        width: 80,
                        attributes: { style: ""text-align:right;"" },
                    },

                    {
                        field: ""SoilType"",
                        title: ""Soil Type"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 80,

                    },

                    {
                        field: ""Irrigation"",
                        title: ""Irrigation"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
   ");
            WriteLiteral(@"                         }
                        },
                        width: 80,

                    },

                    {
                        field: ""PolyHouse"",
                        title: ""PolyHouse"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 80,

                    }
                ],
                editable: false,
            });
            $("".k-dropdown-operator"").css('display', 'none');
            $(""#LandDetailsInforeport_grid .k-input"").attr('disabled', 'false');
        }
        catch (err) {
            alert(err);
        }
    }


</script>

<script>

    function listRefresh() {
        debugger;
        try {
            setlocalStora");
            WriteLiteral(@"ge('flt_condition', """");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function listclear() {
        try {
            listgrid([]);
            $(""#cmb_dist"").data(""kendoComboBox"").value("""");
            $(""#cmb_taluk"").data(""kendoComboBox"").value("""");
            $(""#cmb_village"").data(""kendoComboBox"").value("""");
            var role = getlocalStorage(""orgn_level"");
            if (role == ""ORG_PF"") {
                $(""#cmb_RIBelongform"").data(""kendoComboBox"").value("""");
                $(""#cmb_FPOBelongform"").data(""kendoComboBox"").value("""");
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<style>
    .k-footerTemplate {
        text-align: right;
    }
</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
