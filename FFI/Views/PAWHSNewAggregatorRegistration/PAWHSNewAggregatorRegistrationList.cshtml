@{
    ViewBag.List = "Aggregator Registration";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}
<form id="PAWHSNEWAggregator_Registration" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="row">
        <div class="col-xs-12">
            <div id="grid_aggregator">
                <div id="Aggregator_Grid"></div>
            </div>
        </div>
    </div>
</form>
<script src="~/API_Scripts/AggregatorReg_PAWHS_getAggregatorReg_APIClient.js"></script>
<script src="~/API_Scripts/AggregatorReg_PAWHS_getAggregatorRegList_APIClient.js"></script>
<script src="~/API_Scripts/AggregatorReg_PAWHS_saveAggregatorReg_APIClient.js"></script>
<script src="~/API_Scripts/PAWHS_getAggregatorReg_Model.js"></script>
<script src="~/API_Scripts/PAWHS_getAggregatorRegList_Model.js"></script>
<script src="~/API_Scripts/PAWHS_saveAggregatorReg_Model.js"></script>
<script src="~/API_Scripts/PAWHSAggregatorreg.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>

<script>
    var menuId = "";
    var permission = "";
    $(document).ready(function () {
        $(".adv_filter").attr("hdrtitle", "Aggregator Registration List");
        $(".adv_filter").attr("fltid", "AggregatorREG");
        $(".Export").attr("hdrtitle", "Aggregator Registration List");
        $(".Export").attr("SubTreeId", "PWAGGREG");
        list_grid_id = "Aggregator_Grid";

        listpageloadfetch();

        Screen_Id = "PWAGGREG";
        permission = sec_Permission(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage("ls_pageList", "");
        filterhover();
    });
</script>

<script>
    //grid load Function
    function listpageloadfetch() {
        debugger;
        try {
            var formval = form_Serialize("PAWHSNEWAggregator_Registration");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = "ALL";
            obj_val.FilterBy_Code = ".";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
                obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_FromValue = ".";
            }
            obj_val.FilterBy_ToValue = ".";

            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Filter = obj_val;
            var Context = data.context;
            $.ajax({
                type: "POST",
                url: '/PAWHSNewAggregatorRegistration/PAWHSNewAggregatorRegistrationListfetch',
                dataType: 'json',
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, FilterBy_Option: Context.Filter.FilterBy_Option, FilterBy_Code: Context.Filter.FilterBy_Code, FilterBy_FromValue: Context.Filter.FilterBy_FromValue, FilterBy_ToValue: Context.Filter.FilterBy_Tovalue }),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    //var list = JSON.parse(response);
                    if (response.context != null) {
                        generate_PAWHSAggregatorOrgs_list(response.context.List);
                    }
                    else {
                        listgrid([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
            //setlocalStorage('flt_condition', "");
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var status_Priority = [];
    function Aggregatorgrid(data) {
        try {
            $.each(data, function (index, value) {
                var flag = false;
                $.each(status_Priority, function (sindex, svalue) {
                    if (svalue == value.status_desc) {
                        flag = true;
                    }
                });
                if (flag == false) {
                    status_Priority.push(value.status_desc);
                }
            });
            $("#Aggregator_Grid").kendoGrid(
             {
                 dataSource: {
                     data: data,
                     pageSize: 20,
                     change: function (e) {
                         setTimeout(function () {
                             var gd = $("#Aggregator_Grid").data("kendoGrid");
                             filter_row(gd);
                             $('.k-i-close').css('display', 'none');
                             $('button.k-button-icon').css('display', 'none');
                             $('#Aggregator_Grid .k-input').prop('disabled', false);
                             $('#Aggregator_Grid .k-input').prop('readonly', true);

                         }, 1);
                     },
                 },
                 toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
                 excelExport: function (e) {
                     var gd = $("#Aggregator_grid").data("kendoGrid");
                     var len = gd.dataSource._data.length;
                     var chkall = $('#chkall').is(':checked');
                     var chkfilter = $('#chkfilter').is(':checked');
                     var chktemp = $('#chktemp').is(':checked');
                     var twokendobox = true;
                     gd.dataSource.pageSize(len);
                     if (e.sender.dataSource._data.length == len) {
                         twokendobox = false;
                         exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                     }
                     else {
                         exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                     }
                     gd.dataSource.pageSize('10');
                     return false;
                 },

                 filterable: {
                     enabled: true,
                     delay: 1500,
                     mode: "menu, row",
                     height: 200,
                     click: function (e) {
                         var gd = $("#Aggregator_Grid").data("kendoGrid");
                         filter_row(gd);
                     }
                 },
                 filterMenuInit: function (e) {
                     var gd = $("#Aggregator_Grid").data("kendoGrid");
                     filter_row(gd);
                 },
                 change: selectRow,
                 height: 450,
                 sortable: true,
                 selectable: true,
                 selectable: "singl",   //  Grid Row Selection
                 pageable: {
                     refresh: false,
                     pageSizes: true,
                     buttonCount: 5
                 },
                 navigatable: true,
                 groupable: false,
                 columns: [
                      {
                         field: "Out_orgn_rowid",
                          title: "orgn Row Id",
                          width: 1,
                          hidden: true,
                      },
                      {
                          field: "Out_aggregator_code",
                          title: "Aggregator Code",
                          filterable: {
                              cell: {
                                  operator: "contains",
                                  inputWidth: 1500
                              }
                          }
                      },
                      {
                          field: "Out_aggregator_name",
                          title: "Aggregator Name",
                          filterable: {
                              cell: {
                                  operator: "contains",
                                  inputWidth: 1500
                              }
                          }
                      },
                         {
                             field: "Out_aggregator_type",
                             title: "Aggregator Type",
                             values: [{ text: 'FPO', value: 'F' }, { text: 'Non FPO', value: 'NM' }],
                             filterable: {
                                 cell: {
                                     operator: "contains",
                                     inputWidth: 1500
                                 }
                             },

                         },


                  {
                      field: "Out_parent_code",
                      title: "Facilitator Org",
                      filterable: {
                          cell: {
                              operator: "contains",
                              inputWidth: 1500
                          }
                      },
                      hidden: true,
                  },
                  {
                      field: "Out_status_desc",
                      title: "Status",
                      filterable: {
                          cell: {
                              operator: "contains",
                              inputWidth: 1500
                          }
                      }
                  },

                  {
                      field: "Out_status_code",
                      title: "status_code",
                      width: 1,
                      hidden: true,
                  },

              {
                  field: "Out_row_timestamp",
                  title: "row_timestamp",
                  width: 1,
                  hidden: true,
              },
                 ]

             });
            $(".k-dropdown-operator").css('display', 'none');
            $("#Aggregator_Grid .k-input").attr('disabled', 'false');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: "--Select Value--"
        });
    }

    function selectRow() {
        try {
            var grid = $("#Aggregator_Grid").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            setlocalStorage("ls_pageList", selectedItem);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>


<script>
    //button navigate functiom
    $("#btn_Edit").bind("click", function () {

        getSerializedSelectedRows('edit');
    });

    $("#btn_View").bind("click", function () {
        getSerializedSelectedRows('view');
    });

    $("#btn_new").bind("click", function () {
        btn_onClick('Create');
        location.href = "../PAWHSNewAggregatorRegistration/PAWHSNewAggregatorRegistrationForm";
    });

    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage("ls_pageList") != undefined) {
                var items = getlocalStorage("ls_pageList");
                if (items.length == 0) {
                    kendoAlert("Please select records");
                }

                else {
                    if (mode == "edit") {
                        btn_onClick('Edit');
                        location.href = "../PAWHSNewAggregatorRegistration/PAWHSNewAggregatorRegistrationForm";
                    }
                    else if (mode == "view") {
                        btn_onClick('View');
                        location.href = "../PAWHSNewAggregatorRegistration/PAWHSNewAggregatorRegistrationForm";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script>
    //fetch function
    function generate_PAWHSAggregatorOrgs_list(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                $("#grid_aggregator").empty();
                $("#grid_aggregator").append("<div id='Aggregator_Grid'></div>");
                Aggregatorgrid(data);

            }
            else {
                Aggregatorgrid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function listRefresh() {
        try {
            setlocalStorage('flt_condition', "");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

