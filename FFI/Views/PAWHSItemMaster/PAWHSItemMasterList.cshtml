@{
    ViewBag.List = "Item Master";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}
<form id="frm_itemmaster_list" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="row">
        <div class="col-xs-12">
            <div id="gd_Item">
                <div id="Item_grid"></div>
            </div>
        </div>
    </div>
</form>
<script src="~/API_Scripts/Item_Master_PAWHS_getItemMaster_APIClient.js"></script>
<script src="~/API_Scripts/Item_Master_PAWHS_getItemMasterList_APIClient.js"></script>
<script src="~/API_Scripts/Item_Master_PAWHS_saveItemMaster_APIClient.js"></script>
<script src="~/API_Scripts/PAWHS_getItemMaster_Model.js"></script>
<script src="~/API_Scripts/PAWHS_getItemMasterList_Model.js"></script>
<script src="~/API_Scripts/PAWHS_saveItemMaster_Model.js"></script>
<script src="~/API_Scripts/PAWHSItemmaster.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/CommonScripts/ExportExcel.js"></script>
<script src="~/CommonScripts/Common_func.js"></script>
<script>
    var menuId = "";
    var permission = "";
    $(document).ready(function () {
        $(".adv_filter").attr("hdrtitle", "Item Master List");
        $(".adv_filter").attr("fltid", "ItemMas");
        $(".Export").attr("hdrtitle", "Item Master List");
        $(".Export").attr("SubTreeId", "PWITEMMAS");
        list_grid_id = "Item_grid";

        listpageloadfetch();

        Screen_Id = "PWITEMMAS";
        permission = sec_Permission(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage("ls_pageList", "");
        filterhover();
    });
</script>

<script>
    function listpageloadfetch() {
        debugger;
        try {
            var formval = form_Serialize("frm_aggr_orgs");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = "ALL";
            obj_val.FilterBy_Code = ".";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
                obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_FromValue = ".";
            }
            obj_val.FilterBy_ToValue = ".";

            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Filter = obj_val;

            //Item List Loaded start  18-05-2020

            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, FilterBy_Option: Context.Filter.FilterBy_Option, FilterBy_Code: Context.Filter.FilterBy_Code, FilterBy_Fromvalue: Context.Filter.FilterBy_FromValue, FilterBy_ToValue: Context.Filter.FilterBy_ToValue}),
                url: "/PAWHSItemMaster/GetMasterList",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        debugger;
                        generate_ItemMaster_list(response.context.List)
                    }
                    else {
                        Itemgrid([]);
                    }

                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }
               

            });






            //Item List Loaded start  End


            //retrieve_ItemMaster_list(data);
            //setlocalStorage('flt_condition', "");
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var status_Priority = [];
    function Itemgrid(data) {
        try{
            $.each(data, function (index, value) {
                var flag = false;
                $.each(status_Priority, function (sindex, svalue) {
                    if (svalue == value.status_desc) {
                        flag = true;
                    }
                });
                if (flag == false) {
                    status_Priority.push(value.status_desc);
                }
            });
    $("#Item_grid").kendoGrid(
        {
            excel: {
                fileName: "Item Master.xlsx",
                filterable: true,
                allPages: false
            },
            dataSource: {
                data: data,
                pageSize: 20,
                change: function (e) {
                    setTimeout(function () {
                        var gd = $("#Item_grid").data("kendoGrid");
                        filter_row(gd);
                        $('.k-i-close').css('display', 'none');
                        $('button.k-button-icon').css('display', 'none');
                        $('#Item_grid .k-input').prop('disabled', false);
                        $('#Item_grid .k-input').prop('readonly', true);

                    }, 1);
                },
            },
            toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
            excelExport: function (e) {
                debugger;
               // var gd = $("#Item_grid").data("kendoGrid");
            //    var len = gd.dataSource._data.length;
            //    var chkall = $('#chkall').is(':checked');
            //    var chkfilter = $('#chkfilter').is(':checked');
            //    var chktemp = $('#chktemp').is(':checked');
            //    var twokendobox = true;
            //    gd.dataSource.pageSize(len);
            //    if (e.sender.dataSource._data.length == len) {
            //        twokendobox = false;
            //        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
            //    }
            //    else {
            //        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
            //    }
            //    gd.dataSource.pageSize('10');
            //    return false;
                //},
                var gd = $("#Item_grid").data("kendoGrid");
                var gd_fi = $("#Item_grid").data("kendoGrid").dataSource;

                var filters = gd_fi.filter();
                var allData = gd_fi.data();
                var query = new kendo.data.Query(allData);
                var data = query.filter(filters).data;
                var data_tt = gd.dataSource.data();
                

                var sheet = e.workbook.sheets[0];
                var gridColumns = gd.columns;

                var columns = gridColumns.map(function (col) {
                    var hidden_vl = col.hidden;
                    if (typeof (hidden_vl) == "undefined") {
                        return {
                            value: col.title ? col.title : col.field,
                            autoWidth: true,
                            background: "#7a7a7a",
                            color: "#fff"
                        }
                    };

                });
                var rows = [{ cells: columns, type: "header" }];


                for (var i = 0; i < data.length; i++) {
                    var rowCells = [];
                    for (var j = 0; j < gridColumns.length; j++) {

                        var fieldName = gd.columns[j].hidden;
                        if (typeof (fieldName) === "undefined") {
                            var cellValue = data[i][gridColumns[j].field];
                            rowCells.push({ value: cellValue });
                        }
                    }
                    rows.push({ cells: rowCells, type: "data" });
                }


                sheet.rows = rows;
               
                return false;
            },
            filterable: {
                enabled: true,
                delay: 1500,
                mode: "menu, row",
                height: 200,
                click: function (e) {
                    var gd = $("#Item_grid").data("kendoGrid");
                    filter_row(gd);
                }
            },
            filterMenuInit: function (e) {
                var gd = $("#Item_grid").data("kendoGrid");
                filter_row(gd);
            },
            change: selectRow,
            height: 450,
            sortable: true,
            selectable: true,
            selectable: "singl",   //  Grid Row Selection
            pageable: {
                refresh: false,
                pageSizes: true,
                buttonCount: 5
            },
            navigatable: true,
            groupable: false,
            columns: [
                {
                    field: "Out_item_code",
                    title: "Item Code",
                    filterable: {
                        cell: {
                            operator: "contains",
                            inputWidth: 1500
                        }
                    }
                },
                  {
                      field: "Out_item_name",
                      title: "Item Name",
                      filterable: {
                          cell: {
                              operator: "contains",
                              inputWidth: 1500
                          }
                      }
                  },
                   {
                       field: "Out_item_type",
                       title: "Item Type",
                       filterable: {
                           cell: {
                               operator: "contains",
                               inputWidth: 1500
                           }
                       }
                   },
                   {
                       field: "Out_uom_code",
                       title: "Standard UOM",
                       filterable: {
                           cell: {
                               operator: "contains",
                               inputWidth: 1500
                           }
                       }
                   },
                {
                    field: "Out_item_rowid",
                    title: "item_rowid",
                    width: 1,
                    hidden: true,
                },
                  {
                      field: "Out_agg_code",
                      title: "agg_code",
                      width: 1,
                      hidden: true,
                  },
                  
                  {
                      field: "Out_item_ll_name",
                      title: "item_ll_name",
                      width: 1,
                      hidden: true,
                  },
                 
                  {
                      field: "Out_fg_category",
                      title: "fg_category",
                      width: 1,
                      hidden: true,
                  },
                  {
                      field: "Out_fg_subcategory",
                      title: "fg_subcategory",
                      width: 1,
                      hidden: true,
                  },
                  
                   {
                       field: "Out_hsn_code",
                       title: "fg_category",
                       width: 1,
                       hidden: true,
                   },
                  {
                      field: "Out_hsn_description",
                      title: "hsn_description",
                      width: 1,
                      hidden: true,
                  },
                  {
                      field: "Out_status_code",
                      title: "status_code",
                      width: 1,
                      hidden: true,
                  },
                  {
                      field: "Out_status_desc",
                      title: "status_desc",
                      width: 1,
                      hidden: true,
                  },
                  {
                      field: "Out_row_timestamp",
                      title: "row_timestamp",
                      width: 1,
                      hidden: true,
                  },
            ]

        });
    $(".k-dropdown-operator").css('display', 'none');
    $("#Item_grid .k-input").attr('disabled', 'false');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: "--Select Value--"
        });
    }

    function selectRow() {
        try {
            var grid = $("#Item_grid").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            setlocalStorage("ls_pageList", selectedItem);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>
<script>
    $("#btn_Edit").bind("click", function () {
        getSerializedSelectedRows('edit');
    });

    $("#btn_View").bind("click", function () {
        getSerializedSelectedRows('view');
    });

    $("#btn_new").bind("click", function () {
        btn_onClick('Create');
        location.href = "../PAWHSItemMaster/PAWHSItemMasterForm";
    });

    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage("ls_pageList") != undefined) {
                var items = getlocalStorage("ls_pageList");
                if (items.length == 0) {
                    kendoAlert("Please select records");
                }

                else {
                    if (mode == "edit") {
                        btn_onClick('Edit');
                        location.href = "../PAWHSItemMaster/PAWHSItemMasterForm";
                    }
                    else if (mode == "view") {
                        btn_onClick('View');
                        location.href = "../PAWHSItemMaster/PAWHSItemMasterForm";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script>
    function generate_ItemMaster_list(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                $("#gd_Item").empty();
                $("#gd_Item").append("<div id='Item_grid'></div>");
                Itemgrid(data);
            }
            else {
                Itemgrid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function listRefresh() {
        try {
            setlocalStorage('flt_condition', "");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>



