@{
    ViewBag.List = "Generate Share certificates";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}
<form id="GenerateShareCertificate" class="form-horizontal">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-12">

                    <div class="row">
                        <div id="gd_GenerateShareCertificate" class="col-xs-12">
                            <div id="ShareCertificate_grid"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script>
    click_act_name = "GenerateShareCertificate";
    click_ctrl_name = "Generate ShareCerticate";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script>

    var menuId = "";
    var permission = "";
    $(document).ready(function () {

        kendodate_format();
        $(".adv_filter").attr("hdrtitle", "Generate ShareCertificate");
        $(".adv_filter").attr("fltid", "GenerateShareCertificate");
        $(".Export").attr("hdrtitle", "Generate ShareCertificate List");
        $(".Export").attr("SubTreeId", "SHRGEN");


        Screen_Id = "SHRGEN";
        permission = sec_Permission(Screen_Id);
        //page_load_list_permission(permission);
        $('#btn_Edit').attr("disabled", true);
        setlocalStorage("ls_pageList", "");
        $("#RI").hide();
        $("#FPO").hide();
        listpageloadfetch();
    });
</script>
<script>
    function listpageloadfetch() {
        try {
            var formval = form_Serialize("GenerateShareCertificate");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = " in ('QCD_SHA_CERT_DUP','QCD_SHA_CERT_ORG')";
            obj_val.FilterBy_Code = ".";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
                obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_FromValue = ".";
            }
            obj_val.FilterBy_ToValue = ".";


            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Filter = obj_val;
            var Context = data.context;
            $.ajax({
                type: "POST",
                url: '/GenerateSharecertificates/GenerateSharecertificatesListfetch',
                dataType: 'json',
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, FilterBy_Option: Context.Filter.FilterBy_Option, FilterBy_Code: Context.Filter.FilterBy_Code, FilterBy_FromValue: Context.Filter.FilterBy_FromValue, FilterBy_ToValue: Context.Filter.FilterBy_ToValue }),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    //var list = JSON.parse(response);
                    if (response.context.List != null) {
                        generate_ShareCertificate_list(response.context.List);
                    }
                    else {
                        GenerateShareCertificateGrid([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });          
            //setlocalStorage('flt_condition', "");
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var status_Priority = [];
    function GenerateShareCertificateGrid(data) {
        try {
            $.each(data, function (index, value) {
                var flag = false;
                $.each(status_Priority, function (sindex, svalue) {
                    if (svalue == value.status_desc) {
                        flag = true;
                    }
                });
                if (flag == false) {
                    status_Priority.push(value.status_desc);
                }
            });
            $("#ShareCertificate_grid").kendoGrid(
                {
                    dataSource: {
                        data: data,
                        pageSize: 20,
                        change: function (e) {
                            setTimeout(function () {
                                var gd = $("#ShareCertificate_grid").data("kendoGrid");
                                filter_row(gd);
                                $('.k-i-close').css('display', 'none');
                                $('button.k-button-icon').css('display', 'none');
                                $('#ShareCertificate_grid .k-input').prop('disabled', false);
                                $('#ShareCertificate_grid .k-input').prop('readonly', true);
                            }, 1);
                        },
                    },
                    toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
                    excelExport: function (e) {
                        var gd = $("#ShareCertificate_grid").data("kendoGrid");
                        var len = gd.dataSource._data.length;
                        var chkall = $('#chkall').is(':checked');
                        var chkfilter = $('#chkfilter').is(':checked');
                        var chktemp = $('#chktemp').is(':checked');
                        var twokendobox = true;
                        gd.dataSource.pageSize(len);
                        if (e.sender.dataSource._data.length == len) {
                            twokendobox = false;
                            exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                        }
                        else {
                            exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                        }
                        gd.dataSource.pageSize('10');
                        return false;
                    },
                    //filterable: {
                    //    enabled: true,
                    //    delay: 1500,
                    //    mode: "menu, row",
                    //    height: 200,
                    //    click: function (e) {
                    //        var gd = $("#ShareCertificate_grid").data("kendoGrid");
                    //        filter_row(gd);
                    //    }
                    //},
                    filterable: true,
                    resizable: true, 
                    filterMenuInit: function (e) {
                        var gd = $("#ShareCertificate_grid").data("kendoGrid");
                        filter_row(gd);
                    },
                    change: selectRow,
                    height: 450,
                    sortable: true,
                    selectable: true,
                    //  Grid Row Selection
                    pageable: {
                        refresh: false,
                        pageSizes: true,
                        buttonCount: 5
                    },
                    navigatable: true,
                    groupable: false,
                    columns: [
                         {
                            field: "Out_register_rowid",
                             title: "register_rowid",                             
                             hidden: true,
                         },
                         {
                             field: "Out_fpoorgn_code",
                             title: "fpoorgn_code",                            
                             hidden: true,
                        },
                       

                    {
                        field: "Out_register_no",
                        title: "Report ID",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Contains"
                                }
                            }
                        }, 
                        width: 150

                        },
                        {
                            field: "Out_register_date",
                            title: "Report Date",
                            filterable: {
                                extra: false,
                                operators: {
                                    string: {
                                        contains: "Contains"
                                    }
                                }
                            }, 
                            width: 150

                        },
                    {
                        field: "Out_register_type_code",
                        title: "register_type_desc",                        
                        hidden: true,
                    },
                    {
                        field: "Out_register_type_desc",
                        title: "Report Name",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Contains"
                                }
                            }
                        }, 
                        width: 150

                    },
                   
                     {
                         field: "Out_status_code",
                         title: "STATUS Id", 
                         hidden: true,
                     },
                    {
                        field: "Out_status_desc",
                        title: "Status",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Contains"
                                }
                            }
                        }, 
                        width: 150

                    }
                    ],

                });
            $(".k-dropdown-operator").css('display', 'none');
            $("#ShareCertificate_grid .k-input").attr('disabled', 'false');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function selectRow() {
        var grid = $("#ShareCertificate_grid").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        setlocalStorage("ls_pageList", selectedItem);
    }

    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: "--Select Value--"
        });
    }

</script>

<script>
    $("#btn_Edit").bind("click", function () {
        getSerializedSelectedRows('edit');
    });

    $("#btn_View").bind("click", function () {
        getSerializedSelectedRows('view');
    });

    $("#btn_new").bind("click", function () {
        btn_onClick('Create');
        location.href = "../GenerateSharecertificates/GenerateSharecertificatesForm";
    });
    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage("ls_pageList") != undefined) {
                var items = getlocalStorage("ls_pageList");
                if (items.length == 0) {
                    kendoAlert("Please select records");
                }
                else {
                    if (mode == "edit") {
                        btn_onClick('Edit');
                        location.href = "../GenerateSharecertificates/GenerateSharecertificatesForm";
                    }
                    else if (mode == "view") {
                        btn_onClick('View');
                        location.href = "../GenerateSharecertificates/GenerateSharecertificatesForm";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<script>
    function generate_ShareCertificate_list(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                $("#gd_GenerateShareCertificate").empty();
                $("#gd_GenerateShareCertificate").append("<div id='ShareCertificate_grid'></div>");
                GenerateShareCertificateGrid(data);


            }
            else {
                GenerateShareCertificateGrid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function listRefresh() {
        try {
            setlocalStorage('flt_condition', "");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>




