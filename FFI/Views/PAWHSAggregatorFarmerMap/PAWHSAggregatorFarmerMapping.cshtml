@{
    ViewBag.Form = "Aggregator -> Farmer Mapping";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";
}

<script src="~/API_Scripts/Aggr_Vs_FarmerMapping_PAWHS_getAggregatorVsFarMap_APIClient.js"></script>
<script src="~/API_Scripts/Aggr_Vs_FarmerMapping_PAWHS_saveAggregatorVsFarMap_APIClient.js"></script>
<script src="~/API_Scripts/Aggr_Vs_FarmerMapping_PAWHS_getMappedFarmersList_APIClient.js"></script>
<script src="~/API_Scripts/PAWHS_getMappedFarmersList_Model.js"></script>
<script src="~/API_Scripts/PAWHS_saveAggregatorVsFarMap_Model.js"></script>
<script src="~/API_Scripts/PAWHS_getAggregatorVsFarMap_Model.js"></script>
<script src="~/API_Scripts/PAWHSAggrVSMAP.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/CommonScripts/common.js"></script>
<script src="~/CommonScripts/tamil.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>


<form id="Mapping_Form" class="form-horizontal">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:1px">

            <div class="row" style="padding-bottom:10px">
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="aggregator_code" class=" col-sm-5 control-label">Aggregator Code</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtorgn_code_desc" class="form-control" value="" disabled />
                        </div>
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class=" form-group">
                        <label for="aggregator_nameEng" class=" col-lg-5 control-label">Aggregator Name </label>
                        <div class=" col-lg-6">
                            <input type="text" value="" id="txtorgn_type_desc" name="In_aggregator_name" class="form-control" disabled />
                        </div>
                    </div>
                </div>
            </div>

            <div class="row" style="padding-bottom:10px">
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="villages_covered" class=" col-lg-5 control-label">Village(s) Covered</label>
                        <div class=" col-lg-6">
                            @*<label for="villages_covered" id="lblVillages" name=""> Mettur</label>*@
                            <input type="text" value="" id="txtorgn_vill" name="In_village_covered_code" class="form-control" disabled />
                            <input type="hidden" id="txtorgn_vill_code" name="IOU_agg_code">
                        </div>
                        <div id="pay_help">
                            <a class="HelpWindow fa fa-search fa-lg" role="button" id="pay_help1" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Village" searchid="S37" data-target="#HelpModal" onclick=transfer(this,"form","","form_control"); title="Search" style="font-size: 19px; "></a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6" style="display:none">
                <div class="form-group" style="display:none;">
                    <label for="txt_agg_farmid" class="col-sm-5 control-label ">AggFarm row id:</label>
                    <div class="col-sm-4">
                        <input type="text" id="txt_agg_farmid" name="IOU_agg_farmer_rowid" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>

            <div class="col-sm-3">
                <div class="form-group" style="display:none;">
                    <label for="txt_status_code" class="col-sm-5 control-label">Status_code</label>
                    <div class="col-sm-4">
                        <input type="text" value="A" id="txt_status_code" name="In_status_code" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group" style="display:none;">
                    <label for="txtMode" class="col-sm-5 control-label">Mode</label>
                    <div class="col-sm-4">
                        <input type="text" id="txtMode" name="In_mode_flag" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>
            <div class="col-sm-3">
                <div class="form-group" style="display:none;">
                    <label for="row_timestamp" class="col-sm-5 control-label">Timestamp:</label>
                    <div class="col-sm-4">
                        <input type="text" id="txt_row_timestamp" name="In_row_timestamp" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>
            @*<div id="divDown" style="left:870px" class="col-sm-10">
                    <input id="btnMap" type="button" class="btn btn-info" data-toggle="tooltip" value="Map" title="Click Here to map the Rows" onclick=" map()"> </input>
                </div>*@
            <div class="row">
                <section class="col-md-12">
                    <div id="tab_list" class="col-md-12">
                        <ul class="nav nav-tabs">
                            <li class="active">
                                <a href="#" role="tab" data-toggle="tab">
                                    Farmers not mapped
                                </a>
                            </li>
                            <div id="divDown" style="left:870px" class="col-sm-10">
                                <input id="btnMap" type="button" class="btn btn-info" data-toggle="tooltip" value="Map" title="Click Here to map the Rows" onclick=" map()"> </input>
                            </div>
                        </ul>

                        <div class="tab-content">
                            <div class="tab-pane fade active in" id="">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_farmers_notmapped">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>

            <div class="row">
                <section class="col-md-12">
                    <div id="tab_list" class="col-md-12">
                        <ul class="nav nav-tabs">
                            <li class="active">
                                <a href="#" role="tab" data-toggle="tab">
                                    Farmers mapped
                                </a>
                            </li>
                            <div id="divDown" class="col-sm-4" style="left:870px" position:relative">
                                @*<button id="btnunmap" class="btn btn-info" data-toggle="tooltip" name="UnMap" onclick="ValidateUnMapGrid()" title=""> <span class="glyphicon glyphicon-edit"></span> Un Map </button>*@
                                <input id="btnUnMap" type="button" class="btn btn-info" data-toggle=" tooltip" value="UnMap" onclick="ValidateUnMapGrid()" title="Click Here to Unmap the Rows"> </input>
                            </div>

                        </ul>

                        <div class="tab-content">
                            <div class="tab-pane fade active in" id="">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="gd_farmapped">
                                            <div id="grid_farmers_mapped">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</form>

<script>
    var FinalResultSet = [];

    $(document).ready(function () {
        master_Flmain();
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#Mapping_Form");
        kendo.init(container);
        container.kendoValidator({
        });
        $(".file_attach").attr("hdrtitle", "Aggregator -> Farmer Mapping");
        $(".notes").attr("hdrtitle", "Aggregator -> Farmer Mapping");
        $("#lblForm_menuid").text("AGG/FARMAP");

        Screen_Id = "PWAGG/FARMAP";
        permission = sec_Permission(Screen_Id);

        $('#HelpModal').on('hide.bs.modal', function (e) {
            if ($("#txtorgn_vill").val() != undefined && $("#txtorgn_vill").val() != "") {
                fetch_name();
            }
        });
        $('#divUserRole8 #review').hide();
        grid_farmer_mapped([]);
        grid_farmer_notmap([]);

        var org_id = getlocalStorage('org_id');
        var org_type = getlocalStorage('org_type');
        var orgtname = getlocalStorage('orgtname');
        var org = getlocalStorage('org');
        $('#txtorgn_code_desc').val(org_id);
        $('#txtorgn_type_desc').val(org);
        listpageloadfetch();
    });
    @*</script>

<script>*@
    var status_Priority = [];
    function grid_farmer_notmap(data) {
        try {
            //$.each(data, function (index, value) {
            //    var flag = false;
            //    $.each(status_Priority, function (sindex, svalue) {
            //        if (svalue == value.status_desc) {
            //            flag = true;
            //        }
            //    });
            //    if (flag == false) {
            //        status_Priority.push(value.status_desc);
            //    }
            //});
            //gridRowID = -1;
            //data = addRandomNum(data);
            $("#grid_farmers_notmapped").kendoGrid({
                dataSource: {
                    data: data,
                    pageSize: 20,
                    change: function (e) {
                        setTimeout(function () {
                            var gd = $("#grid_farmers_notmapped").data("kendoGrid");
                            filter_row(gd);
                            $('.k-i-close').css('display', 'none');
                            $('button.k-button-icon').css('display', 'none');
                            $('#grid_farmers_notmapped .k-input').prop('disabled', false);
                            $('#grid_farmers_notmapped .k-input').prop('readonly', true);
                        }, 1);
                    },

                },
                //selectable: "multiple, row",

                filterable: {
                    enabled: true,
                    delay: 1500,
                    mode: "menu, row",
                    height: 200,
                    click: function (e) {
                        var gd = $("#grid_farmers_notmapped").data("kendoGrid");
                        filter_row(gd);
                    }
                },
                filterMenuInit: function (e) {
                    var gd = $("#grid_farmers_notmapped").data("kendoGrid");
                    filter_row(gd);
                },

                height: 300,
                sortable: true,
                selectable: true,
                selectable: "singl",
                // dataBinding: setDefaultValues,
                //selectable: "multiple",
                //navigatable: true,
                //dataBound: onDataBound,
                pageable: {
                    refresh: false,
                    pageSizes: true,
                    buttonCount: 5
                },
                navigatable: false,
                groupable: false,
                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_farmers_notmapped').data('kendoGrid').tbody.children();
                    //setColor(rows, resultData);
                    var grid = $("#grid_farmers_notmapped").data("kendoGrid");
                    grid.tbody.find('>tr').each(function () {
                        var dataItem = grid.dataItem(this);
                        if (dataItem.status_code == "Dublicate") {
                            $(this).css('color', 'red');
                            //$(this).addClass('disabled');
                            //grid.table.find("tr").find("td:last input").prop("checked", false);
                            //$(this).find("tr").find("td:last input").prop("checked", false);
                            $(this).find('[type=checkbox]').prop('disabled', true);
                            //$('tr.k-state-selected').find('[type=checkbox]').prop('checked', true);
                            //if ($(this).attr('checked')) {
                            //    $('.check-box').attr('disabled', true);
                            //}
                        }
                    });
                },

                change: function (e) {
                    $('tr').find('[type=checkbox]').prop('checked', false);
                    $('tr.k-state-selected').find('[type=checkbox]').prop('checked', true);
                },

                columns: [
                    {

                        title: "Select All",

                        headerTemplate: "<input type='checkbox'  id='selectall' class='k-checkbox header-checkbox' ><label class='k-checkbox-label' for='selectall'> Select All</label>",
                        // headerTemplate: "<label class='k-checkbox-label' for='selectall'><input type='checkbox'  id='selectall' class='k-checkbox header-checkbox' > Select All</label>",
                        template: "<input type='checkbox' name='id' class='checkbox' />",
                        width: 80,

                    },
                     {
                         field: "In_farmer_rowid",
                         title: "farmer_rowid",
                         hidden: true,
                         width: 100,
                     },

                {
                    field: "In_farmer_id",
                    title: "Farmer ID",
                    filterable: {
                        cell: {
                            operator: "contains",
                            inputWidth: 1500
                        }
                    },
                    width: 120,
                },
            {
                field: "In_given_name",
                title: "Given Name",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 120,
            },
            {
                field: "In_sur_name",
                title: "Surname",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 100
            },
            {
                field: "In_village_name",
                title: "Village Name",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 100
            },
            {

                field: "In_dob",
                title: "DoB",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 100
            },
            {
                field: "In_gender",
                title: "Gender",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 100
            },
            {
                field: "In_regd_mobile_no",
                title: "Regd. Mobile No.",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                attributes: { style: "text-align:right;" },
                width: 100
            },
            {
                field: "In_status_code",
                title: "status_code",
                hidden: true,
                width: 100,
            },
             {
                 field: "In_status_desc",
                 title: "Status",
                 filterable: {
                     cell: {
                         operator: "contains",
                         inputWidth: 1500
                     }
                 },
                 width: 100
             }, {
                 field: "In_mode_flag",
                 title: "mode_flag",
                 hidden: true,
                 width: 100,
             }
                ],

            });
            //function ondatabound(e) {
            //    var selecteditem = [];
            //    $(".checkbox").bind("change", function (e) {
            //        $(e.target).closest("tr").toggleclass("k-state-selected");
            //    });
            //}
            //$("#pager").kendopager({
            //    autobind: false,
            //    datasource: data,
            //    pagesizes: true
            //});
            $("#selectall").click(function (ev) {
                var checked = ev.target.checked;
                //alert(checked);
                if (checked) {
                    $('.checkbox').prop('checked', true);
                    //selectRow();
                } else {
                    $('.checkbox').prop('checked', false);
                }
            });


            $(".k-dropdown-operator").css('display', 'none');
            $("#grid_farmers_notmapped .k-input").attr('disabled', 'false');

            function onCheck(e) {
                $(e.target).parents('tr').addClass('disabled');
            }
        }

        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    var gridRowID = 1;
    function sel_checkbox() {
        gridRowID++;
        return '<input id="chk_sel_' + gridRowID + '" class="checkbox" type="checkbox" />';
    }

    function selectRow() {

        try {
            var grid = $("#grid_farmers_notmapped").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            setlocalStorage("ls_List", selectedItem);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    @*</script>

<script>*@
    function grid_farmer_mapped(data) {
        try {

            $("#grid_farmers_mapped").kendoGrid({
                dataSource: {
                    data: data,
                    //pageSize: 20,
                    change: function (e) {
                        setTimeout(function () {
                            var gd = $("#grid_farmers_mapped").data("kendoGrid");
                            filter_row(gd);

                            $('.k-i-close').css('display', 'none');
                            $('button.k-button-icon').css('display', 'none');
                            $('#grid_farmers_mapped .k-input').prop('disabled', false);
                            $('#grid_farmers_mapped .k-input').prop('readonly', true);
                        }, 1);
                    },
                },
                toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
                excelExport: function (e) {
                    var gd = $("#grid_farmers_mapped").data("kendoGrid");
                    var len = gd.dataSource._data.length;
                    var chkall = $('#chkall').is(':checked');
                    var chkfilter = $('#chkfilter').is(':checked');
                    var chktemp = $('#chktemp').is(':checked');
                    var twokendobox = true;
                    gd.dataSource.pageSize(len);
                    if (e.sender.dataSource._data.length == len) {
                        twokendobox = false;
                        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    }
                    else {
                        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    }
                    gd.dataSource.pageSize('10');
                    return false;
                },
                filterable: {
                    enabled: true,
                    delay: 1500,
                    mode: "menu1, row1",
                    height: 200,
                    click: function (e) {
                        var gd1 = $("#grid_farmers_mapped").data("kendoGrid");
                        filter_row(gd1);
                    }
                },
                filterMenuInit: function (e) {
                    var gd1 = $("#grid_farmers_mapped").data("kendoGrid");
                    filter_row(gd1);
                },
                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_farmers_mapped').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                //change: selectRow,
                height: 300,
                sortable: true,
                selectable: true,
                selectable: "singl",   //  Grid Row Selection
                pageable: {
                    refresh: false,
                    //pageSizes: true,
                    buttonCount: 5
                },
                navigatable: false,
                groupable: false,
                change: function (e) {
                    $('tr').find('[type=checkbox]').prop('checked', false);
                    $('tr.k-state-selected').find('[type=checkbox]').prop('checked', true);
                    GridRowSelectEvent();
                },

                columns: [
                    {
                        //title: "Select", width: 40,
                        //template: '#=sel_checkbox()#'
                        title: "Select All", width: 80,
                        headerTemplate: "<input type='checkbox'  id='UnMapselectall' class='k-checkbox header-checkbox' ><label class='k-checkbox-label' for='UnMapselectall'> Select All</label>",
                        //headerTemplate: "<input type='checkbox'  id='UnMapselectall' class='k-checkbox header-checkbox'><label class='k-checkbox-label' for='UnMapselectall'></label>",
                        template: "<input type='checkbox' id='id1' class='checkbox1' />"
                    },
                 {
                     field: "In_farmer_rowid",
                     title: "farmer_rowid",
                     hidden: true,
                 },

                {
                    field: "In_farmer_id",
                    title: "Farmer ID",
                    filterable: {
                        cell: {
                            operator: "contains",
                            inputWidth: 1500
                        }
                    },
                    width: 120,
                },
                {
                    field: "In_pa_id",
                    title: "PA ID",
                    filterable: {
                        cell: {
                            operator: "contains",
                            inputWidth: 1500
                        }
                    },
                    width: 120,
                },
            {
                field: "In_given_name",
                title: "Given Name",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 120,
            },
            {
                field: "In_sur_name",
                title: "Surname",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 100
            },
            {
                field: "In_village_name",
                title: "Village Name",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 100
            },
            {

                field: "In_dob",
                title: "DoB",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 100
            },
            {
                field: "In_gender",
                title: "Gender",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 100
            },
            {
                field: "In_regd_mobile_no",
                title: "Regd. Mobile No.",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 100,
                attributes: { style: "text-align:right;" },
            },
             {
                 field: "In_row_timestamp",
                 title: "row_timestamp",
                 hidden: true,
             },
             {
                 field: "In_village_code",
                 title: "village_code",
                 hidden: true,
             },
            {
                field: "In_status_code",
                title: "status_code",
                hidden: true,
            },
             {
                 field: "In_status_desc",
                 title: "Status",
                 filterable: {
                     cell: {
                         operator: "contains",
                         inputWidth: 1500
                     }
                 },
                 width: 100
             }, {
                 field: "In_mode_flag",
                 title: "mode_flag",
                 hidden: true,

             }
                ],
            });

            $("#UnMapselectall").click(function (ev) {
                var checked = ev.target.checked;
                if (checked) {
                    $('.checkbox1').prop('checked', true);
                } else {
                    $('.checkbox1').prop('checked', false);
                }
            });


            $(".k-dropdown-operator").css('display', 'none');
            $("#grid_farmers_mapped .k-input").attr('disabled', 'false');

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    @*</script>

<script>*@
    //function ValidateMapGrid() {
    //    try {

    //        var grid = $("#grid_farmers_notmapped").data("kendoGrid");
    //        var selectedItem = grid.dataItem(grid.select());
    //        if (selectedItem != undefined) {

    //        }
    //        else {
    //            kendoAlert("Please Select the Row For Mapping");
    //            return false;
    //        }
    //    } catch (err) {
    //        alert(err);
    //    }
    //}

    //function ValidateUnMapGrid() {
    //    try {
    //        var grid = $("#grid_farmers_mapped").data("kendoGrid");
    //        var selectedItem = grid.dataItem(grid.select());
    //        if (selectedItem != undefined) {

    //        }
    //        else {
    //            kendoAlert("Please Select the Row For Mapping")
    //        }
    //    } catch (err) {
    //        alert(err);
    //    }
    //}

    function ValidateUnMapGrid() {
        try {
            var grid = $("#grid_farmers_mapped").data("kendoGrid");
            var selected = [];
            grid.tbody.find("input:checked").closest("tr").each(function (index) {
                selected.push(grid.dataItem(this));
            });

            var result = selected;
            if (result.length == 0) {
                kendoAlert("Please select records");
            }
            else {
                FinalResultSet = selected;
                var itemGrid = $("#grid_farmers_notmapped").data("kendoGrid");
                var testdata_unmap = itemGrid.dataSource.data();
                PopulateUnmapItemGrid(testdata_unmap);
                var grid = $("#grid_farmers_notmapped").data("kendoGrid");
                grid.tbody.find('>tr').each(function () {
                    var dataItem = grid.dataItem(this);
                    if (dataItem.status_code == "Dublicate") {
                        $(this).css('color', 'red');
                        $(this).find('[type=checkbox]').prop('disabled', true);
                    }
                });
            }
            $('#UnMapselectall').prop('checked', false);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function PopulateUnmapItemGrid(testdata_unmap) {
        debugger;
        try {
            var productUnmapBookGrid = $("#grid_farmers_mapped").data("kendoGrid");
            var itemGrid_Map = $("#grid_farmers_notmapped").data("kendoGrid");

            var selected = [];
            productUnmapBookGrid.tbody.find("input:checked").closest("tr").each(function (index) {
                selected.push(productUnmapBookGrid.dataItem(this));
            });

            var result = selected;

            // var griddata = testdata;//itemGrid.dataSource.data();
            var recordExist = false;
            $.each(result, function (index, value) {
                var isRecordAvl = false;

                var griddata = testdata_unmap;
                var currentFarmerid = value.In_farmer_id;
                var currentFarmerCode = value.In_given_name;
                //var griddata = itemGrid.dataSource.data();
                var farmer_id;
                var given_name;

                for (item in griddata) {

                    farmer_id = griddata[item].In_farmer_id;
                    given_name = griddata[item].In_given_name
                    if (farmer_id == currentFarmerid) {
                        recordExist = true;
                        //return false;
                        isRecordAvl = true;
                        break;
                    }
                    else {
                        isRecordAvl = false;
                    }
                }

                if (!isRecordAvl) {
                    //isRecordAvl = false;
                    var ds = { In_farmer_id: value.In_farmer_id, In_given_name: value.In_given_name, In_sur_name: value.In_sur_name, In_dob: value.In_dob, In_gender: value.In_gender, In_regd_mobile_no: value.In_regd_mobile_no, In_village_name: value.In_village_name, In_status_code: value.In_status_code, In_status_desc: value.In_status_desc, In_mode_flag: 'I' };
                    itemGrid_Map.dataSource.add(ds);
                    griddata = '';
                    // break;
                }

            });
            if (recordExist) {
                kendoAlert(" One or some farmer(s) are already exists in Mapped Farmers ");
            }

            //End
            //productBookGrid.select().each(function () {
            //$.each(result, function (index, value) {
            //    debugger;
            //    var dataItem = productBookGrid.dataItem($(this));
            //    var ds = { farmer_id: value.farmer_id, given_name: value.given_name, sur_name: value.sur_name, dob: value.dob, gender: value.gender, regd_mobile_no: value.regd_mobile_no, village_name: value.village_name, status_code: value.status_code, status_desc: value.status_desc, mode_flag: 'I' };
            //    itemGrid.dataSource.add(ds);
            //});
            itemGrid_Map.refresh();
            var grid = $("#grid_farmers_mapped").data("kendoGrid");
            $("#grid_farmers_mapped").find("input:checked").each(function () {
                if (!$(this).parents('th').length) {
                    grid.removeRow($(this).closest('tr'));
                }
            })
            grid.refresh();

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function fetch_name() {
        var formval = form_Serialize("Mapping_Form");
        var obj_val = JSON.parse(formval);
        obj_val.IOU_agg_farmer_rowid = "0";
        obj_val.IOU_agg_code = $("#txtorgn_vill_code").val();

        var data_fetch = {};
        data_fetch.context = WebAPIProxy.getContext();
        data_fetch.context.Header = obj_val;
        var Context = data_fetch.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header }),
            url: "/PAWHSAggregatorFarmerMap/AggrServiceList",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_AggrVSmap_detail(response.context.FarmersNotMapped)
                    //listgrid(response.context.List);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {
                    grid_farmer_notmap([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
        //retrieve_AggrVSmap_details(data_fetch);
    }

    function grid_control() {
        try {
            var control_Name = [];
            return control_Name;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function form_control() {
        var control_Name = [
        { "dataCol": "orgn_village_desc", "controlId": "txtorgn_vill", "type": "Text" },
         { "dataCol": "orgn_village", "controlId": "txtorgn_vill_code", "type": "Text" },

        ];
        return control_Name;

    }

    function controlName() {
        try {
            var control_Name = [
            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function trans_input_data() {
        try {
            var trans_coll = [
                { "trasfer": "Yes", "dataCol": "orgn_village_desc ", "controlId": "txtorgn_vill", "grid_id": "", "grid_row_col": "orgn_village_desc" },
            ]
            return trans_coll;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_AggrVSmap_detail(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_farmer_notmap(data);
            }
            else {
                grid_farmer_notmap([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_AggrVSmap_header(res)
    { }

    function map() {
        try {

            var grid = $("#grid_farmers_notmapped").data("kendoGrid");
            var selected = [];
            grid.tbody.find("input:checked").closest("tr").each(function (index) {
                selected.push(grid.dataItem(this));
            });


            var result = selected;
            if (result.length == 0) {
                kendoAlert("Please select records");
            }

            else {
                FinalResultSet = selected;
                var itemGrid = $("#grid_farmers_mapped").data("kendoGrid");
                var testdata = itemGrid.dataSource.data();
                PopulateItemGrid(testdata);
            }
            $('#selectall').prop('checked', false);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function PopulateItemGrid(testdata) {
        try {
            var productBookGrid = $("#grid_farmers_notmapped").data("kendoGrid");
            var itemGrid = $("#grid_farmers_mapped").data("kendoGrid");

            var selected = [];
            productBookGrid.tbody.find("input:checked").closest("tr").each(function (index) {
                selected.push(productBookGrid.dataItem(this));
            });

            var result = selected;

            // var griddata = testdata;//itemGrid.dataSource.data();
            var recordExist = false;
            $.each(result, function (index, value) {
                var isRecordAvl = false;

                var griddata = testdata;
                var currentFarmerid = value.In_farmer_id;
                var currentFarmerCode = value.In_given_name;
                //var griddata = itemGrid.dataSource.data();
                var farmer_id;
                var given_name;

                for (item in griddata) {

                    farmer_id = griddata[item].In_farmer_id;
                    given_name = griddata[item].In_given_name
                    if (farmer_id == currentFarmerid) {
                        recordExist = true;
                        //return false;
                        isRecordAvl = true;
                        break;
                    }
                    else {
                        isRecordAvl = false;
                    }
                }

                if (!isRecordAvl) {
                    //isRecordAvl = false;
                    var ds = { In_farmer_id: value.In_farmer_id, In_given_name: value.In_given_name, In_sur_name: value.In_sur_name, In_dob: value.In_dob, In_gender: value.In_gender, In_regd_mobile_no: value.In_regd_mobile_no, In_village_name: value.In_village_name, In_status_code: value.In_status_code, In_status_desc: value.In_status_desc, In_mode_flag: 'I' };
                    itemGrid.dataSource.add(ds);
                    griddata = '';
                    // break;
                }

            });
            if (recordExist) {
                kendoAlert(" One or some farmer(s) are already exists in Mapped Farmers ");
            }

            //End
            //productBookGrid.select().each(function () {
            //$.each(result, function (index, value) {
            //    debugger;
            //    var dataItem = productBookGrid.dataItem($(this));
            //    var ds = { farmer_id: value.farmer_id, given_name: value.given_name, sur_name: value.sur_name, dob: value.dob, gender: value.gender, regd_mobile_no: value.regd_mobile_no, village_name: value.village_name, status_code: value.status_code, status_desc: value.status_desc, mode_flag: 'I' };
            //    itemGrid.dataSource.add(ds);
            //});
            //Commented BY Sheeba
            itemGrid.refresh();
            var grid = $("#grid_farmers_notmapped").data("kendoGrid");
            $("#grid_farmers_notmapped").find("input:checked").each(function () {
                if (!$(this).parents('th').length) {
                    grid.removeRow($(this).closest('tr'));
                }
            })
            $('#grid_farmers_notmapped').data('kendoGrid').refresh();
            grid.refresh();
            var grid = $("#grid_farmers_notmapped").data("kendoGrid");
            grid.tbody.find('>tr').each(function () {
                var dataItem = grid.dataItem(this);
                if (dataItem.status_code == "Dublicate") {
                    $(this).css('color', 'red');
                    $(this).find('[type=checkbox]').prop('disabled', true);
                }
            });
            //End
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    @*</script>

<script>*@
    function save() {
        debugger;
        try {
            if ($("#txt_agg_farmid").val() == "") {
                $("#txt_agg_farmid").val('0');
            }
            if ($("#txtorgn_type_desc").val() == "") {
                $("#txtorgn_type_desc").val('0');
            }
            if ($("#txtorgn_vill").val() == "") {
                $("#txtorgn_vill").val(' ');
            }
            if ($("#txt_status_code").val() == "") {
                $("#txt_status_code").val('A');
            }
            if ($("#txt_row_timestamp").val() == "") {
                $("#txt_row_timestamp").val('0');
            }
            if ($("#txtMode").val() == "") {
                $("#txtMode").val('I');
            }
            if ($("#txtorgn_vill_code").val() == "") {
                $("#txtorgn_vill_code").val('0');
            }
            $('#txtorgn_vill').removeAttr("disabled");
            $('#txtorgn_type_desc').removeAttr("disabled");
            var formval = form_Serialize("Mapping_Form");
            var obj_val = JSON.parse(formval);
            $('#txtorgn_type_desc').attr("disabled", true);
            $('#txtorgn_vill').attr("disabled", true);


            var grid_val = JSON.stringify($("#grid_farmers_mapped").data().kendoGrid._data);

            //var grid = $("#grid_farmers_notmapped").data("kendoGrid");
            //var grid_val = [];
            //grid.tbody.find("input:checked").closest("tr").each(function (index) {
            //    grid_val.push(grid.dataItem(this));
            //});


            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            //var result = grid_val;
            //var result = FinalResultSet
            $.each(result, function (index, value) {
                var row_id = value.In_farmer_rowid;
                if (row_id == undefined) {
                    result[index].In_farmer_rowid = "0";
                }
                var pa_id = value.In_pa_id;
                if (pa_id == undefined) {
                    result[index].In_pa_id = "0";
                }
                var pa_id = value.In_pa_id;
                if (pa_id == undefined || pa_id == "0") {
                    result[index].In_mode_flag = "I";
                }

                var mmode = result[index].In_mode_flag;
                if (mmode == "S") {
                    result[index].In_mode_flag = "U";
                }

            });
            var obj_grid_val = result;

            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            data.context.FarmersMapped = obj_grid_val;
            var Context = data.context;

            $.ajax({
                type: "POST",
                data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, Header: Context.Header, FarmersMapped: Context.FarmersMapped }),
                url: "/PAWHSAggregatorFarmerMap/SaveAggrDetails",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    var Res = response;
                    if (Res != null) {
                        var mode = $("#txtMode").val();
                        if (mode == "I") {
                            kendoAlert("Aggregator Farmer Mapping Details saved successfully");
                            //retrieve_AggrVSmap_list();
                            get_AggrVSmap_details(Res.context.Header);
                            listpageloadfetch;
                        }
                        else if (mode == "D") {
                            kendoAlert("Aggregator Farmer Mapping inactivate successfully");
                            //retrieve_AggrVSmap_list();
                            get_AggrVSmap_details(Res.context.Header);
                            listpageloadfetch;
                        }
                        else {
                            kendoAlert("Aggregator Farmer Mapping saved successfully");
                            //retrieve_AggrVSmap_list();
                            get_AggrVSmap_details(Res.context.Header);
                            listpageloadfetch;
                        }
                    }
                    else {
                        kendoAlert(Res.applicationException.errorDescription);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });              
            //save_AggrVSmap_details(data);
            
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function listpageloadfetch() {
        debugger;
        try {
            var formval = form_Serialize("Mapping_Form");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = "ALL";
            obj_val.FilterBy_Code = ".";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
                obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_Fromvalue = ".";
            }
            obj_val.FilterBy_Tovalue = ".";

            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Filter = obj_val;
            //retrieve_AggrVSmap_list(data);
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Filter: Context.Filter }),
                url: "/PAWHSAggregatorFarmerMap/ServiceList",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_AggrVSmap_List(response.context.List)
                        //listgrid(response.context.List);
                        //SetPager(response.context.Filter.out_record_count)
                    }
                    else {
                        grid_farmer_mapped([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_AggrVSmap_List(res) {
        debugger;

        try {
            if (res != null) {
                var data = changedataType(res);
                $("#gd_farmapped").empty();
                $("#gd_farmapped").append("<div id='grid_farmers_mapped'></div>");
                grid_farmer_mapped(data);
            }
            else {
                grid_farmer_mapped([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function GridRowSelectEvent() {
        debugger;
        var gview = $("#grid_farmers_notmapped").data("kendoGrid");
        //Getting selected item
        var selectedItem = gview.dataItem(gview.select());
        var statusCode = selectedItem["status_code"];
        var farmerName = selectedItem["given_name"];
        if (statusCode == "Dublicate") {
            kendoAlert("We Cannot Mapped '" + farmerName + "', Because '" + farmerName + "' Register Mobile Number Was Not Valid. Please Update!!!");
            gview.refresh();
            return 0;
        }
        gview.tbody.find('>tr').each(function () {
            var dataItem = grid.dataItem(this);
            if (dataItem.status_code == "Dublicate") {
                $(this).css('color', 'red');
                $(this).find('[type=checkbox]').prop('disabled', true);
            }
        });
    };
</script>
@*<script>
        var grdName = "";
        $("#btnMap").bind("click", function () {
            getSerializedSelectedRows('UnMap');
        });
        $("#btnunmap").bind("click", function () {
            getSerializedSelectedRows('Map');
        });

    </script>*@



