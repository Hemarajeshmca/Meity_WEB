@{
    ViewBag.Form = "Aggragator Registration";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}
<form id="Aggregator_Registration" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:1px">

            <div class="row">
                <div class="col-sm-6">
                    <div class=" form-group">
                        <label for="txtagg_code" class=" col-sm-5 control-label">Aggregator Code</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtagg_code" name="IOU_aggregator_code" class="form-control" maxlength="10" readonly>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_Attr_rowid" class="col-sm-5 control-label ">Orgn row id:</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_Attr_rowid" name="IOU_orgn_rowid" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-8">
                    <div class="form-group">
                        <label for="cbo_orgn_type" class="col-sm-4 control-label required">Aggregator Type :</label>
                        <div class="col-sm-5">
                            <input type="radio" id="rd_fpo" checked="checked" name="Out_aggregator_type" value="F" onclick="AggregateType()" />FPO
                            <input type="radio" id="rd_nonmem" name="Out_aggregator_type" value="NM" onclick="AggregateType()" />Non FPO
                        </div>
                    </div>
                </div>
            </div>

            <div class="row" style="padding-bottom:5px">
                <div class="col-sm-6">
                    <div class=" form-group">
                        <label for="txtFPO" class=" col-sm-5 control-label">FPO</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtfpo" name="Out_member_name" class="form-control" readonly>
                            <input type="hidden" id="txtfpocode" name="Out_orgn_code" />
                        </div>
                        <div id="pay_help">
                            <a class="HelpWindow fa fa-search fa-lg" role="button" id="pay_help1" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="FPO" searchid="S30" data-target="#HelpModal" onclick=transfer(this,"form","","form_control"); title="Search" style="font-size: 19px; "></a>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class=" form-group">
                        <label for="txtFarmer_Large" class=" col-sm-5 control-label">FPO</label>
                        <div class=" col-md-6">
                            <input type="text" id="txtFarmer_Large" name="Out_member_ll_name" class="form-control" readonly />
                        </div>
                    </div>
                </div>
            </div>

            <div class="row" style="padding-bottom:5px">
                <div class="col-sm-6">
                    <div class=" form-group">
                        <label for="txtagg_nameEng" class=" col-sm-5 control-label required">Aggregator Name</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtagg_nameEng" name="Out_aggregator_name" class="form-control" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class=" form-group">
                        <label for="txtagg_nameTam" class=" col-sm-5 control-label required">एग्रीगेटर का नाम</label>
                        <div class=" col-md-6">
                            <input type="text" id="txtagg_nameTam" name="Out_aggregator_ll_name" class="form-control" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="facilitorg" class="col-sm-5 control-label required">Facilitator Name</label>
                        <div class="col-sm-6">
                            <input id="facilitorg" name="Out_facilitator_code" style="width: 100%" data-role="filtercombo">

                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="facilitorgIn" class="col-sm-5 control-label">सूत्रधार का नाम </label>
                        <div class="col-sm-6">
                            <input id="facilitorgIn" name="Out_facilitator_name" style="width: 100%" data-role="filtercombo">
                        </div>
                    </div>
                </div>
            </div>

            <div class="row" style="padding-bottom:10px">
                <div class="col-sm-3">
                    <div class="form-group" style="display:none;">
                        <label for="txt_version_no" class="col-sm-5 control-label">version_no</label>
                        <div class="col-sm-4">
                            <input type="number" id="txt_version_no" name="Out_orgn_level" class="form-control" maxlength="10" value="0">
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group" style="display:none;">
                        <label for="txt_version_no1" class="col-sm-5 control-label">version_no</label>
                        <div class="col-sm-4">
                            <input type="number" id="txt_version_no1" name="Out_version_no1" class="form-control" maxlength="10" value="0">
                        </div>
                    </div>
                </div>
                <div class="col-sm-3">
                    <div class="form-group" style="display:none;">
                        <label for="txtMode" class="col-sm-5 control-label">Mode</label>
                        <div class="col-sm-4">
                            <input type="text" id="txtMode" name="Out_mode_flag" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>

                <div class="col-sm-3">
                    <div class="form-group" style="display:none;">
                        <label for="row_timestamp" class="col-sm-5 control-label">Timestamp:</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_row_timestamp" name="Out_row_timestamp" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for=" cmbinttype" class="col-sm-5 control-label">
                            Intermediate Aggregator Type :
                        </label>
                        <div class="col-sm-5">
                            <input id="Cmbinttype" name="Out_status_code" style="width: 100%" data-role="filtercombo" value="A">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for=" cmbinttypetn" class="col-sm-5 control-label">
                            இடை ஒருங்கிணைக்கும் வகை
                        </label>
                        <div class="col-sm-5">
                            <input id="CmbinttypeTn" name="Out_status_desc" style="width: 100%" data-role="filtercombo" value="Active">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for=" cmbinttypetn" class="col-sm-5 control-label">
                            இடை ஒருங்கிணைக்கும் வகை
                        </label>
                        <div class="col-sm-5">
                            <input id="CmbinttypeTn" name="Out_facilitator_ll_code" style="width: 100%" data-role="filtercombo" value="Active">
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <section class="col-md-12">
                    <div id="tab_list" class="col-md-12">
                        <ul class="nav nav-tabs">
                            <li class="active">
                                <a href="#Address" role="tab" data-toggle="tab">
                                    Address
                                </a>
                            </li>
                            <li>
                                <a href="#Bank" id="" role="tab" data-toggle="tab">
                                    Bank
                                </a>
                            </li>
                            <li>
                                <a href="#FIG" role="tab" onclick="FIG1()" id="data1" data-toggle="tab">
                                    FIG
                                </a>
                            </li>
                        </ul>
                        <div class="tab-content">

                            <div class="tab-pane fade active in" id="Address">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_Address">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="Bank">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_Bank"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade  active in" id="FIG">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_Fig"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</form>


<script>
    click_act_name = "PAWHSAggregatorRegistrationList";
    click_ctrl_name = "PAWHSAggregatorRegistration";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/CommonScripts/common.js"></script>
<script src="~/CommonScripts/Hindi.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>

<script>
    $(document).ready(function () {

        kendodate_format();
    $("#hide_div").hide();


    Form_validate_Name = $('form.form-horizontal').attr('id');
    var container = $("#Aggregator_Registration");
    kendo.init(container);
    container.kendoValidator({
    });

    $(".file_attach").attr("hdrtitle", "Aggragator Registration");
    $(".notes").attr("hdrtitle", "Aggragator Registration");
    $("#lblForm_menuid").text("AGGREG");

    grid_Address_details([]);
    grid_Bank_Detail([]);
    FIGGrid([]);
    translate();

    Screen_Id = "PWAGGREG";
    permission = sec_Permission(Screen_Id);

    setlocalStorage("status", "Active");
    setlocalStorage('status_code', "A");
    $("div#FIG").hide();

    //facilitor organ
    var ORGFO = "";
    $("#facilitorg").empty();
    ORGFO = grid_comboScreen_mastercodes("ORGFO");
    filter_combobox("facilitorg", ORGFO);

    //facilitor organ Tamil
    var map_in1 = "";
    $("#facilitorgIn").empty();
    map_in1 = grid_comboScreen_tamil("ORGFO");
    filter_combobox("facilitorgIn", map_in1);;

    AggregateType();

    if (getlocalStorage('btn_clk_val') == "Create") {
        $('#divCreate #review').hide();
    $("#txtMode").val("I");
    $("#bottom_menus").hide();
    $("#DocStat").val("New");
    }
    else if (getlocalStorage('btn_clk_val') == "View" || getlocalStorage('btn_clk_val') == "Edit") {
        $('#divEdit #reviewEd').hide();
    $('#divEdit #deactivate').hide();

    $("#bottom_menus li:nth-child(1)").hide();
    $("#bottom_menus li:nth-child(3)").hide();

    if (getlocalStorage("ls_pageList") != undefined) {
            var data = getlocalStorage("ls_pageList");
    var formval = form_Serialize("Aggregator_Registration");
    var obj_val = JSON.parse(formval);
    obj_val.IOU_aggregator_code = data.Out_aggregator_code;
    obj_val.IOU_orgn_rowid = data.Out_orgn_rowid;


    var data = { };
    data.context = WebAPIProxy.getContext();
    data.context.Header = obj_val;
    var Context = data.context;

    $.ajax({
        type: "POST",
    data: JSON.stringify({userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header }),
    url: "/PAWHSAggregatorRegistration/GetPAWHSAggregator",
    dataType: "json",
    contentType: 'application/json; charset=utf-8',
    success: function (response) {
                    if (response.context != null) {
        generate_PAWHSAggregatorOrgs_header(response.context.Header);
    if (response.context.Header.Address != null) {
        generate_PAWHSAggregatorOrgs_Address(response.context.Header.Address);
                        } else {generate_PAWHSAggregatorOrgs_Address([]); }
    if (response.context.Header.Bank != null) {
        generate_PAWHSAggregatorOrgs_Bank(response.context.Header.Bank);
                        } else {generate_PAWHSAggregatorOrgs_Bank([]); }
    if (response.context.Header.Fig != null) {
        generate_PAWHSAggregatorOrgs_FIG(response.context.Header.Fig);
                        } else {generate_PAWHSAggregatorOrgs_FIG([]); }
                    }
    else {
        console.log("Issue where Dropped");
                    }
                },
    error: function (er) {
        console.log(er);
                }

            });
    $("#txtMode").val("U");
    setlocalStorage('doc_no', $("#txtFarmer_code").val());
    setlocalStorage('doc_row_id', $("#txt_Attr_rowid").val());
        }
    }
    $('#HelpModal').on('hide.bs.modal', function (e) {
        if ($("#txtfpo").val() != undefined && $("#txtfpo").val() != "") {
        fetch_name();
        }
    });

    field_enable();
});




    //tamil translate script
    function translate() {
    try {
        $("#txtagg_nameEng").focusout(function () {
            var txt = convertTamil1($("#txtagg_nameEng").val());
            $("#txtagg_nameTam").val(txt);
        });
    $("#txtagg_nameTam").on("keypress", function (e) {

        convertThis(e);
        });
    }
    catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
}

    function get_PAWHSAggregatorOrgs_details(res) {
    try {
        var formval = form_Serialize("Aggregator_Registration");
    var obj_val = JSON.parse(formval);
        obj_val.IOU_aggregator_code = res.context.Header.ioU_aggregator_code;
        obj_val.IOU_orgn_rowid = res.context.Header.ioU_orgn_rowid;
    var data = { };
    data.context = WebAPIProxy.getContext();;
    data.context.Header = obj_val;
    //retrieve_FPORegistration_details(data);
    var Context = data.context;
    $.ajax({
        type: "POST",
    data: JSON.stringify({userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header }),
    url: "/PAWHSAggregatorRegistration/GetPAWHSAggregator",
    dataType: "json",
    contentType: 'application/json; charset=utf-8',
    success: function (response) {
                if (response.context != null) {
        generate_PAWHSAggregatorOrgs_header(response.context.Header);
    if (response.context.Header.Address != null) {
        generate_PAWHSAggregatorOrgs_Address(response.context.Header.Address);
                    } else {generate_PAWHSAggregatorOrgs_Address([]); }
    if (response.context.Header.Bank != null) {
        generate_PAWHSAggregatorOrgs_Bank(response.context.Header.Bank);
                    } else {generate_PAWHSAggregatorOrgs_Bank([]); }
    if (response.context.Header.Fig != null) {
        generate_PAWHSAggregatorOrgs_FIG(response.context.Header.Fig);
                    } else {generate_PAWHSAggregatorOrgs_FIG([]); }
                }
    else {
        console.log("Issue where Dropped");
                }
            },
    error: function (er) {
        console.log(er);
            }

        });
    $("#txtagg_code").val(res.Out_aggregator_code);
    $("#txt_Attr_rowid").val(res.Out_orgn_rowid);
    $("#txtMode").val("U");
    setlocalStorage('doc_no', $("#txtagg_code").val());
    setlocalStorage('doc_row_id', $("#txt_Attr_rowid").val());
    setlocalStorage('doc_ver_no', $("#txt_version_no").val());
    }
    catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
}

    $("#txtfac_nameEng").change(function () {
    var c = $('#txtfac_nameEng');
    var formval = c.data('kendoComboBox').value();
    $("#txtfac_nameTam").data("kendoComboBox").value(formval);
});

    $("#facilitorg").change(function () {
    var c = $('#facilitorg');
    var formval = c.data('kendoComboBox').value();
    $("#facilitorgIn").data("kendoComboBox").value(formval);
});

</script>

<script>
    //master code load
    function load_master_code() {
    try {
        var data = { };
    data.screen_Id = "PWAGGREG";
    var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
    }
    catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
}
</script>

<script>
    //Address Grid
    var Out_addr_type_desc_list = "";
    var Out_orgn_state_desc_list = "";
    var Out_orgn_village_desc_list = "";
    var Out_orgn_dist_desc_list = "";
    var Out_orgn_taluk_desc_list = "";
    var Out_orgn_panchayat_desc_list = "";
    var Out_status_desc_list = "";
    function grid_Address_details(data) {
    try {
        $("#grid_Address").kendoGrid({
            dataSource: {
                data: data,
                schema: {
                    model: {
                        fields: {
                            Out_orgnaddr_rowid: { type: "string" },
                            Out_orgn_pincode: { type: "string", validation: { required: { message: "Pincode cannot be blank" } } },
                            //----
                            Out_addr_type: { type: "string", required: true },
                            Out_addr_type_desc: {
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='addr_type_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "Address Type cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }
                            },

                            Out_state: { type: "string", required: true },
                            Out_orgn_state_desc: {
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='orgn_state_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "State Type cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }
                            },

                            Out_orgn_dist: { type: "string", required: true },
                            Out_orgn_dist_desc: {
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='orgn_dist_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "District Type cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }, editable: false
                            },
                            Out_orgn_panchayat: { type: "string", required: true },
                            Out_orgn_panchayat_desc: {
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='orgn_panchayat_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "Grama panchayat Type cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }, editable: false
                            },

                            Out_orgn_taluk: { type: "string", required: true },
                            Out_orgn_taluk_desc: {
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='orgn_taluk_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "Taluk Type cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }, editable: false
                            },

                            Out_orgn_village: { type: "string", required: true },
                            Out_orgn_village_desc: {
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='orgn_village_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "Village Type cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }
                            },

                            Out_orgn_addr1: {
                                validation: {
                                    required: { message: "Addr1 cannot be blank" },
                                    maxlength:
                                        function (input) {
                                            if (input.val().length > 50) {
                                                input.attr("data-maxlength-msg", "Max length is 50");
                                                return false;
                                            }
                                            return true;
                                        }
                                }
                            },
                            Out_orgn_addr2: {
                                validation: {
                                    required: { message: "Addr2 cannot be blank" },
                                    maxlength:
                                        function (input) {
                                            if (input.val().length > 50) {
                                                input.attr("data-maxlength-msg", "Max length is 50");
                                                return false;
                                            }
                                            return true;
                                        }
                                }
                            },

                            Out_status_code: { type: "string", required: true },
                            Out_status_desc: {
                                defaultValue: "Active", editable: false,
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='status_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "Status Type cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }
                            },

                            Out_mode_flag: { type: "string", defaultValue: "I" }
                        }
                    }
                }
            },
            toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
            height: 400,
            groupable: false,
            dataBinding: setDefaultValues,

            dataBound: function (e) {
                resultData = e.sender._data;
                var rows = $('#grid_Address').data('kendoGrid').tbody.children();
                setColor(rows, resultData);
            },
            edit: OnEdit,
            sortable: true,
            selectable: true,
            navigatable: true,
            columns: [
                {
                    field: "Out_orgnaddr_rowid",
                    title: "orgnaddr_rowid",
                    hidden: true,
                },
                {
                    field: "Out_addr_type",
                    title: "addr_type",

                    hidden: true,
                },
                {
                    field: "Out_addr_type_desc",
                    title: "Addr Type",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_addr_type", "grid_Address")
                    },
                    width: 100,

                },
                {
                    field: "Out_orgn_country_desc",
                    title: "Country",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_orgn_country", "grid_Address")
                    },
                    width: 100,
                },
                {
                    field: "Out_orgn_state",
                    title: "orgn_state",
                    hidden: true,
                },
                {
                    field: "Out_orgn_state_desc",
                    title: "State",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_orgn_state", "grid_Address")
                    },
                    width: 100,

                },
                {
                    field: "Out_orgn_village",
                    title: "orgn_village",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "Out_orgn_village_desc",
                    title: "Village",
                    editor: '<div class="input-group input-group-sm"><input type="text" readonly name="orgn_village_desc" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:orgn_village_desc"/><span class="input-group-btn" style="padding-right: 150px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Details" searchid="S02" data-target="#HelpModal" onclick=transfer(this,"grid","grid_Address","grid_Address_details") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>',
                    width: 150,

                },
                {
                    field: "Out_orgn_dist",
                    title: "orgn_dist",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "Out_orgn_dist_desc",
                    title: "District",
                    width: 100,

                },
                {
                    field: "Out_orgn_taluk",
                    title: "orgn_taluk",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "Out_orgn_taluk_desc",
                    title: "Taluk",
                    width: 100,
                },

                {
                    field: "Out_orgn_panchayat",
                    title: "orgn_panchayat",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "Out_orgn_panchayat_desc",
                    title: "Gram Panchayat",
                    width: 100,
                },

                {
                    field: "Out_orgn_addr1",
                    title: "Addr Line 1",

                    width: 100,

                },
                {
                    field: "Out_orgn_addr2",
                    title: "Addr Line 2",
                    width: 100
                },
                {
                    field: "Out_orgn_pincode_desc",
                    title: "Pin Code",
                    hidden: true,

                },
                {
                    field: "Out_orgn_pincode",
                    title: "PinCode",
                    width: 100,
                    editor: function (container, options) {
                        numeric_editor(container, options.field, '6', '0');
                    },

                },
                {
                    field: "Out_orgn_country",
                    title: "Country",
                    hidden: true,
                },

                {
                    field: "Out_status_code",
                    title: "status_code",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "Out_status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "status_code", "grid_Address")
                    },
                    width: 100,
                },
                {
                    field: "Out_mode_flag",
                    title: "Mode",
                    hidden: true
                }],
            editable: true
        });
    }
    catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
}

    load_master_code();
    Out_addr_type_desc_list = grid_comboScreen_mastercodes("QCD_ADDRTYPE");
    Out_orgn_state_desc_list = grid_comboScreen_mastercodes("QCD_UN_STATE");

    Out_orgn_panchayat_desc_list = grid_comboScreen_mastercodes("QCD_UN_GRAMPAN");
    Out_orgn_country_desc_list = grid_comboScreen_mastercodes("QCD_COUNTRY");
    Out_status_desc_list = grid_comboScreen_mastercodes("STATUS");


    var Out_bank_acc_type_desc_list = "";
    var Out_bank_desc_list = "";
    var Out_branch_desc_list = "";
    var Out_dflt_cr_acc_desc_list = "";
    var Out_dflt_dr_acc_desc_list = "";
    var Out_bank_acc_purpose_desc_list = "";
    var Out_status_desc_list = "";

    //Bank Grid
    function grid_Bank_Detail(data) {
    try {
        $("#grid_Bank").kendoGrid({
            dataSource: {
                data: data,
                schema: {
                    model: {
                        fields: {
                            Out_orgnbank_rowid: { type: "string" },
                            Out_bank_acc_no: { type: "string", validation: { required: { message: "Bank Account No. cannot be blank" } } },

                            Out_bank_acc_type: { type: "string", required: true },
                            Out_bank_acc_type_desc: {
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='bank_acc_type_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "Bank Account cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }
                            },
                            Out_bank_code: { type: "string", required: true },
                            Out_bank_desc: {
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='bank_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "Bank cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }
                            },
                            Out_branch_code: { type: "string" },
                            Out_ifsc_code: { type: "string", validation: { required: { message: "IFSC Code cannot be blank" } }, editable: false },
                            Out_account_no: { type: "string" },
                            Out_dflt_cr_acc: { type: "string", required: true },
                            Out_dflt_cr_acc_desc: {
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='dflt_cr_acc_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "Default Credit cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }
                            },

                            Out_dflt_dr_acc: { type: "string", required: true },
                            Out_dflt_dr_acc_desc: {
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='dflt_dr_acc_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "Default Debit cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }
                            },
                            Out_bank_acc_purpose: { type: "string", required: true },
                            Out_bank_acc_purpose_desc: {
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='bank_acc_purpose_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "Account Purpose cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }
                            },
                            Out_status_code: { type: "string", required: true },
                            Out_status_desc: {
                                defaultValue: "Active", editable: false,
                                validation: {
                                    dropdownlistValidation: function (input) {
                                        if (input.is("[name='status_desc']")) {
                                            var isValid = true;
                                            input.attr("data-dropdownlistValidation-msg", "Status Type cannot be blank"); if (input.val().length <= 0) {
                                                isValid = false;
                                            }
                                            return isValid;
                                        }
                                        return true;
                                    }
                                }
                            },
                            Out_mode_flag: { type: "string", defaultValue: "I" },
                        }
                    }
                }
            },
            toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
            height: 400,
            groupable: false,
            dataBinding: setDefaultValues,

            dataBound: function (e) {
                resultData = e.sender._data;
                var rows = $('#grid_Bank').data('kendoGrid').tbody.children();
                setColor(rows, resultData);
            },
            edit: OnEdit,
            sortable: true,
            selectable: true,
            navigatable: true,
            columns: [
                {
                    field: "Out_orgnbank_rowid",
                    title: "orgnbank_rowid",
                    hidden: true
                },
                {
                    field: "Out_bank_acc_no",
                    title: "Account No",
                    width: 100,

                },
                {
                    field: "Out_bank_acc_type",
                    title: "bank_acc_type",
                    hidden: true
                },
                {
                    field: "Out_bank_acc_type_desc",
                    title: "Account Type",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_bank_acc_type", "grid_Bank")
                    },
                    width: 100,
                },
                {
                    field: "Out_bank_code",
                    title: "bank_code",
                    hidden: true
                },
                {
                    field: "Out_bank_desc",
                    title: "Bank Name",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_bank_code", "grid_Bank")
                    },
                    width: 100,

                },
                {
                    field: "Out_branch_code",
                    title: "Branch",
                    editor: '<div class="input-group input-group-sm"><input type="text" readonly name="Out_branch_code" maxlength="50" style="width:150px;color:black"  onkeypress="return speical_char(event)" data-bind="value:branch_code"/><span class="input-group-btn" style="padding-right: 200px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Bank Details" searchid="S01" data-target="#HelpModal" onclick=transfer(this,"grid","grid_Bank","grid_Bank_Detail") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>',
                    width: 200,
                },
                {
                    field: "Out_ifsc_code",
                    title: "IFSC code",
                    width: 100,
                },

                {
                    field: "Out_dflt_cr_acc",
                    title: "dflt_cr_acc",
                    hidden: true
                },

                {
                    field: "Out_dflt_cr_acc_desc",
                    title: "Default Credit A/C",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_dflt_cr_acc", "grid_Bank")
                    },
                    width: 100,

                },
                {
                    field: "Out_dflt_dr_acc",
                    title: "dflt_dr_acc",
                    hidden: true
                },
                {
                    field: "Out_dflt_dr_acc_desc",
                    title: "Default Debit A/C",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_dflt_dr_acc", "grid_Bank")
                    },
                    width: 100,

                },
                {
                    field: "Out_bank_acc_purpose",
                    title: "bank_acc_purpose",
                    hidden: true
                },
                {
                    field: "Out_bank_acc_purpose_desc",
                    title: "Account Purpose",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_bank_acc_purpose", "grid_Bank")
                    },
                    width: 100,
                    hidden: true

                },
                {
                    field: "Out_status_code",
                    title: "status_code",
                    hidden: true
                },
                {
                    field: "Out_status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_status_code", "grid_Bank")
                    },
                    width: 100,
                },
                {
                    field: "Out_mode_flag",
                    title: "Mode",
                    hidden: true
                }],
            editable: true
        });
    }
    catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
}
    Out_bank_acc_type_desc_list = grid_comboScreen_mastercodes("QCD_BANKACCTYPE");
    Out_bank_desc_list = grid_comboScreen_mastercodes("BANK");

    Out_dflt_cr_acc_desc_list = grid_comboScreen_mastercodes("QCD_YESNO");
    Out_dflt_dr_acc_desc_list = grid_comboScreen_mastercodes("QCD_YESNO");
    Out_bank_acc_purpose_desc_list = grid_comboScreen_mastercodes("QCD_BANKACCPUR");
    Out_status_desc_list = grid_comboScreen_mastercodes("STATUS");
    function OnEdit(e) {
    try {
        setDefaultValues(e);
    e.container.find("input[name='bank_acc_no']").attr('maxlength', '20');
        e.container.find("input[name='bank_acc_no']").attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');

    e.container.find("input[name='aggrloc_shortdesc']").attr('maxlength', '25');
    e.container.find("input[name='aggrloc_name']").attr('maxlength', '100');
    }
    catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
}


</script>

<script>
    //FIG Grid
    function FIGGrid(data) {
    try {
        $("#grid_Fig").kendoGrid({
            dataSource: {
                data: data,
                schema: {
                    model: {
                        fields: {
                            Out_type: { type: "string" },
                            Out_aggrfig_rowid: { type: "string" },
                            Out_village: { type: "string" },
                            Out_contact_person: { type: "string" },
                            Out_contact_number: { type: "string" },
                            Out_mode_flag: { type: "string", defaultValue: "I" }
                        }
                    }
                }
            },

            height: 400,
            groupable: false,
            dataBinding: setDefaultValues,

            dataBound: function (e) {
                resultData = e.sender._data;
                var rows = $('#grid_Fig').data('kendoGrid').tbody.children();
                setColor(rows, resultData);
            },
            edit: OnEdit,
            sortable: true,
            selectable: true,
            navigatable: true,
            columns: [
                {
                    field: "Out_aggrfig_rowid",
                    title: "aggrfig_rowid",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "Out_aggrfig_type",
                    title: "aggrfig_type",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "Out_aggrfig_type_desc",
                    title: "Type",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_aggrfig_type", "grid_Fig")
                    },
                    width: 80
                },
                {
                    field: "Out_aggrfig_code",
                    title: "aggrfig_code",
                    hidden: true,
                    width: 100,
                },

                {
                    field: "Out_aggrfig_name",
                    title: "FIG Name",
                    width: 140
                },
                {
                    field: "Out_aggrvillage_code",
                    title: "aggrfig_code",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "Out_aggrvillage_name",
                    title: "Village",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_aggrvillage_code", "grid_Fig")
                    },
                    width: 140
                },
                {
                    field: "Out_contact_person",
                    title: "Contact Person",
                    width: 140
                },
                {
                    field: "Out_contact_no",
                    title: "Contact No. ",
                    width: 80
                },
                {
                    field: "Out_status_code",
                    title: "status_code",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "Out_status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "Out_status_code", "grid_Fig")
                    },
                    width: 100,
                },
                {
                    field: "Out_mode_flag",
                    title: "Mode",
                    hidden: true
                }
            ],
            // editable: true
        });
    }
    catch (err) {
        alert(err);
    }
}
    Out_aggrfig_type_desc_list = grid_comboScreen_mastercodes("QCD_FIGTYPE");
    Out_aggrvillage_name_list = grid_comboScreen_mastercodes("QCD_UN_VILLAGE");
</script>

<script>
    //Memeber-enable disable
    function AggregateType() {
    if ($("#rd_fpo").is(":checked")) {
        $('#txtfpo').val('');
    $('#txtFarmer_Large').val('');
    $("#pay_help1").show();
    $('#txtfpo').attr("disabled", 'readonly');
    $('#txtfpo').attr("disabled", true);
    $('#txtFarmer_Large').attr("disabled", true);
    $("#data1").show();
    $("#grid_Fig").show();
    grid_Address_details([]);
    grid_Bank_Detail([]);
    FIGGrid([]);
    $('#grid_Address #btnSave').hide();
    $('#grid_Bank #btnSave').hide();
        //$("#grid_Address").editable(false);
        //$("#grid_Bank").editable(false);
        //$("#grid_Fig").editable(false);
    }
    else if ($("#rd_nonmem").is(":checked")) {
        $('#txtfpo').val('');
    $('#txtFarmer_Large').val('');
    $("#pay_help1").hide();
    $('#txtfpo').attr("disabled", 'readonly');
    $('#txtfpo').attr("disabled", true);
    $('#txtFarmer_Large').attr("disabled", true);
    $("#data1").hide();
    $("#grid_Fig").hide();
    $("#FIG").hide();
    grid_Address_details([]);
    grid_Bank_Detail([]);
    FIGGrid([]);
    $('#grid_Address #btnSave').show();
    $('#grid_Bank #btnSave').show();
    }
}
</script>

<script>
    //save function
    function save() {
    try {
        $("#rd_fpo").attr('disabled', false);
    $("#rd_mem").attr('disabled', false);
    if ($("#txt_Attr_rowid").val() == "") {
        $("#txt_Attr_rowid").val('0');
        }

    if ($("#txtMode").val() == "S") {
        $("#txtMode").val('U');
        }
    if ($("#txtagg_code").val() == "") {
        $("#txtagg_code").val('0');
        }
    $('#txtfpo').removeAttr("disabled");
    $('#txtFarmer_Large').removeAttr("disabled");
    var formval = form_Serialize("Aggregator_Registration");
    var obj_val = JSON.parse(formval);
    $('#txtfpo').attr("disabled", true);
    $('#txtFarmer_Large').attr("disabled", true);
    //address
    var grid_val = JSON.stringify($("#grid_Address").data().kendoGrid._data);
    var Bind = { };
    Bind = grid_val;
    var result = JSON.parse(Bind);
    $.each(result, function (index, value) {
            var row_id = value.Out_orgnaddr_rowid;
    if (row_id == undefined || row_id == '') {
        result[index].Out_orgnaddr_rowid = "0";
            }
    else {
        result[index].Out_mode_flag = "S";
            }
    var mode = value.Out_mode_flag;
    if (mode == "") {
        result[index].Out_mode_flag = "I";
            }
    if (mode == "S") {
        result[index].Out_mode_flag = "U";
            }
    if (row_id == "0") {
        result[index].Out_mode_flag = "I";
            }
    var PINCODE = value.Out_orgn_pincode_desc;
    if (PINCODE == undefined) {
        result[index].Out_orgn_pincode_desc = "0";
            }

        });
    var obj_grid_val = result;

    //bank
    var grid_val1 = JSON.stringify($("#grid_Bank").data().kendoGrid._data);
    var Bind1 = { };
    Bind1 = grid_val1;
    var result1 = JSON.parse(Bind1);
    $.each(result1, function (index, value) {

            var bank_rowid = value.Out_orgnbank_rowid;
    if (bank_rowid == undefined || bank_rowid == '') {
        result1[index].Out_orgnbank_rowid = "0";
            }
    else {
        result1[index].Out_mode_flag = "S";
            }
    var mode = value.Out_mode_flag;
    if (mode == "") {
        result1[index].Out_mode_flag = "I";
            }
    if (mode == "S") {
        result1[index].Out_mode_flag = "U";
            }
    if (bank_rowid == "0") {
        result1[index].Out_mode_flag = "I";
            }
    var BRANCH = value.Out_branch_desc;
    if (BRANCH == undefined) {
        result1[index].Out_branch_desc = "0";
            }
    var Bankacc = value.Out_bank_acc_purpose;
    if (Bankacc == undefined) {
        result1[index].Out_bank_acc_purpose = "0";
            }
        });
    var obj_grid_val1 = result1;

    //fig
    var grid_val3 = JSON.stringify($("#grid_Fig").data().kendoGrid._data);
    var Bind3 = { };
    Bind3 = grid_val3;
    var result3 = JSON.parse(Bind3);
    $.each(result3, function (index, value) {

        var row_width = value.Out_aggrfig_rowid;

    var aggrfig_code = value.Out_aggrfig_code;

    if (row_width == undefined) {
        result3[index].Out_aggrfig_rowid = "0";
            }
    if (aggrfig_code == undefined) {
        result3[index].Out_aggrfig_code = " ";
            }


    var mmode = result3[index].Out_mode_flag;
    if (mmode == "S") {
        result3[index].Out_mode_flag = "U";
            }
        });
    var obj_grid_val3 = result3;

    var data = { };
    data.context = WebAPIProxy.getContext();
    data.context.Header = obj_val;
    data.context.Header.Address = obj_grid_val;
    data.context.Header.Bank = obj_grid_val1;
    data.context.Header.FIG = obj_grid_val3;
    var Context = data.context;
    $.ajax({
        type: "POST",
    data: JSON.stringify({
        userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header}),
    url: "/PAWHSAggregatorRegistration/SavePAWHSAggregator",
    dataType: "json",
    contentType: 'application/json; charset=utf-8',
    success: function (response) {
        console.log(response)
                var Res = JSON.parse(response);
    if (Res.context != null) {
        console.log(Res);
    kendoAlert("Saved Succedfully");
    get_PAWHSAggregatorOrgs_details(Res);
                }
    else {
        kendoAlert(Res.ApplicationException.errorDescription);
                }
            },
    error: function (er) {
        alert(er)
                console.log(er)
            }

        });
    }
    catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
}

    function DeleteDetails() {
    try {
        $("#txtMode").val('D');
    save();
    }
    catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
}
</script>

<script>
    //fetch Header
    function generate_PAWHSAggregatorOrgs_header(res) {

        try {
            $("#txt_Attr_rowid").val(res.IOU_orgn_rowid);
            $("#txtagg_code").val(res.IOU_aggregator_code);
            $("#txtagg_nameEng").val(res.Out_aggregator_name);
            $("#txtagg_nameTam").val(res.Out_aggregator_ll_name);
            $("#txt_orgn_level").val(res.Out_orgn_level);
            $("#txtfpo").val(res.Out_member_name);
            $("#txtFarmer_Large").val(res.Out_member_ll_name);
            $('#facilitorg').data("kendoComboBox").value(res.Out_facilitator_code);
            $('#facilitorgIn').data("kendoComboBox").value(res.Out_facilitator_code);
            $("#txt_primary_lang_code").val(res.Out_primary_lang_code);
            $("#txt_secondary_lang_code").val(res.Out_secondary_lang_code);
            $("#txt_status_code").val(res.Out_status_code);
            $("#DocStat").val(res.Out_status_desc);
            $("#txtMode").val(res.Out_mode_flag);
            $("#txt_row_timestamp").val(res.Out_row_timestamp);
            $("#txtfpocode").val(res.Out_fpo_code);

            if (res.Out_aggregator_type == "F") {
                fetch_name();
                $("#rd_fpo").attr("checked", "checked");
                $("#rd_nonmem").attr('disabled', true);
                $("#pay_help1").show();
                $('#txtfpo').attr("disabled", 'readonly');
                $('#txtfpo').attr("disabled", true);
                $('#txtFarmer_Large').attr("disabled", true);
                $("#grid_Address").editable(false);
                $("#grid_Bank").editable(false);
                $("#grid_Fig").editable(false);

            }
            if (res.Out_aggregator_type == "NM") {
                $("#rd_nonmem").attr("checked", "checked");
                $("#rd_fpo").attr('disabled', true);
                $("#pay_help1").hide();
                $("#grid_Fig").hide();
                $('#txtfpo').attr("disabled", 'readonly');
                $('#txtfpo').attr("disabled", true);
                $('#txtFarmer_Large').attr("disabled", true);
                $("#data1").hide();
                $('#grid_Address #btnSave').show();
                $('#grid_Bank #btnSave').show();
            }

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    //Address Fetch
    function generate_PAWHSAggregatorOrgs_Address(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_Address_details(data);
            }
            else {

                grid_Address_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    //Bank Fetch
    function generate_PAWHSAggregatorOrgs_Bank(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_Bank_Detail(data);
            }
            else {

                grid_Bank_Detail([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    //FiG Fetch
    function generate_PAWHSAggregatorOrgs_FIG(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                FIGGrid(data);
            }
            else {
                FIGGrid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    //fetch orgn base address and details
    function fetch_name() {
        debugger;
        var formval = form_Serialize("Aggregator_Registration");
        var obj_val = JSON.parse(formval);
        if (obj_val != undefined) {
            if (obj_val.Out_aggregator_type == "F") {
                obj_val.fpo_code = $("#txtfpocode").val();
            }
            obj_val.aggregator_code = "0"
            obj_val.orgn_rowid = "0";
            obj_val.orgn_code = "0";
            obj_val.version_no = "0";
            var data_fetch = {};
            data_fetch.context = WebAPIProxy.getContext();
            data_fetch.context.Header = obj_val;
            var Context = data_fetch.context;
            var data = { userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, orgn_rowid: Context.Header.orgn_rowid, orgn_code: Context.Header.orgn_code, aggregator_code: Context.Header.aggregator_code, fpo_code: Context.Header.fpo_code};

        $.ajax({

          url: '@Url.Action("GetMEMBERPAWHSAggregator", "PAWHSAggregatorRegistration")',
     type: "post",
     contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response) {
                if (response.context != null) {
                    debugger;
                        if (response.context.Address != null) {
                            generate_PAWHSAggregatorOrgs_Address(response.context.Address);
                        } else { generate_PAWHSAggregatorOrgs_Address([]); }
                        if (response.context.Bank != null) {
                            generate_PAWHSAggregatorOrgs_Bank(response.context.Bank);
                        } else { generate_PAWHSAggregatorOrgs_Bank([]); }
                    if (response.context.FIG != null) {
                        generate_PAWHSAggregatorOrgs_FIG(response.context.FIG);
                        } else { generate_PAWHSAggregatorOrgs_FIG([]); }
                    }
                    else {
                        console.log("Issue where Dropped");
                    }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }
        });

            //$.ajax({
            //    type: "POST",
            //    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, orgn_rowid: Context.Header.orgn_rowid, orgn_code: Context.Header.orgn_code, aggregator_code: Context.Header.aggregator_code, fpo_code: Context.Header.fpo_code }),
            //    url: "/PAWHSAggregatorRegistration/GetMEMBERPAWHSAggregator",
            //    dataType: "json",
            //    contentType: 'application/json; charset=utf-8',
            //    success: function (response) {
            //        if (response.context != null) {
            //            if (response.context.Address != null) {
            //                generate_PAWHSAggregatorOrgs_Address(response.context.Address);
            //            } else { generate_PAWHSAggregatorOrgs_Address([]); }
            //            if (response.context.Bank != null) {
            //                generate_PAWHSAggregatorOrgs_Bank(response.context.Bank);
            //            } else { generate_PAWHSAggregatorOrgs_Bank([]); }
            //            if (response.context.Fig != null) {
            //                generate_PAWHSAggregatorOrgs_FIG(response.context.Fig);
            //            } else { generate_PAWHSAggregatorOrgs_FIG([]); }
            //        }
            //        else {
            //            console.log("Issue where Dropped");
            //        }
            //    },
            //    error: function (er) {
            //        console.log(er);
            //    }

            //});
        }
    }
    function generate_Aggmember_header(res) {
        //$("#txtfpo").val(res.orgn_name);
        //$("#txtFarmer_Large").val(res.orgn_ll_name);
    }
    function FIG1() {
        try {
            $("div#FIG").toggleClass('tab-pane fade active in');
            $("div#FIG").show();

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function field_enable() {
        if (permission.auth == true || getlocalStorage('btn_clk_val') == "View") {

            $("#pay_help1").hide();
            $("#txtfarmer_name").removeAttr("readonly");
            $("#txtfarmer_name").prop("disabled", true);
            $("#txtagg_nameEng").removeAttr("readonly");
            $("#txtagg_nameEng").prop("disabled", true);
            $("#txtagg_nameTam").removeAttr("readonly");
            $("#txtagg_nameTam").prop("disabled", true);
            $('#facilitorg').data("kendoComboBox").enable(false);
            $('#facilitorg').data("kendoComboBox").enable(false);



        }
    }
</script>

<script>
    //lookup function
    function grid_control() {
    try {
        var control_Name = [
    {"dataCol": "branch_name", "grid_row_col": "Out_branch_code" },
    {"dataCol": "ifsc_code", "grid_row_col": "Out_ifsc_code" },
    {"dataCol": "", "grid_row_col": "Out_bank_code" },
    {"dataCol": "", "grid_row_col": "Out_bank_desc" },
    {"dataCol": "", "grid_row_col": "Out_orgnbank_rowid" },
    {"dataCol": "", "grid_row_col": "Out_bank_acc_no" },
    {"dataCol": "", "grid_row_col": "Out_bank_acc_type" },
    {"dataCol": "", "grid_row_col": "Out_bank_acc_type_desc" },
    {"dataCol": "", "grid_row_col": "Out_dflt_dr_acc" },
    {"dataCol": "", "grid_row_col": "Out_dflt_dr_acc_desc" },
    {"dataCol": "", "grid_row_col": "Out_dflt_cr_acc" },
    {"dataCol": "", "grid_row_col": "Out_dflt_cr_acc_desc" },
    {"dataCol": "", "grid_row_col": "Out_bank_acc_purpose" },
    {"dataCol": "", "grid_row_col": "Out_bank_acc_purpose_desc" },
    {"dataCol": "", "grid_row_col": "Out_status_code" },
    {"dataCol": "", "grid_row_col": "Out_status_desc" },
    {"dataCol": "", "grid_row_col": "Out_mode_flag" },
    {"dataCol": "", "grid_row_col": "uid" },

               //{"dataCol": "orgn_village", "grid_row_col": "Out_orgn_village_desc" },
    {"dataCol": "orgn_state", "grid_row_col": "Out_orgn_state" },
    {"dataCol": "orgn_state_desc", "grid_row_col": "Out_orgn_state_desc" },
    {"dataCol": "orgn_village", "grid_row_col": "Out_orgn_village" },
    {"dataCol": "orgn_village_desc", "grid_row_col": "Out_orgn_village_desc" },
    {"dataCol": "orgn_dist", "grid_row_col": "Out_orgn_dist" },
    {"dataCol": "orgn_dist_desc", "grid_row_col": "Out_orgn_dist_desc" },
    {"dataCol": "orgn_taluk", "grid_row_col": "Out_orgn_taluk" },
    {"dataCol": "orgn_taluk_desc", "grid_row_col": "Out_orgn_taluk_desc" },
    {"dataCol": "orgn_grampan", "grid_row_col": "Out_orgn_panchayat" },
    {"dataCol": "orgn_grampan_desc", "grid_row_col": "Out_orgn_panchayat_desc" },
    {"dataCol": "", "grid_row_col": "Out_status_code" },
    {"dataCol": "", "grid_row_col": "Out_status_desc" },
    {"dataCol": "", "grid_row_col": "Out_addr_type" },
    {"dataCol": "", "grid_row_col": "Out_addr_type_desc" },
    {"dataCol": "", "grid_row_col": "Out_orgn_country_desc" },
    {"dataCol": "", "grid_row_col": "Out_orgnaddr_rowid" },
    {"dataCol": "", "grid_row_col": "Out_orgn_add1" },
    {"dataCol": "", "grid_row_col": "Out_orgn_addr2" },
    {"dataCol": "", "grid_row_col": "Out_orgn_pincode" },
    {"dataCol": "", "grid_row_col": "Out_orgn_pincode_desc" },
    {"dataCol": "", "grid_row_col": "Out_orgn_country" },
    {"dataCol": "", "grid_row_col": "Out_mode_flag" },
    {"dataCol": "", "grid_row_col": "uid" }
    ];
    return control_Name
    }
    catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
}
    function form_control() {
    var control_Name = [
    {"dataCol": "farmer_name", "controlId": "", "type": "Text" },
    {"dataCol": "farmer_name", "controlId": "", "type": "Text" },
    {"dataCol": "orgn_name", "controlId": "txtfpo", "type": "Text" },
    {"dataCol": "orgn_ll_name", "controlId": "txtFarmer_Large", "type": "Text" },
    {"dataCol": "orgn_code", "controlId": "txtfpocode", "type": "Text" },
    {"dataCol": "farmer_code", "controlId": "", "type": "Text" }

    ];
    return control_Name;

}

    function controlName() {
    var control_Name = [
    ];
    return control_Name
}

    function trans_input_data() {
    try {
        var trans_coll = [
    {"trasfer": "NO", "dataCol": "", "controlId": "", "grid_id": "", "grid_row_col": "" },
    {"trasfer": "Yes", "dataCol": "Out_orgn_name", "controlId": "txtfpo", "grid_id": "", "grid_row_col": "" },
    {"trasfer": "Yes", "dataCol": "Out_bank_code", "controlId": "", "grid_id": "grid_Bank", "grid_row_col": "" },
    {"trasfer": "Yes", "dataCol": "Out_orgn_state_desc", "controlId": "", "grid_id": "grid_Address", "grid_row_col": "" }
    ];
    return trans_coll;
    }
    catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
}

</script>
<style>
    .k-grid-header th.k-header, .k-filter-row th {
        text-align: left;
    }

    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>





















