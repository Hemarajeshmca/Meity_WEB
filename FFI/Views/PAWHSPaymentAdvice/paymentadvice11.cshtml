@{
    ViewBag.Form = "payment Advice";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/2.4.0/jszip.min.js"></script>
<form id="payment_AdviceForm" class="form-horizontal" style="padding-top:0px">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:12px;padding-bottom:1px">
            <div class="row">
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txtValidity1" class=" col-sm-4 control-label"> From Date </label>
                        <div class=" col-sm-6">
                            <input class="cusDate" type="date" data-role='datepicker' id="txtValidity1" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="IOU_from_date" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txtValidity2" class=" col-sm-4 control-label"> To Date </label>
                        <div class=" col-sm-6">
                            <input class="cusDate" type="date" data-role='datepicker' id="txtValidity2" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="IOU_to_date" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                    </div>
                </div>
                <div class="col-sm-2">                
                    
                     <button title="" data-placement="top" id="test" data-toggle="tooltip" class="btn btn-info" type="button" data-original-title="Refresh" onclick="mandatory()"> <span class="glyphicon glyphicon-refresh"></span></button>
                </div>
                @*<div class="col-sm-2">
                    <button type="button" style="background-color:skyblue" id="btnReport1" href="~/Reportlist/Report" class="Export btn btn-sm btn-info" ><span class="glyphicon glyphicon-export"></span></button>
                </div>*@

            </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txt_pay" class=" col-sm-4 control-label">Payment ID</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txt_pay" class="form-control" name="IOU_payment_id" maxlength="10" readonly>
                            <input type="hidden" id="txtpayment_rowid" name="IOU_payment_rowid">
                            <input type="hidden" id="status_code" name="In_status_code">
                        </div>
                    </div>
                </div>
                <div class=" col-sm-4">
                    <input type="checkbox" id="selectall">  Select all
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <div class="col-sm-4">
                            <a data-toggle="modal" id="btnReport1" type="button" class="Export btn btn-sm btn-info" href="~/Reportlist/Report" data-target="#ReportModal"><span class="glyphicon glyphicon-export"></span></a>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txtMode" class="col-sm-5 control-label">Mode</label>
                        <div class="col-sm-4">
                            <input type="text" id="txtMode" name="In_mode_flag" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="bank_name" class="col-sm-5 control-label">bank_name</label>
                        <div class="col-sm-4">
                            <input type="text" id="bank_name" name="In_bank_name" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="total_amount" class="col-sm-5 control-label">total_amount</label>
                        <div class="col-sm-4">
                            <input type="text" id="txtMode" name="In_total_amount" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="row_timestamp" class="col-sm-5 control-label">Timestamp:</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_row_timestamp" name="In_row_timestamp" class="form-control" maxlength="10" value="2018-11-08T07:57:04.272Z">                       
                        </div>
                    </div>
                </div>
                @*<div class="col-sm-6">
                    <div class="form-group">
                        <div class="col-sm-4">
                            <a data-toggle="modal" id="btnReport1" type="button" class="Export btn btn-sm btn-info" href="~/Reportlist/Report" data-target="#ReportModal"><span class="glyphicon glyphicon-export"></span></a>
                        </div>
                    </div>
                </div>*@
            </div>
            <div class="row" style="padding-bottom:20px">
                <div class="col-xs-12">
                    <div id="grid_pay_advice"></div>
                </div>
            </div>
        </div>
    </div>
</form>
<script>
    click_act_name = "paymentadviceLIst";
    click_ctrl_name = "PAWHSPaymentAdvice";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script src="~/API_Scripts/PAWHS_getPaymentAdviceList_Model.js"></script>
<script src="~/API_Scripts/PAWHS_getPaymentAdvice_Model.js"></script>
<script src="~/API_Scripts/PAWHS_PaymentAdvice_PAWHS_getPaymentAdviceList_APIClient.js"></script>
<script src="~/API_Scripts/PAWHS_PaymentAdvice_PAWHS_getPaymentAdvice_APIClient.js"></script>
<script src="~/API_Scripts/PAWHSPaymentAdvice.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/API_Scripts/PAWHS_PaymentAdvice_PAWHS_savePaymentAdvice_APIClient.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>
<script src="~/CommonScripts/report.js"></script>
<script src="~/API_Scripts/PAWHS_savePaymentAdvice_Model.js"></script>

<script>
    $(document).ready(function () {
        kendodate_format();
        $("#Topsubheader").show();
        $("#bottomFooter").show();
        $("#btndiv").show();
        $("#frmlayerdiv").hide();
        $("#divCreate").hide();
        $("#divEdit").hide();
        $("#divView").hide();
        $("#DocStat").hide();
        $(".edtviw_item").show();
        $(".create_item").show();       
        $("#btnReport1").hide();
        $("#divUserRole2").show();
        $("#bottom_menus").hide();
        GridPay();

        //PIE();
        //DoesColumnEqualOneHundred();
        $("#form_design").css("padding-top", "50px");
        $('#btnExport').hide();
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#payment_AdviceForm");
        kendo.init(container);
        container.kendoValidator({
        });

        Screen_Id = "PAWHSPAY";
        permission = sec_Permission(Screen_Id);
        //$("#btnExport").kendoButton({
        //    click: function () {
        //        $("#grid_pay_advice").data("kendoGrid").saveAsExcel();
        //    }
        //})

        $("#txtValidity1").kendoDatePicker({
            max: new Date(),// sets max date
            format: "dd/MM/yyyy"
        });
        $("#txtValidity2").kendoDatePicker
        ({

            max: new Date(),// sets max date
            format: "dd/MM/yyyy"
        });
        $('#txtValidity1').attr('disabled', true);
        $('#txtValidity2').attr('disabled', true);

        if (getlocalStorage('btn_clk_val') == "Create") {
            debugger;
            $("#txtMode").val("I");
            $("#btnReport1").hide();

        }
        else if (getlocalStorage('btn_clk_val') == "View") {
            debugger;
            $("#divUserRole2 #btnnew").hide();
            $('#btnReport1').show();
            if (getlocalStorage("ls_pageList") != undefined) {
                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("payment_AdviceForm");
                var obj_val = JSON.parse(formval);
                obj_val.payment_rowid = data.Out_payment_rowid;
                obj_val.payment_id = data.Out_payment_id;
                obj_val.from_date = data.Out_period_from;
                obj_val.to_date = data.Out_period_to;
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                var Context = data.context;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, payment_rowid: Context.Header.payment_rowid, payment_id: Context.Header.payment_id, from_date: Context.Header.from_date, to_date: Context.Header.to_date }),
                    url: "/PAWHSPaymentAdvice/PAWHSPaymentAdvicefetch",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        if (response.context != null) {
                            generate_PAWHSPaymentAdvice_header(response.context.Header);
                            generate_PAWHSPaymentAdvice_Detail(response.context.Detail);
                        }
                        else { }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }
                });
               // retrieve_PAWHSPaymentAdvice_details(data);
                $("#txtMode").val("U");

                $("#DocStat").val("Active");
                $('#txtValidity1').data('kendoDatePicker').enable(false);
                $('#txtValidity2').data('kendoDatePicker').enable(false);
                $('#test').hide();
            }
        }
    });
</script>

<script>
    function GridPay(data) {
        try {
            $("#grid_pay_advice").kendoGrid(
             {
                 dataSource: {
                     data: data,
                     schema: {
                         model: {
                             fields: {
                                 In_paymentdtl_rowid: { type: "string" },
                                 In_req_no: { type: "string" },
                                 In_status_code: { type: "string" },
                                 In_farmer_code: { type: "string" },
                                 In_farmer_name: { type: "string" },
                                 In_amount_paid: { type: "string" },
                                 In_mode_flag: { type: "string", defaultValue: "I" },
                             }
                         }
                     }
                 },

                 height: 350,
                 groupable: false,
                 dataBinding: setDefaultValues,
                 dataBound: function (e) {
                     resultData = e.sender._data;
                     var rows = $('#grid_pay_advice').data('kendoGrid').tbody.children();
                     setColor(rows, resultData);
                 },
                 sortable: true,
                 selectable: true,
                 navigatable: true,
                 change: function (e) {
                     $('tr').find('[type=checkbox]').prop('checked', false);
                     $('tr.k-state-selected').find('[type=checkbox]').prop('checked', true);

                 },
                 columns: [
                       {
                           title: "Select", width: 40,
                           template: "<input type='checkbox' name='Id' class='checkbox' />",

                       },
                      {
                          field: "In_paymentdtl_rowid",
                          title: "paymentdtl_rowid",
                          hidden: true
                      },
                        {
                            field: "In_farmer_code",
                            title: "Farmer Code",
                            width: 100,
                        },
                     {
                         field: "In_farmer_name",
                         title: "Famer Name",
                         width: 100,
                     },
                        {
                            field: "In_req_no",
                            title: "Req No",
                            width: 100,
                            hidden: true,
                        },

                      {
                          field: "In_amount_paid",
                          title: "Amount To be Paid",
                          width: 100,
                      },

                        {
                            field: "In_status_code",
                            title: "status_code",
                            hidden: true
                        },
                         {
                             field: "In_mode_flag",
                             title: "mode_flag",
                             hidden: true
                         },
                 {
                     field: "In_status_desc",
                     title: "Status",
                     width: 100,
                     hidden: true,
                 },
                 ],
                 editable: true
             });
            var gridRowID = -1;
            function sel_checkbox() {
                gridRowID++;
                return '<input id="chk_sel_' + gridRowID + '" class="checkbox" type="checkbox" />';
            }

            function onDataBound(e) {
                var selectedItem = [];
                $(".checkbox").bind("change", function (e) {
                    $(e.target).closest("tr").toggleClass("k-state-selected");
                });
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    $("#selectall").click(function (ev) {
        var checked = ev.target.checked;
        //alert(checked);
        if (checked) {
            $('.checkbox').prop('checked', true);
        } else {
            $('.checkbox').prop('checked', false);
        }
    });

</script>


<script>
    function mandatory() {
        try {
            var mandatory_check = true;

            var grid_validate_msg = "";
            if ($("#txtValidity1").val() == "" && $("#txtValidity2").val() == "") {
                grid_validate_msg += "Kindly Select Period - From & To Date </br>";
                mandatory_check = false;
            }
            else {
                if ($("#txtValidity1").val() == "") {
                    grid_validate_msg += "Kindly Select From Date </br>";
                    mandatory_check = false;
                }
                if ($("#txtValidity2").val() == "") {
                    grid_validate_msg += "Kindly Select To date </br>";
                    mandatory_check = false;
                }
            }
            if (mandatory_check == false) {
                kendoAlert(grid_validate_msg);
                return false;
            }
            else {
                return listLoad();
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function listLoad() {
        try {
            var formval = form_Serialize("payment_AdviceForm");
            var obj_val = JSON.parse(formval);
            obj_val.In_from_date = $("#txtValidity1").val();
            obj_val.In_to_date = $("#txtValidity2").val();
            obj_val.In_payment_id = 'o';
            obj_val.In_payment_rowid = 0;

            if (obj_val.hasOwnProperty('from_date')) {
                if (obj_val.In_from_date != '')
                    obj_val.In_from_date = getFormated_StringDate(obj_val.In_from_date);
            }
            if (obj_val.hasOwnProperty('to_date')) {
                if (obj_val.In_to_date != '')
                    obj_val.In_to_date = getFormated_StringDate(obj_val.In_to_date);
            }

            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Header = obj_val;
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, payment_rowid: Context.Header.payment_rowid, payment_id: Context.Header.payment_id, from_date: Context.Header.from_date, to_date: Context.Header.to_date }),
                url: "/PAWHSPaymentAdvice/PAWHSPaymentAdvicefetch",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        //generate_PAWHSPaymentAdvice_header(response.context.Header);
                        //generate_PAWHSPaymentAdvice_Detail(response.context.Detail);
                        generate_PAWHSPA_header(response.context.Header);
                        generate_PAWHSPA_Detail(response.context.Detail);

                    }
                    else { }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }
            });
           // retrieve_PAWHSPA_details(data);

            var colCount = $("#grid_pay_advice").find('.k-grid-header colgroup > col').length;
            if ($("#grid_pay_advice").data("kendoGrid").dataSource._view.length == 0) {
                $("#grid_pay_advice").find('.k-grid-content tbody')
                    .append('<tr class="kendo-data-row"><td colspan="' +
                        colCount +
                   '" style="text-align:center; padding-top:10px;background-color:#AFE4FA"><b> No Records Found</b></td></tr>');
          
                $('#btnReport1').hide();
            }             
            return false;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function get_PAWHSPaymentAdvice_details(res) {
        try {
            var formval = form_Serialize("payment_AdviceForm");
            var obj_val = JSON.parse(formval);
            obj_val.payment_rowid = res.IOU_payment_rowid;
            obj_val.payment_id = res.IOU_payment_id;
            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, payment_rowid: Context.Header.payment_rowid, payment_id: Context.Header.payment_id, from_date: Context.Header.from_date, to_date: Context.Header.to_date }),
                url: "/PAWHSPaymentAdvice/PAWHSPaymentAdvicefetch",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_PAWHSPaymentAdvice_header(response.context.Header);
                        generate_PAWHSPaymentAdvice_Detail(response.context.Detail);
                    }
                    else { }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }
            });
          //  retrieve_PAWHSPaymentAdvice_details(data);
            $("#txtMode").val("U");
            return false;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_PAWHSPaymentAdvice_header(res) {
        try {
            $("#txtpayment_rowid").val(res.IOU_payment_rowid)
            $("#txt_pay").val(res.IOU_payment_id);
            $("#txtValidity1").val(res.IOU_from_date);
            $("#txtValidity2").val(res.IOU_to_date);

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_PAWHSPaymentAdvice_Detail(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                GridPay(data);
            }
            else {
                GridPay([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_PAWHSPA_header(res) {
        try {


        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_PAWHSPA_Detail(res) {
        try {
            $("#g_tx_div").empty();
            $("#g_tx_div").append("<div id='grid_pay_advice'></div>");
            var grid = $("#grid_pay_advice").data("kendoGrid");
            if (grid) {
                var dataSource_Tax = grid.dataSource;
                for (var i = res.length - 1; i >= 0; i--) {
                    dataSource_Tax.insert(
                        {
                            In_paymentdtl_rowid: res[i].In_paymentdtl_rowid,
                            In_farmer_code: res[i].In_farmer_code,
                            In_farmer_name: res[i].In_farmer_name,
                            In_req_no: res[i].In_status_code,
                            In_amount_paid: res[i].In_amount_paid,
                        });
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function save() {
        debugger;
        try {

            if ($("#txtpayment_rowid").val() == "") {
                $("#txtpayment_rowid").val('0');
            }

            if ($("#txtMode").val() == "S") {
                $("#txtMode").val('U');
            }
            if ($("#txtMode").val() == "") {
                $("#txtMode").val('I');
            }
            if ($("#txt_pay").val() == "o") {
                $("#txt_pay").val('0');
            }
            if ($("#txt_pay").val() == "") {
                $("#txt_pay").val('0');
            }
            $('#txtValidity1').removeAttr("disabled");
            $('#txtValidity2').removeAttr("disabled");

            var formval = form_Serialize("payment_AdviceForm");
            var obj_val = JSON.parse(formval);
            if (obj_val.hasOwnProperty('IOU_from_date')) {
                if (obj_val.IOU_from_date != '')
                    obj_val.IOU_from_date = getFormated_StringDate(obj_val.IOU_from_date);
            }
            if (obj_val.hasOwnProperty('IOU_to_date')) {
                if (obj_val.IOU_to_date != '')
                    obj_val.IOU_to_date = getFormated_StringDate(obj_val.IOU_to_date);
            }
            obj_val.In_total_amount = 0;
            obj_val.In_bank_name = 0;
            var grid = $("#grid_pay_advice").data("kendoGrid");
            var selected = [];
            grid.tbody.find("input:checked").closest("tr").each(function (index) {
                selected.push(grid.dataItem(this));
            });
           
            var result = selected;
            if (result.length == 0) {
                kendoAlert("Atleast one record needs to be Selected");
                return false;
            }
            $.each(result, function (index, value) {               
                var status_code = value.In_status_code;
                if (status_code == undefined || status_code == '') {
                    result[index].In_status_code = "0";
                }
                var row_id = value.In_paymentdtl_rowid;
                if (row_id == undefined || row_id == '') {
                    result[index].In_paymentdtl_rowid = "0";
                }               
                var mode_flag = value.In_mode_flag;
                if (mode_flag == undefined || mode_flag == '') {
                    result[index].In_mode_flag = "I";
                }
                var mmode = result[index].In_mode_flag;
                if (mmode == "S") {
                    result[index].In_mode_flag = "U";
                }

            });
            var obj_grid_val = result;
            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            data.context.Detail = obj_grid_val;
            data.context.Header.In_from_date = obj_val.IOU_from_date;
            data.context.Header.In_to_date = obj_val.IOU_to_date;
            var Context = data.context;
            var Header = data.context.Header;
            var Detail = data.context.Detail;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
                url: "/PAWHSPaymentAdvice/PAWHSPaymentAdviceSave",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    console.log(response)
                    var Res = JSON.parse(response);
                    if (Res.context != null) {
                        var mode = $("#txtMode").val();
                        kendoAlert("Payment Advice saved successfully");
                        get_PAWHSPaymentAdvice_details(Res.context.Header);
                    }
                    else {
                        kendoAlert(Res.ApplicationException.errorDescription);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
            //save_PAWHSPaymentAdvice_details(data);
            $("#btnReport1").show();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


</script>
<style>
    .k-grid-header th.k-header, .k-filter-row th {
        text-align: left;
    }
</style>





