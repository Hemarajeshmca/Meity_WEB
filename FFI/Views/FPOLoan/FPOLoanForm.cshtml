@{
    ViewBag.Form = "FPO Loan";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}

<form id="Fpoloan_form" class="form-horizontal">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtfpoloan_accno" class="col-sm-5 control-label">Loan Account No.</label>
                        <div class="col-sm-6">
                            <input type="text" id="txtfpoloan_accno" name="In_fpoloan_no" class="form-control" maxlength="20">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="Institution_lending" class="col-sm-5 control-label required">Lending Institution:</label>
                        <div class="col-sm-6">
                            <input type="text" id="Institution_lending" name="In_Institution_lending" class="form-control" maxlength="50">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="cmbins_type" class="col-sm-5 control-label required">Lending Institution Type</label>
                        <div class="col-sm-6">
                            <input id="cmbins_type" data-role="filtercombo" name="In_institution_type" style="width:100%">
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="sanctioned_date" class="col-sm-5 control-label required">Disbursement Date</label>
                        <div class=" col-sm-6">
                            <input class="cusDate" data-role='datepicker' id="sanctioned_date" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="In_sanctioned_date" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtloan_amount" class="col-sm-5 control-label">Loan Amount</label>
                        <div class="col-sm-6">
                            <input type="text" id="txtloan_amount" name="In_Loan_amount" class="form-control" value="0" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="cmbrepay_freq" class="col-sm-5 control-label required">Repayment Frequency</label>
                        <div class="col-sm-6">
                            <input id="cmbrepay_freq" data-role="filtercombo" name="In_repayment_freq" style="width:100%">
                        </div>
                    </div>
                </div>

            </div>
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txtrepey_tenure" class=" col-sm-5 control-label required">Repayment Tenure(Years)</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtrepey_tenure" name="In_repayment_in_yrs" class="form-control number" maxlength="50">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="interest_rate" class="col-sm-5 control-label required">Interest Rate</label>
                        <div class="col-sm-6">
                            <input type="text" id="interest_rate" name="In_interest_rate" class="form-control" maxlength="50">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txtInstlmntno" class=" col-sm-5 control-label required"> Instalment Nos</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtInstlmntno" name="In_repayment_in_months" class="form-control" value="0" maxlength="50" readonly>
                        </div>
                    </div>
                </div>

            </div>
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="cmbcollateral_type" class=" col-sm-5 control-label">Collateral Type</label>
                        <div class="col-sm-6">
                            <input id="cmbcollateral_type" data-role="filtercombo" name="In_collateral_type" style="width:100%">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txtcollateral_amount" class=" col-sm-5 control-label">Collateral Amount</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtcollateral_amount" name="In_collateral_amount" class="form-control" maxlength="50">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="fpoloan_startdate" class="col-sm-5 control-label required">FPO Loan Start Date</label>
                        <div class=" col-sm-6">
                            <input class="cusDate" data-role='datepicker' id="fpoloan_startdate" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="In_fpoloan_start_date" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                    </div>
                </div>

            </div>
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txttotalrev_amount" class=" col-sm-5 control-label">Total Amount Received</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txttotalrev_amount" name="In_received_amount" class="form-control" value="0" maxlength="50" readonly>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txtprinc_amount" class=" col-sm-5 control-label">Princ. Amount Repaid</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtprinc_amount" name="In_principle_paid" class="form-control" value="0" maxlength="50" readonly>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txtint_repaid" class=" col-sm-5 control-label">Int. Amount Repaid</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtint_repaid" name="In_interest_paid" class="form-control" value="0" maxlength="50" readonly>
                        </div>
                    </div>
                </div>

            </div>
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtprinc_outstandingamount" class="col-sm-5 control-label required">Princ. Outstanding</label>
                        <div class="col-sm-6">
                            <input type="text" id="txtprinc_outstandingamount" name="In_princ_outstanding_amount" class="form-control" value="0" maxlength="50" readonly>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="cmbfpoloan_status" class="col-sm-5 control-label required">FPO Loan Status</label>
                        <div class="col-sm-6">
                            <input id="cmbfpoloan_status" data-role="filtercombo" name="In_status_code" style="width:100%">
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-sm-6">
                <div class="form-group" style="display:none;">
                    <label for="txtfpoloan_rowid" class="col-sm-5 control-label">fpoloan_rowid</label>
                    <div class="col-sm-4">
                        <input type="text" id="txtfpoloan_rowid" name="IOU_fpoloan_rowid" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group" style="display:none;">
                    <label for="txtfpoorgn_code" class="col-sm-5 control-label">fpoorgn_code</label>
                    <div class="col-sm-4">
                        <input type="text" id="txtfpoorgn_code" name="In_fpoorgn_code" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group" style="display:none;">
                    <label for="txtMode" class="col-sm-5 control-label">mode_flag</label>
                    <div class="col-sm-4">
                        <input type="text" id="txtMode" name="In_mode_flag" class="form-control" maxlength="10" value="I">
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group" style="display:none;">
                    <label for="txtrow_timestamp" class="col-sm-5 control-label">row_timestamp</label>
                    <div class="col-sm-4">
                        <input type="text" id="txtrow_timestamp" name="In_row_timestamp" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>
           
            <section class="col-md-12">
                <div id="tab_list" class="col-md-12">
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a href="#Tranche" onclick="tranche1()" role="tab" data-toggle="tab">
                                Tranche
                            </a>
                        </li>
                        <li>
                            <a href="#Repayment" onclick="Repayment1()" id="" role="tab" data-toggle="tab">
                                Repayment
                            </a>
                        </li>
                    </ul>
                    <div class="tab-content">

                        <div class="tab-pane fade active in" id="Tranche">
                            <div class="panel panel-default">
                                <div class="panel-body">

                                    <div class="col-xs-12">
                                        <div id="grid_fpo_header">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade active in" id="Repayment">
                            <div class="panel panel-default">
                                <div class="panel-body">

                                    <div id="grid_fpo_repayment"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>

</form>
<script>
    click_act_name = "FPOLoanList";
    click_ctrl_name = "FPOLoan";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script src="~/API_Scripts/FPOLoan.js"></script>
<script src="~/API_Scripts/saveFPOLoan_Model.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script>
    $(document).ready(function () {

        kendodate_format();
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#Fpoloan_form");
        kendo.init(container);
        container.kendoValidator({
        });
        $('#frmlayerdiv').hide();
        var org_type = getlocalStorage('org_id');
        $('#txtfpoorgn_code').val(org_type);

        var combo_Instuite = "";
        $("#cmbins_type").empty();
        combo_Instuite = grid_comboScreen_mastercodes("QCD_FL_INSTYPE");
        filter_combobox("cmbins_type", combo_Instuite);


        var combo_collateral = "";
        $("#cmbcollateral_type").empty();
        combo_collateral = grid_comboScreen_mastercodes("QCD_COLASEC");
        filter_combobox("cmbcollateral_type", combo_collateral);

        //loan status
        var combo_loanstatus = "";
        $("#cmbfpoloan_status").empty();
        combo_loanstatus = grid_comboScreen_mastercodes("QCD_LOANSTATUS");
        filter_combobox("cmbfpoloan_status", combo_loanstatus);
        setlocalStorage("status", "Active");
        // repayment frequency
        var combo_repayfreq = "";
        $("#cmbrepay_freq").empty();
        combo_repayfreq = grid_comboScreen_mastercodes("QCD_REPAY");
        filter_combobox("cmbrepay_freq", combo_repayfreq);


        $(".file_attach").attr("hdrtitle", "FPO Loan");
        $(".notes").attr("hdrtitle", "FPO Loan");
        $("#lblForm_menuid").text("FPOLGMT");

        $("#common_id").text("FPO Loan Account No");
        $("#txtfpoloan_accno").prop("disabled", false);


        gridFpoheader();
        gridFpoRepayment();
        $("div#Repayment").hide();
        if (getlocalStorage('btn_clk_val') == "Create") {
            $('#divCreate #review').hide();
            $("#txtMode").val("I");
            $("#bottom_menus").hide();
            $("#fpoloan_no").val("0");
            $("#DocStat").val("New");
        }
        else if (getlocalStorage('btn_clk_val') == "View" || getlocalStorage('btn_clk_val') == "Edit") {
            debugger;
            $('#divEdit #reviewEd').hide();
            $('#divEdit #btnApprove').hide();
            $('#divEdit #btnReject').hide();
            $("#bottom_menus li:nth-child(1)").hide();
            $("#bottom_menus li:nth-child(3)").hide();
            if (getlocalStorage("ls_pageList") != undefined) {
                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("Fpoloan_form");
                var obj_val = JSON.parse(formval);
                obj_val.In_fpoloan_no = data.out_fpoloan_no;
                obj_val.IOU_fpoloan_rowid = data.out_fpoloan_rowid;
                $("#txtfpoloan_accno").val(data.out_fpoloan_no);
                $("#txtfpoloan_rowid").val(data.out_fpoloan_rowid);
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                var Context = data.context;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, IOU_fpoloan_rowid: Context.Header.IOU_fpoloan_rowid, In_fpoloan_no: Context.Header.In_fpoloan_no }),
                    url: "/FPOLoan/LRSFPOLoanfetch",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        if (response.context != null) {
                            generate_FPOLoan_header(response.context.Header);
                            generate_FPOLoan_Tranche(response.context.Header.LRSFPOLoanTranche);
                            generate_FPOLoan_Repayment(response.context.Header.LRSFPOLoanRepayment);
                            $("#hdn_mode_flag").val("U");
                            setlocalStorage('doc_row_id', $("#txtfpoloan_rowid").val());
                        }
                        else {

                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });


            }
        }
    
        var startDate = $("#sanctioned_date").kendoDatePicker({
            format: "dd/MM/yyyy"
        });
        $("#sanctioned_date").kendoDatePicker({
            max: new Date(),
            format: "dd/MM/yyyy"
            , change: onchange
        });
        $("#fpoloan_startdate").kendoDatePicker({
            max: new Date(),
            format: "dd/MM/yyyy"
        });
        $("#sanctioned_date").data("kendoDatePicker").trigger("change");
        function onchange() {
            var newDateTime = startDate.val().split('/');
            var mindate = newDateTime[1] + '/' + newDateTime[0] + '/' + newDateTime[2];
            $("#fpoloan_startdate").kendoDatePicker({
                format: "dd/MM/yyyy",
                min: mindate
            });
        }
        var container = $("#sanctioned_date");
        kendo.init(container);
        container.kendoValidator({
            rules: {
                checkdate: function (input) {
                    if (input.attr("data-role") == "datepicker") {
                        var res = isDate(input.val());
                        return res;
                    }
                    else {
                        return true;
                    }
                }
            }
        });

        var container = $("#fpoloan_startdate");
        kendo.init(container);
        container.kendoValidator({
            rules: {
                checkdate: function (input) {
                    if (input.attr("data-role") == "datepicker") {
                        var res = isDate(input.val());
                        return res;
                    }
                    else {
                        return true;
                    }
                }
            }
        });

    });
    $('#txtfpoloan_accno').keypress(function (e) {
        var regex = new RegExp(/^[a-zA-Z0-9\s]+$/);
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        else {
            e.preventDefault();
            return false;
        }
    });
    $('#interest_rate').keypress(function (event) {
        var $this = $(this);
        if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
           ((event.which < 48 || event.which > 57) &&
           (event.which != 0 && event.which != 8))) {
            event.preventDefault();
        }

        var text = $(this).val();
        if (text.indexOf('.') != -1) {
            setTimeout(function () {
                if ($this.val().substring($this.val().indexOf('.')).length > 3) {
                    $this.val($this.val().substring(0, $this.val().indexOf('.') + 3));
                }
            }, 1);
            if ((text.indexOf('.') != -1) &&
           (text.substring(text.indexOf('.')).length > 2) &&
           (event.which != 0 && event.which != 8) &&
           ($(this)[0].selectionStart >= text.length - 2)) {
                event.preventDefault();
            }
        }
        else {
            if ($this.val().length > 2) {
                if (event.which != 46) {
                    event.preventDefault();
                }
            }
        }

    });

    $('#interest_rate').bind("paste", function (e) {
        var text = e.originalEvent.clipboardData.getData('Text');
        if ($.isNumeric(text)) {
            if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                e.preventDefault();
                $(this).val(text.substring(0, text.indexOf('.') + 3));
            }
        }
        else {
            e.preventDefault();
        }
    });

    $('#txtloan_amount').keypress(function (event) {
        var $this = $(this);
        if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
           ((event.which < 48 || event.which > 57) &&
           (event.which != 0 && event.which != 8))) {
            event.preventDefault();
        }

        var text = $(this).val();
        if (text.indexOf('.') != -1) {
            if ((text.indexOf('.') != -1) &&
           (text.substring(text.indexOf('.')).length > 2) &&
           (event.which != 0 && event.which != 8) &&
           ($(this)[0].selectionStart >= text.length - 2)) {
                event.preventDefault();
            }
        }
        else {
            if ($this.val().length > 17) {
                if (event.which != 46) {
                    event.preventDefault();
                }
            }
        }

    });
    $('#txtloan_amount').bind("paste", function (e) {
        var text = e.originalEvent.clipboardData.getData('Text');
        if ($.isNumeric(text)) {
            if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                e.preventDefault();
                $(this).val(text.substring(0, text.indexOf('.') + 3));
            }
        }
        else {
            e.preventDefault();
        }
    });

    $('#txtcollateral_amount').keypress(function (event) {
        var $this = $(this);
        if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
           ((event.which < 48 || event.which > 57) &&
           (event.which != 0 && event.which != 8))) {
            event.preventDefault();
        }

        var text = $(this).val();
        if (text.indexOf('.') != -1) {
            if ((text.indexOf('.') != -1) &&
           (text.substring(text.indexOf('.')).length > 2) &&
           (event.which != 0 && event.which != 8) &&
           ($(this)[0].selectionStart >= text.length - 2)) {
                event.preventDefault();
            }
        }
        else {
            if ($this.val().length > 17) {
                if (event.which != 46) {
                    event.preventDefault();
                }
            }
        }

    });
    $('#txtcollateral_amount').bind("paste", function (e) {
        var text = e.originalEvent.clipboardData.getData('Text');
        if ($.isNumeric(text)) {
            if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                e.preventDefault();
                $(this).val(text.substring(0, text.indexOf('.') + 3));
            }
        }
        else {
            e.preventDefault();
        }
    });

    var ddl = "";
    $("#cmbrepay_freq").change(function () {
        var c = $('#cmbrepay_freq');
        ddl = c.data('kendoComboBox').value();
        var repayTenure = $('#txtrepey_tenure').val();
        if (repayTenure == '' || repayTenure == undefined) {
            repayTenure = 0;
        }
        var instlmntno = 0;
        if (ddl != "" && ddl != undefined) {
            if (ddl == 'QCD_REPAY_MON') {
                instlmntno = repayTenure * 12;
            }
            if (ddl == 'QCD_REPAY_QUAT') {
                instlmntno = repayTenure * 4;
            }
            if (ddl == 'QCD_REPAY_HALF') {
                instlmntno = repayTenure * 2;
            }
            if (ddl == 'QCD_REPAY_ANNU') {
                instlmntno = repayTenure * 1;
            }
            $("#txtInstlmntno").removeAttr("readonly");
            $('#txtInstlmntno').val(instlmntno);
            $("#txtInstlmntno").attr('readonly', 'true');
        }

    });

    $("input").change(function () {
        var cmbTxt = $('#cmbrepay_freq');
        var ddlTxt = cmbTxt.data('kendoComboBox').value();
        var repayTenure = $('#txtrepey_tenure').val();
        if (repayTenure == '' || repayTenure == undefined) {
            repayTenure = 0;
        }
        var instlmntno = 0;
        if (ddlTxt != "" && ddlTxt != undefined) {
            if (ddlTxt == 'QCD_REPAY_MON') {
                instlmntno = repayTenure * 12;
            }
            if (ddlTxt == 'QCD_REPAY_QUAT') {
                instlmntno = repayTenure * 4;
            }
            if (ddlTxt == 'QCD_REPAY_HALF') {
                instlmntno = repayTenure * 2;
            }
            if (ddlTxt == 'QCD_REPAY_ANNU') {
                instlmntno = repayTenure * 1;
            }
            $("#txtInstlmntno").removeAttr("readonly");
            $('#txtInstlmntno').val(instlmntno);
            $("#txtInstlmntno").attr('readonly', 'true');
        }
    });

</script>
<script>
    function load_master_code() {
        debugger;
        var data = {};
        var context = WebAPIProxy.getContext();
        data.userId = context.userId
        data.orgnId = context.orgnId
        data.locnId = context.locnId
        data.localeId = context.localeId
        data.screen_Id = "FPOLGMT";
        var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
    }

</script>
<script>
    function tranche1() {
        try {
            $("div#Tranche").toggleClass('tab-pane fade active in');
            $("div#Repayment").hide();
            $("div#Tranche").show();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Repayment1() {
        try {
            $("div#Repayment").toggleClass('tab-pane fade active in');
            $("div#Tranche").hide();
            $("div#Repayment").show();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>
<script>
    var tranchetotal = 0;
    function gridFpoheader(data) {
        try {
            $("#grid_fpo_header").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_tranche_amount: { type: "number", validation: { required: { message: "Tranche amount cannot be blank" } } },
                                In_tranche_no: { type: "string", validation: { required: { message: "Tranche No cannot be blank" } } },
                                In_received_date: { type: "date", validation: { required: { message: "Tranche No cannot be blank" } } },
                                In_status_code: { type: "string", defaultValue: "A" },
                                In_status_desc: { type: "string", defaultValue: getlocalStorage('status'), editable: false },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 400,
                width: 100,
                groupable: false,
                dataBinding: setDefaultValues,
                edit: OnEdit,
                change: function (e) {
                    if (e.action == "itemchange" && e.field == "In_tranche_amount") {
                        alert("Name field changed and updated in model.");
                    }
                },
                sortable: false,
                selectable: true,
                navigatable: true,


                columns: [{
                    command: [
            {
                name: "Delete",
                id: "Delete",
                imageClass: "fa fa-close",
                click: function (e) {
                    var grid = $("#grid_fpo_header").data("kendoGrid");
                    var dataItem = $("#grid_fpo_header").data("kendoGrid").dataItem($(e.target).closest("tr"));
                    DeleteWindowEvent(e, dataItem, grid);
                    e.stopImmediatePropagation()
                }
            },
                    ], title: "&nbsp;", width: "25px",
                },
                {
                    field: "In_fpoloantranche_rowid",
                    title: "fpoloantranche_rowid",
                    hidden: true
                },
                 {
                     field: "In_tranche_no",
                     title: "Tranche No",
                     width: 100,
                 },
                 {
                     field: "In_tranche_amount",
                     title: "Tranche Amount",
                     width: 100,
                     editor: function (container, options) {
                         item_rate(container, options.field, '9', '2');
                     },

                 }, {
                     field: "In_received_date",
                     title: "Received Date",
                     format: "{0:dd/MM/yyyy}",
                     width: 100
                 },
                   {
                       field: "In_status_code",
                       title: "status_code",
                       hidden: true,
                       width: 100,
                   },
                {
                    field: "In_status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "status_code", "grid_Address")
                    },
                    width: 100,
                },
                 {
                     field: "In_row_timestamp",
                     title: "row_timestamp",
                     hidden: true,
                     width: 100,
                 },

                {
                    field: "In_mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    In_status_desc_list = grid_comboScreen_mastercodes("STATUS");
    function OnEdit(e) {
        setDefaultValues(e);
        e.container.find("input[name='In_tranche_amount']").focusout(function () {
            resultData = e.sender._data;
            var rows = $('#grid_fpo_header').data('kendoGrid').tbody.children();
            setColor(rows, resultData);
            var sanction_amt = $('#txtloan_amount').val();
            sanction_amt = sanction_amt != undefined ? sanction_amt : 0;
            var grid = $("#grid_fpo_header").data("kendoGrid");
            var gridData = grid.dataSource.view();
            tranchetotal = 0;
            for (var i = 0; i < gridData.length; i++) {
                if (gridData[i].tranche_amount != '') {
                    tranchetotal += gridData[i].In_tranche_amount != undefined ? parseFloat(gridData[i].In_tranche_amount) : parseFloat(0);
                    if (parseFloat(sanction_amt) < parseFloat(tranchetotal)) {
                        $('#grid_fpo_header').data('kendoGrid').dataSource.read();
                        $('#grid_fpo_header').data('kendoGrid').refresh();
                        kendoAlert('Tranche amount should be less than or equal to Loan amount');
                        return false;
                    }
                }
            }
            $('#txttotalrev_amount').val(tranchetotal);

        });
    }
</script>
<script>
    var In_payment_mode_desc_list = ""
    var In_status_desc_list = ""
    var In_bank_acc_type_desc_list = ""
    var pricipleamt = 0;
    var intrestamt = 0;

    function gridFpoRepayment(data) {
        try {
            $("#grid_fpo_repayment").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_principle_amount: { type: "number", validation: { required: { message: "Principle amount cannot be blank" } } },
                                In_interest_amount: { type: "number", validation: { required: { message: "Intrest amount cannot be blank" } } },
                                In_penalty_amount: { type: "number", validation: { required: { message: "Penalty amount cannot be blank" } } },
                                In_waiver_amount: { type: "number", validation: { required: { message: "Waiver amount cannot be blank" } } },
                                In_instalment_date: { type: "date", validation: { required: { message: "Instalment date cannot be blank" } } },
                                In_paid_date: { type: "date", validation: { required: { message: "Paid date cannot be blank" } } },
                                In_instalment_amount: { type: "number", validation: { required: { message: "Instalment amount cannot be blank" } } },
                                In_instalment_no: { type: "number", validation: { required: { message: "Instalment no cannot be blank" } } },
                                In_payment_method: { type: "string" },
                                In_payment_mode_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_payment_mode_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Payment mode cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                In_bank_acc_type_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_bank_acc_type_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Bank Account Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                In_bank_ref_no: { type: "string", validation: { required: { message: "Bank Ref. No cannot be blank" } } },
                                In_bank_ifsc_code: { type: "string", validation: { required: { message: "IFSC Code cannot be blank" } } },
                                In_payment_status: { type: "string" },
                                In_status_code: { type: "string" },
                                In_status_desc: { type: "string", defaultValue: getlocalStorage('status'), editable: false },
                                In_mode_flag: { type: "string", defaultValue: "I" },
                                In_lend_balance_amount: { type: "string", defaultValue: "0" }
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 400,
                width: 100,
                groupable: false,
                dataBinding: setDefaultValues,
                edit: OnEdiRepay,
                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_fpo_repayment').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                    pricipleamt = 0;
                    intrestamt = 0;
                    var grid = $("#grid_fpo_repayment").data("kendoGrid");
                    var gridData = grid.dataSource.view();
                    for (var i = 0; i < gridData.length; i++) {
                        if (gridData[i].principle_amount != '') {
                            pricipleamt += gridData[i].In_principle_amount != undefined ? parseFloat(gridData[i].In_principle_amount) : parseFloat(0);
                        }
                        if (gridData[i].interest_amount != '') {
                            intrestamt += gridData[i].In_interest_amount != undefined ? parseFloat(gridData[i].In_interest_amount) : parseFloat(0);
                        }
                    }
                    $('#txtprinc_amount').val(parseFloat(pricipleamt).toFixed(2));
                    $('#txtint_repaid').val(parseFloat(intrestamt).toFixed(2));
                    var balamount = (parseFloat($("#txttotalrev_amount").val()) - parseFloat($("#txtprinc_amount").val())).toFixed(2);
                    $("#balance_amount").val(parseFloat(balamount).toFixed(2));
                },
                sortable: false,
                selectable: true,
                navigatable: true,


                columns: [{
                    command: [
            {
                name: "Delete",
                id: "Delete",
                imageClass: "fa fa-close",
                click: function (e) {
                    var grid = $("#grid_fpo_repayment").data("kendoGrid");
                    var dataItem = $("#grid_fpo_repayment").data("kendoGrid").dataItem($(e.target).closest("tr"));
                    DeleteWindowEvent(e, dataItem, grid);
                    e.stopImmediatePropagation()
                }
            },
                    ], title: "&nbsp;", width: "25px",
                },
                {
                    field: "In_loanrepayment_rowid",
                    title: "loanrepayment_rowid",
                    hidden: true
                },
                 {
                     field: "In_loanrepayment_rowid",
                     title: "loanrepayment_rowid",
                     hidden: true
                 },
                             
                    {
                     field: "In_instalment_amount",
                     title: "Dues (INR)",
                     width: 100,
                     editor: function (container, options) {
                         item_rate(container, options.field, '9', '2');
                     },
                    },
                    {
                        field: "In_instalment_date",
                        title: "Due Date",
                        format: "{0:dd/MM/yyyy}",
                        width: 100
                    },
                    {
                     field: "In_principle_amount",
                     title: "Princ. Amount",
                     width: 100,
                     editor: function (container, options) {
                         item_rate(container, options.field, '9', '2');
                     },
                    },
                    {
                        field: "In_interest_amount",
                        title: "Int. Amount",
                        width: 100,
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },
                    },
                    {
                        field: "In_penalty_amount",
                        title: "Penalty(INR)",
                        width: 100,
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },
                        
                    },
                    {
                        field: "In_waiver_amount",
                        title: "Waiver (INR)",
                        width: 100,
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },

                    },                
                    {
                      field: "In_payment_mode_desc",
                      title: "Paymode",
                      editor: function (container, options) {
                          combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_payment_mode", "grid_fpo_repayment")
                      },
                      width: 100,
                    },
                    {
                        field: "In_paid_date",
                        title: "Paid Date",
                        format: "{0:dd/MM/yyyy}",
                        width: 100
                    },
                    {
                        field: "In_bank_ref_no",
                        title: "Ref No",
                        width: 100,
                    },
                    {
                        field: "In_status_code",
                        title: "status_code",
                        hidden: true,
                        width: 100,
                    },
                    {
                        field: "In_status_desc",
                        title: "Status",
                        editor: function (container, options) {
                            combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_status_code", "grid_fpo_repayment")
                        },
                        width: 100,
                    },
                   {
                       field: "In_payment_mode",
                       title: "paymentmode",
                       hidden: true
                   },
                  {
                      field: "In_bank_code",
                      title: "bank_code",
                      hidden: true
                  },
                  {
                      field: "In_bank_acc_type",
                      title: "bank_acc_type",
                      hidden: true
                  },
                  {
                      field: "In_bank_acc_type_desc",
                      title: "Account Type",
                      editor: function (container, options) {
                          combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_bank_acc_type", "grid_fpo_repayment")
                      },
                      width: 100,
                      hidden: true
                  },
                  {
                      field: "In_bank_acc_no",
                      title: "Account No",
                      width: 100, hidden: true
                  },
                  {
                      field: "In_bank_ifsc_code",
                      title: "IFSC code",
                      width: 100,
                      hidden: true
                    },
                   
                   
                   {
                       field: "In_row_timestamp",
                       title: "row_timestamp",
                       hidden: true,
                       width: 100,
                   },
                   {
                       field: "In_chq_date",
                       title: "chq_date",
                       width: 100, hidden: true
                   },
                   {
                       field: "In_chq_no",
                       title: "chq_no",
                       width: 100,
                       hidden: true
                    },
                    {
                        field: "In_instalment_no",
                        title: "instalment_no",
                        width: 100,
                        hidden: true
                    },
                    
                   {
                       field: "In_micr_code",
                       title: "micr_code",
                       width: 100,
                       hidden: true
                   },
                   {
                       field: "In_chq_valid_flag",
                       title: "chq_valid_flag",
                       width: 100,
                       hidden: true
                   },
                   {
                       field: "In_repayment_remark",
                       title: "repayment_remark",
                       width: 100,
                       hidden: true
                   },
                   {
                       field: "In_repayment_status",
                       title: "repayment_status",
                       width: 100,
                       hidden: true
                   },
                   {
                       field: "In_repayment_status_desc",
                       title: "repayment_status_desc",
                       width: 100, hidden: true
                   },
                   {
                       field: "In_lend_balance_amount",
                       title: "lend_balance_amount",
                       width: 1, hidden: true
                   },
                   {
                       field: "In_mode_flag",
                       title: "Mode",
                       hidden: true
                   }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    load_master_code();
    In_payment_mode_desc_list = grid_comboScreen_mastercodes("QCD_PAYMENT_MODE");
    In_status_desc_list = grid_comboScreen_mastercodes("STATUS");
    In_bank_acc_type_desc_list = grid_comboScreen_mastercodes("QCD_BANKACCTYPE");

    function OnEdiRepay(e) {
        setDefaultValues(e);
        e.container.find("input[name='In_principle_amount']").focusout(function () {
            var princ_resultData = e.sender._data;
            var rows = $('#grid_fpo_repayment').data('kendoGrid').tbody.children();
            setColor(rows, princ_resultData);
            var received_amt = $('#txttotalrev_amount').val();
            received_amt = received_amt != undefined ? received_amt : 0;
            var princ_grid = $("#grid_fpo_repayment").data("kendoGrid");
            var princ_gridData = princ_grid.dataSource.view();
            pricipleamt = 0;
            for (var i = 0; i < princ_gridData.length; i++) {
                if (princ_gridData[i].In_principle_amount != '') {
                    pricipleamt += princ_gridData[i].In_principle_amount != undefined ? parseFloat(princ_gridData[i].In_principle_amount) : parseFloat(0);
                    if (parseFloat(received_amt) < parseFloat(pricipleamt)) {
                        $('#grid_fpo_repayment').data('kendoGrid').dataSource.read();
                        $('#grid_fpo_repayment').data('kendoGrid').refresh();
                        kendoAlert('Principal amount should be less than or equal to Received amount');
                        return false;
                    }
                }
            }
            $('#txtprinc_amount').val(parseFloat(pricipleamt).toFixed(2));
            var balamount = (parseFloat($("#txttotalrev_amount").val()) - parseFloat($("#txtprinc_amount").val())).toFixed(2);
            $("#balance_amount").val(parseFloat(balamount).toFixed(2));
        });
        
        e.container.find("input[name='In_interest_amount']").focusout(function () {
            var intr_resultData = e.sender._data;
            var intr_rows = $('#grid_fpo_repayment').data('kendoGrid').tbody.children();
            setColor(intr_rows, intr_resultData);
            var intr_grid = $("#grid_fpo_repayment").data("kendoGrid");
            var intr_gridData = intr_grid.dataSource.view();
            intrestamt = 0;
            for (var i = 0; i < intr_gridData.length; i++) {
                if (intr_gridData[i].interest_amount != '') {
                    intrestamt += intr_gridData[i].In_interest_amount != undefined ? parseFloat(intr_gridData[i].In_interest_amount) : parseFloat(0);
                }
            }
            $('#txtint_repaid').val(intrestamt.toFixed(2));

        });
    }
</script>

<script>
    function save() {
        try{
            if ($("#txtfpoloan_rowid").val() == "") {
                $("#txtfpoloan_rowid").val('0');
            }

            if ($("#txttotalrev_amount").val() == "") {
                $("#txttotalrev_amount").val('0');
            }
            if ($("#txtemi_amount").val() == "") {
                $("#txtemi_amount").val('0');
            }
            if ($("#txtrow_timestamp").val() == "") {
                $("#txtrow_timestamp").val('0');
            }

            if ($("#txtMode").val() == "S") {
                $("#txtMode").val('U');
            }
            if ($("#txtfpoloan_accno").val() == undefined || $("#txtfpoloan_accno").val() == "") {
                kendoAlert("FPO Loan Account No Cannot be blank");
                return false;
            }
            else {
                var formval = form_Serialize("Fpoloan_form");
                var obj_val = JSON.parse(formval);
                if (obj_val.hasOwnProperty('In_sanctioned_date')) {
                    if (obj_val.In_sanctioned_date != '')
                        obj_val.In_sanctioned_date = getFormated_StringDate(obj_val.In_sanctioned_date);
                }
                if (obj_val.hasOwnProperty('In_fpoloan_start_date')) {
                    if (obj_val.In_fpoloan_start_date != '')
                        obj_val.In_fpoloan_start_date = getFormated_StringDate(obj_val.In_fpoloan_start_date);
                }
               
                if (obj_val.hasOwnProperty('In_closed_date')) {
                    if (obj_val.In_closed_date != '')
                        obj_val.In_closed_date = getFormated_StringDate(In_obj_val.In_closed_date);
                }
                if ($("#txtcollateral_amount").val() == undefined || $("#txtcollateral_amount").val() == "") {
                    obj_val.In_collateral_amount = "0";
                }
                obj_val.In_fpoloan_no = $("#txtfpoloan_accno").val();

                //tranche
                var grid_val = JSON.stringify($("#grid_fpo_header").data().kendoGrid._data);
                var Bind = {};
                Bind = grid_val;

                var result = JSON.parse(Bind);
                $.each(result, function (index, value) {
                    var d = value.In_received_date;
                    var date = kendo.parseDate(d);
                    value1 = kendo.toString(date, "yyyy/MM/dd");
                    result[index].In_received_date = value1;


                    var row_id = value.In_fpoloantranche_rowid;
                    if (row_id == undefined) {
                        result[index].In_fpoloantranche_rowid = "0";
                    }

                    var row_timestamp = value.row_timestamp;
                    if (row_timestamp == undefined) {
                        result[index].In_row_timestamp = "0";
                    }
                    var mmode = result[index].In_mode_flag;
                    if (mmode == "S") {
                        result[index].In_mode_flag = "U";
                    }

                });

                var obj_grid_val = result;

                //repayment
                var grid_val1 = JSON.stringify($("#grid_fpo_repayment").data().kendoGrid._data);
                var Bind1 = {};
                Bind1 = grid_val1;
                var result1 = JSON.parse(Bind1);
                $.each(result1, function (index, value) {

                    var d = value.In_instalment_date;
                    var date = kendo.parseDate(d);
                    value = kendo.toString(date, "yyyy/MM/dd");
                    result1[index].In_instalment_date = value;

                    var dp = value.In_paid_date;
                    var datep = kendo.parseDate(dp);
                    value = kendo.toString(datep, "yyyy/MM/dd");
                    result1[index].In_paid_date = value;

                  

                    var bank_code = result1[index].In_bank_code;
                    if (bank_code == undefined || bank_code == "") {
                        result1[index].In_bank_code = "0";
                    }
                    var bank_acc_type = result1[index].In_bank_acc_type;
                    if (bank_acc_type == undefined || bank_acc_type == "") {
                        result1[index].In_bank_acc_type = "0";
                    }
                    var bank_ifsc_code = result1[index].In_bank_ifsc_code;
                    if (bank_ifsc_code == undefined || bank_ifsc_code == "") {
                        result1[index].In_bank_ifsc_code = "0";
                    }
                    var bank_acc_no = result1[index].In_bank_acc_no;
                    if (bank_acc_no == undefined || bank_acc_no == "") {
                        result1[index].In_bank_acc_no = "0";
                    }
                    var chq_no = result1[index].In_chq_no;
                    if (chq_no == undefined || chq_no == "") {
                        result1[index].In_chq_no = "0";
                    }
                    var micr_code = result1[index].In_micr_code;
                    if (micr_code == undefined || micr_code == "") {
                        result1[index].In_micr_code = "0";
                    }
                    var chq_valid_flag = result1[index].In_chq_valid_flag;
                    if (chq_valid_flag == undefined || chq_valid_flag == "") {
                        result1[index].In_chq_valid_flag = "0";
                    }
                    var repayment_remark = result1[index].In_repayment_remark;
                    if (repayment_remark == undefined || repayment_remark == "") {
                        result1[index].In_repayment_remark = "0";
                    }
                    var repayment_status = result1[index].In_repayment_status;
                    if (repayment_status == undefined || repayment_status == "") {
                        result1[index].In_repayment_status = "0";
                    }
                    var row_timestamp = result1[index].row_timestamp;
                    if (row_timestamp == undefined || row_timestamp == "") {
                        result1[index].row_timestamp = "0";
                    }
                    var repayment_rowid = result1[index].In_loanrepayment_rowid;
                    if (repayment_rowid == undefined || repayment_rowid == "") {
                        result1[index].In_loanrepayment_rowid = "0";
                    }
                    var instalment_rowid = result1[index].In_loaninstalment_rowid;
                    if (instalment_rowid == undefined || instalment_rowid == "") {
                        result1[index].In_loaninstalment_rowid = "0";
                    }
                    var mmode = result1[index].In_mode_flag;
                    if (mmode == "S") {
                        result1[index].In_mode_flag = "U";
                    }

                });
                var obj_grid_val1 = result1;
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                data.context.Tranche = obj_grid_val;
                data.context.Repayment = obj_grid_val1;
                var Context = data.context;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Tranche: Context.Tranche, Repayment: Context.Repayment }),
                    url: "/FPOLoan/LrsFpoLoanSave",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        console.log(response);
                        var Res = response;
                        if (Res.context != null) {
                            var mode = $("#hdn_mode_flag").val();
                            if (mode == "I") {
                                kendoAlert("FPO Loan Details saved successfully");
                                $('#divCreate #btnSave').hide();
                                get_FPOLoan_details(Res.context.Header);

                            }
                            else if (mode == "D") {
                                $('#divCreate #btnSave').hide();
                                kendoAlert("FPO Loan Details inactivate successfully");
                                get_FPOLoan_details(Res.context.Header);
                            }
                            else {
                                $('#divCreate #btnSave').hide();
                                kendoAlert("FPO Loan Details saved successfully");
                                get_FPOLoan_details(Res.context.Header);
                            }
                        }
                        else {
                            $('#divCreate #btnSave').show();
                            kendoAlert(Res.ApplicationException.errorDescription);
                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });
            }

        
    }
        catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
    }
    function generate_FPOLoan_header(res) {
        debugger;
        try {
            $("#txtfpoloan_accno").val(res.In_fpoloan_no);
            $("#Institution_lending").val(res.In_Institution_lending);
            $('#cmbins_type').data("kendoComboBox").value(res.In_institution_type);
            $("#sanctioned_date").val(res.In_sanctioned_date);
            $("#txtloan_amount").val(res.In_Loan_amount);
            $("#txtrepey_tenure").val(res.In_repayment_in_yrs);
            $('#cmbrepay_freq').data("kendoComboBox").value(res.In_repayment_freq);
            $("#interest_rate").val(res.In_interest_rate);
            $("#txtInstlmntno").val(res.In_repayment_in_months);
            $('#cmbcollateral_type').data("kendoComboBox").value(res.In_collateral_type);
            $("#txtcollateral_amount").val(res.In_collateral_amount);
            $("#fpoloan_startdate").val(res.In_fpoloan_start_date);
            $("#txttotalrev_amount").val(res.In_received_amount);
            var totalreceived = $("#txttotalrev_amount").val() == "" ? 0 : parseFloat($("#txttotalrev_amount").val());
            var principal_amount = $("#txtprinc_amount").val();
            if (principal_amount != 0) {
                principal_amount = parseFloat($("#txtprinc_amount").val().toFixed(2));
            }
            $("#txtprinc_outstandingamount").val(totalreceived - principal_amount);
            $('#cmbfpoloan_status').data("kendoComboBox").value(res.In_status_code);
            $("#txtMode").val("U");
            $('#DocStat').val(res.In_status_desc);
        
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_FPOLoan_Tranche(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                gridFpoheader(data);
            }
            else {

                gridFpoheader([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_FPOLoan_Repayment(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                var insAmt = 0;
                var prAmt = 0;
                for (i = 0; i < data.length; i++) {
                    if (data[i].In_instalment_amount != 0 || data[i].In_instalment_amount != undefined || data[i].In_instalment_amount != null || data[i].In_principle_amount == 0 || data[i].In_principle_amount == undefined || data[i].In_principle_amount == null) {
                        insAmt = insAmt + parseFloat(data[i].In_instalment_amount);
                        prAmt = prAmt + parseFloat(data[i].In_principle_amount);
                    }
                    else
                    {
                        insAmt = insAmt + data[i].In_instalment_amount;
                        prAmt = prAmt + data[i].In_principle_amount;
                    }
                  
                }
                $('#txtint_repaid').val(insAmt);
                $('#txtprinc_amount').val(prAmt);
                gridFpoRepayment(data);
            }
            else {

                gridFpoRepayment([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function get_FPOLoan_details(res) {
        var formval = form_Serialize("Fpoloan_form");
        var obj_val = JSON.parse(formval);
        var org_id = getlocalStorage('org_id');
        obj_val.orgn_code = org_id;
        obj_val.IOU_fpoloan_rowid = res.IOU_fpoloan_rowid;
        obj_val.In_fpoloan_no = res.In_fpoloan_no;
        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Header = obj_val;
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, IOU_fpoloan_rowid: Context.Header.IOU_fpoloan_rowid, In_fpoloan_no: Context.Header.In_fpoloan_no }),
            url: "/FPOLoan/LRSFPOLoanfetch",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_FPOLoan_header(response.context.Header);
                    generate_FPOLoan_Tranche(response.context.Header.LRSFPOLoanTranche);
                    generate_FPOLoan_Repayment(response.context.Header.LRSFPOLoanRepayment);
                    $("#hdn_mode_flag").val("U");
                    setlocalStorage('doc_row_id', $("#txtfpoloan_rowid").val());
                }
                else {

                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
    }
</script>
<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>