@{
    ViewBag.Form = "Buyer master";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}
<script src="~/CommonScripts/common.js"></script>
<script src="~/CommonScripts/tamil.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>
<form id="ICD_Supmst" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="cmb_menu" class="col-sm-4 control-label required ">Buyer Type</label>
                        <div class="col-sm-7" id="dropdwnbuyertype" style="margin-left: 33px;">
                            <input id="cmb_type" name="module_code" style="width: 100%" data-role="filtercombo">
                        </div>
                    </div>
                  </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="txtsup_code" class="col-sm-5 control-label">Buyer Code</label>
                            <div class="col-sm-7">
                                <input type="text" id="txtsup_code" name="In_buyer_code" class="form-control" maxlength="10" readonly onkeypress="return isValidsupcode(event,this); ">
                                <input type="hidden" id="villagecode">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="txtMobile" class="col-sm-5 control-label required">Mobile Number</label>
                            <div class="col-sm-7">
                                <input type="text" id="txtMobile" name="In_MobileNo" class="form-control" maxlength="10" onkeypress="return isNumberKey(event)" pattern="^(\d)(?!\1+$)\d{9}$">

                            </div>
                        </div>
                    </div>
                </div>
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtbuyer_name" class="col-sm-5 control-label required">Buyer Firm Name</label>
                        <div class="col-sm-7">
                            <input type="text" id="txtbuyer_name" name="In_buyer_name" class="form-control" data-toggle="tooltip" data-placement="bottom" placeholder="" onkeypress="return isValidsupcode(event,this);">
                        </div>
                    </div>
                </div>

                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtWhatsapp" class="col-sm-5 control-label required">Mobile(Whatsapp Number)</label>
                        <div class="col-sm-7">
                            <input type="text" id="txtWhatsapp" name="In_WhatsappeNo" class="form-control" maxlength="10" onkeypress="return isNumberKey(event)" pattern="^(\d)(?!\1+$)\d{9}$">

                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtContactPerson_name" class="col-sm-5 control-label required">Contact Person</label>
                        <div class="col-sm-7">
                            <input type="text" id="txtContactPerson_name" name="In_Contact_name" class="form-control" data-toggle="tooltip" data-placement="bottom" placeholder="" onkeypress="return isValidsupcode(event,this);">
                        </div>
                    </div>
                </div>
                 
            </div>
                <div class="row">
                    
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="txtEmail" class="col-sm-5 control-label">Email ID</label>
                            <div class="col-sm-7">
                                <input type="email" class="form-control" id="txtEmail" maxlength="125" name="In_Email">
                            </div>
                        </div>
                    </div>
                
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="txt_pan_no" class="col-sm-5 control-label required">PAN NO</label>
                            <div class="col-sm-7">
                                <input id="txt_pan_no" name="In_pan_no" style="width: 100%" data-role="filtercombo" class="form-control" maxlength="10" minlength="10" onkeypress="return isValidAlphanumeric(event);">
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="txtOnboard_Date" class="col-sm-5 control-label required">On Boarding Date </label>
                            <div class="col-sm-7">
                                <input class="cusDate" data-role='datepicker' name="In_Onboard_Date" id="txtOnboard_Date" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date"  style="width:100%" />
                                <span data-for='valid' class='k-invalid-msg'></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="padding-bottom:10px">
                    <div class="col-sm-6">
                        <div class="form-group" style="display:none;">
                            <label for="txt_version_no" class="col-sm-5 control-label">version_no</label>
                            <div class="col-sm-4">
                                <input type="number" id="txt_version_no" name="In_version_no" class="form-control" maxlength="10">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group" style="display:none;">
                            <label for="txt_buyer_rowid" class="col-sm-5 control-label">Buyer_rowid</label>
                            <div class="col-sm-4">
                                <input type="text" id="txt_buyer_rowid" name="In_buyer_rowid" class="form-control" maxlength="10">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group" style="display:none;">
                            <label for="status_desc" class="col-sm-5 control-label">Status_Desc</label>
                            <div class="col-sm-4">
                                <input type="text" value="A" id="txt_status_desc" name="In_status_desc" class="form-control" maxlength="10">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group" style="display:none;">
                            <label for="status_code" class="col-sm-5 control-label">Status_code</label>
                            <div class="col-sm-4">
                                <input type="text" value="A" id="txt_status_code" name="In_status_code" class="form-control" maxlength="10">
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group" style="display:none;">
                            <label for="txtMode" class="col-sm-5 control-label">Mode</label>
                            <div class="col-sm-4">
                                <input type="text" id="txtMode" name="In_mode_flag" class="form-control" maxlength="10">
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group" style="display:none;">
                            <label for="row_timestamp" class="col-sm-5 control-label">Timestamp:</label>
                            <div class="col-sm-4">
                                <input type="text" id="txt_row_timestamp" name="In_row_timestamp" class="form-control" maxlength="10">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <section class="col-md-12">
                        <div id="tab_list" class="col-md-12">
                            <ul class="nav nav-tabs">
                                <li>
                                    <a href="#Address" onclick="Address1()" role="tab" data-toggle="tab">
                                        Address
                                    </a>
                                </li>
                                <li>
                                    <a href="#tax" onclick="tax1()" role="tab" data-toggle="tab">
                                        Tax
                                    </a>
                                </li>
                            </ul>
                            <div class="tab-content">
                                <div class="tab-pane fade active in" id="Address">
                                    <div class="panel panel-default">
                                        <div class="panel-body">
                                            <div id="grid_Address"></div>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="tab-pane fade active in" id="tax">
                                        <div class="panel panel-default">
                                            <div class="panel-body">
                                                <div id="grid_tax"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
           
    </div>
</form>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script>
    click_act_name = "BuyermasterList";
    click_ctrl_name = "PAWHSNEWBuyerMaster";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>
<script>
    $(document).ready(function () {
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#ICD_Supmst");
        kendo.init(container);
        container.kendoValidator({
        });
        grid_Address_details([]);
        grid_taxdetail([]);
        $(".file_attach").attr("hdrtitle", "FPO Registration");
        $(".notes").attr("hdrtitle", "FPO Registration");
        $("#lblForm_menuid").text("PWNEWBUYERMAS");
        $("#hide_div").hide();
        Screen_Id = "PWNEWBUYERMAS";
        permission = sec_Permission(Screen_Id);
        load_master_code();
        $("div#tax").hide();

        setlocalStorage("status", "Active");
        setlocalStorage('status_code', "A");


        setlocalStorage("status", "Active");
        setlocalStorage('status_code', "A");
        if (getlocalStorage('btn_clk_val') == "Create") {
            $('#divCreate #review').hide();
            $("#txtMode").val("I");
            $("#bottom_menus").hide();
            $("#DocStat").val("New");
            load_master_code();
        }
        else if (getlocalStorage('btn_clk_val') == "Edit") {
            debugger;
            $('#divEdit #reviewEd').hide();
            $('#divEdit #deactivate').hide();
            $('#bottom_menus').hide();
            $("#DocStat").val(getlocalStorage('btn_clk_val'));
            if (getlocalStorage("ls_pageList") != undefined) {
                var data1 = getlocalStorage("ls_pageList");
                var formval = form_Serialize("ICD_Supmst");
                var obj_val = JSON.parse(formval);
                obj_val.In_buyer_rowid = data1.Out_buyer_rowid;
                obj_val.In_buyer_code = data1.Out_buyer_code;
                obj_val.In_version_no = data1.Out_version_no;
                obj_val.In_MobileNo = data1.Out_mob_no;
                obj_val.In_WhatsappeNo = data1.Out_whatsapp_no;
                obj_val.In_Contact_name = data1.Out_contact_person;
                obj_val.In_Email = data1.Out_emailid;
                obj_val.In_Onboard_Date = data1.Out_onboarding_date;
                var data = {};
                debugger;
                data.context = WebAPIProxy.getContext();
                data.context.header = obj_val;
                var Context = data.context;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, buyer_rowid: Context.header.In_buyer_rowid, buyer_code: Context.header.In_buyer_code, Header: Context.header }),
                    url: "/PAWHSNEWBuyerMaster/BuyerMasterfetch",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        if (response.context != null) {
                            generate_buyer_header(response.context.Header);
                            generate_buyer_Address(response.context.buyerAddress);
                            generate_buyer_tax(response.context.buyerTax);
                            $("#cmb_type").data("kendoComboBox").value(data1.Out_buyer_type);
                        }
                        else {
                            console.log("Issue where Dropped");
                        }
                    },
                    error: function (er) {
                        console.log(er);
                    }

                });
                $("#txtMode").val("U");
            }
        }
        else if (getlocalStorage('btn_clk_val') == "View") {
            $('#divEdit #reviewEd').hide();
            $('#divEdit #deactivate').hide();
            $('#bottom_menus').hide();
            $("#DocStat").val(getlocalStorage('btn_clk_val'));
            if (getlocalStorage("ls_pageList") != undefined) {
                var data1 = getlocalStorage("ls_pageList");
                var formval = form_Serialize("ICD_Supmst");
                var obj_val = JSON.parse(formval);
                obj_val.In_buyer_rowid = data1.Out_buyer_rowid;
                obj_val.In_buyer_code = data1.Out_buyer_code;
                obj_val.In_version_no = data1.Out_version_no;
                obj_val.In_MobileNo = data1.Out_mob_no;
                obj_val.In_WhatsappeNo = data1.Out_whatsapp_no;
                obj_val.In_Contact_name = data1.Out_contact_person;
                obj_val.In_Email = data1.Out_emailid;
                obj_val.In_Onboard_Date = data1.Out_onboarding_date;
                var data = {};
                debugger;
                data.context = WebAPIProxy.getContext();
                data.context.header = obj_val;
                var Context = data.context;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, buyer_rowid: Context.header.In_buyer_rowid, buyer_code: Context.header.In_buyer_code, Header: Context.header }),
                    url: "/PAWHSNEWBuyerMaster/BuyerMasterfetch",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        if (response.context != null) {
                            generate_buyer_header(response.context.Header);
                            generate_buyer_Address(response.context.buyerAddress);
                            generate_buyer_tax(response.context.buyerTax);
                            $("#cmb_type").data("kendoComboBox").value(data1.Out_buyer_type);
                        }
                        else {
                            console.log("Issue where Dropped");
                        }
                    },
                    error: function (er) {
                        console.log(er);
                    }

                });
                $("#txtMode").val("U");
                field_enable();

            }
        }
        function field_enable() {
            $('#cmb_type').prop("disabled", true);
                $('#txtsup_code').prop("disabled", true);
                $('#txtMobile').prop("disabled", true);
                $('#txtbuyer_name').prop("disabled", true);
                $("#txtWhatsapp").prop("disabled", true);
                $("#txtContactPerson_name").prop("disabled", true);
                $("#txtEmail").prop("disabled", true);
                $("#txt_pan_no").prop("disabled", true);
                $("#txtOnboard_Date").prop("disabled", true);   
           
        }
        $('#txt_pan_no').change(function (event) {
            debugger;
            var regExp = /[a-zA-z]{5}\d{4}[a-zA-Z]{1}/;
            var txtpan = $(this).val();
            $('#txt_pan_no').val(txtpan.toUpperCase());
            if (txtpan.length == 10) {
                if (txtpan.match(regExp)) {
                    $('#txt_pan_no').val(txtpan.toUpperCase());
                }
                else {
                    kendoAlert("Not a valid PAN number");
                    $('#txt_pan_no').val("");
                    return false;
                }
            }
            else {
                kendoAlert("Please enter 10 digits for a valid PAN number");
                return false;
            }

        });

        $("#txtOnboard_Date").kendoDatePicker({
            max: new Date(),// sets max date
            format: "dd/MM/yyyy"
        });


        var list_in = "";
        $("#cmb_type").empty();
        list_in = grid_comboScreen_mastercodes("QCD_BUYER_TYPE");
        console.log(list_in);
        filter_combobox("cmb_type", list_in);


        @*$('#cmb_type').change(function (event) {
            debugger;
            var selected_value = $(this).val();
            var data1 = { BuyerCode: selected_value}
            $.ajax({
            url: '@Url.Action("GetBuyerCode", "PAWHSNEWBuyerMaster")',
            type: "post",
            contentType: 'application/x-www-form-urlencoded',
            data: data1,
            success: function (response1) {
            debugger;
                var url_path = JSON.parse(response1);
                console.log(url_path);
                var buyer_code = url_path[0].buyer_code;
                $('#txtsup_code').val(buyer_code);
            },
                error: function (er)
                {
                alert(er)
                console.log(er)
                }
            });
        });*@

    });


</script>
<script>
    function load_master_code() {
        debugger;
        try {
            var data = {};
            data.screen_Id = "PWNEWBUYERMAS";
            var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    var addr_type_desc_list = "";
    var orgn_state_desc_list = "";
    var orgn_village_desc_list = "";
    var orgn_dist_desc_list = "";
    var orgn_taluk_desc_list = "";
    var orgn_panchayat_desc_list = "";
    var status_desc_list = "";
    function grid_Address_details(data) {
        try {
            $("#grid_Address").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_buyeraddr_rowid: { type: "string" },
                                In_buyer_pincode: { type: "string", validation: { required: { message: "Pincode cannot be blank" } } },
                                //----
                                In_buyeraddr_type: { type: "string", required: true },
                                In_buyer_addr_type_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_buyer_addr_type_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Address Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                In_buyer_state: { type: "string", required: true },
                                In_buyer_state_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_buyer_state_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "State Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                In_buyer_dist: { type: "string", required: true },
                                In_buyer_dist_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_buyer_dist_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "District Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },
                                //----
                                In_buyer_panchayat: { type: "string", required: true },
                                In_buyer_panchayat_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_buyer_panchayat_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Grama panchayat Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },

                                In_buyer_taluk: { type: "string", required: true },
                                In_buyer_taluk_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_buyer_taluk_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Taluk Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },

                                In_buyer_village: { type: "string", required: true },
                                In_buyer_village_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_buyer_village_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Village Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                In_buyer_addr1: {
                                    validation: {
                                        required: { message: "Addr1 cannot be blank" },
                                        maxlength:
                                            function (input) {
                                                if (input.val().length > 50) {
                                                    input.attr("data-maxlength-msg", "Max length is 50");
                                                    return false;
                                                }
                                                return true;
                                            },

                                    }
                                },
                                In_buyer_addr2: {
                                    validation: {
                                        required: { message: "Addr2 cannot be blank" },
                                        maxlength:
                                            function (input) {
                                                if (input.val().length > 50) {
                                                    input.attr("data-maxlength-msg", "Max length is 50");
                                                    return false;
                                                }
                                                return true;
                                            }
                                    }
                                },


                                In_buyer_country_desc: { type: "string", required: true },
                                In_status_desc: {
                                    defaultValue: "Active", editable: false,
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_status_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Status Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,
                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_Address').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                edit: OnEdit1,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {
                                var grid = $("#grid_Address").data("kendoGrid");
                                var dataItem = $("#grid_Address").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ], title: "Action", width: "50px",
                },


                {
                    field: "In_buyeraddr_rowid",
                    title: "orgnaddr_rowid",
                    hidden: true,
                },
                {
                    field: "In_buyeraddr_type",
                    title: "addr_type",
                    hidden: true,

                },
                {
                    field: "In_buyer_addr_type_desc",
                    title: "Addr Type",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_buyeraddr_type", "grid_Address")
                    },
                    width: 100,

                },
                {
                    field: "In_buyer_country",
                    title: "Country",
                    hidden: true,
                },

                {
                    field: "In_buyer_country_desc",
                    title: "Country",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_buyer_country", "grid_Address")
                    },
                    width: 100,
                },
                {
                    field: "In_buyer_state",
                    title: "orgn_state",
                    hidden: true,
                },
                {
                    field: "In_buyer_state_desc",
                    title: "State",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_buyer_state", "grid_Address")
                    },
                    width: 100,
                },

                {
                    field: "In_buyer_dist",
                    title: "orgn_dist",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "In_buyer_village_desc",
                    title: "Village",
                    editor: '<div class="input-group input-group-sm"><input type="text" readonly name="orgn_village_desc" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:orgn_village_desc"/><span class="input-group-btn" style="padding-right: 150px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Details" searchid="S02" data-target="#HelpModal" onclick=transfer(this,"grid","grid_Address","grid_Address_details") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>',
                    width: 150,
                },
                {
                    field: "In_buyer_dist_desc",
                    title: "District",
                    //editor: function (container, options) {
                    //    combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_buyer_dist", "grid_Address")
                    //},
                    width: 100,

                },

                {
                    field: "In_buyer_taluk",
                    title: "orgn_taluk",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "In_buyer_taluk_desc",
                    title: "Taluk",
                    //editor: function (container, options) {
                    //    combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_buyer_taluk", "grid_Address")
                    //},
                    width: 100,
                },

                {
                    field: "In_buyer_panchayat",
                    title: "orgn_panchayat",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "In_buyer_panchayat_desc",
                    title: "Gram Panchayat",
                    //editor: function (container, options) {
                    //    combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_buyer_panchayat", "grid_Address")
                    //},
                    width: 100,
                },
                {
                    field: "In_buyer_village",
                    title: "orgn_village",
                    width: 100,
                    hidden: true,
                },


                {
                    field: "In_buyer_addr1",
                    title: "Landmark",
                    width: 100,
                    //editor: '<div class="input-group input-group-sm"><input type="text"  name="In_buyer_addr1"   style="width:150px;color:black"  onkeypress="return isValidChar(event)" data-bind="value:In_buyer_addr1"/><span class="input-group-btn" style="padding-right: 200px;"></span> </div>'
                },
                {
                    field: "In_buyer_addr2",
                    title: "House No/ Building Name",
                    width: 100,
                    //editor: '<div class="input-group input-group-sm"><input type="text"  name="In_buyer_addr2"   style="width:150px;color:black"  onkeypress="return isValidChar(event)" data-bind="value:In_buyer_addr2"/><span class="input-group-btn" style="padding-right: 200px;"></span> </div>'

                },
                {
                    field: "In_buyer_pincode_desc",
                    title: "Pin Code",
                    hidden: true,
                },
                {
                    field: "In_buyer_pincode",
                    title: "PinCode",
                    width: 100,
                    editor: function (container, options) {
                        numeric_editor(container, options.field, '6', '0');
                    },

                },


                {
                    field: "In_status_code",
                    title: "status_code",
                    hidden: true,
                    width: 100,
                },

                {
                    field: "In_status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_status_code", "grid_Address")
                    },
                    width: 100,
                },
                {
                    field: "In_mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    load_master_code();
    In_buyer_addr_type_desc_list = grid_comboScreen_mastercodes("QCD_ADDRTYPE");
    In_buyer_state_desc_list = grid_comboScreen_mastercodes("QCD_UN_STATE");
    In_buyer_panchayat_desc_list = grid_comboScreen_mastercodes("QCD_UN_GRAMPAN");
    In_buyer_taluk_desc_list = grid_comboScreen_mastercodes("QCD_UN_TALUK");
    In_buyer_dist_desc_list = grid_comboScreen_mastercodes("QCD_UN_DIST");
    In_buyer_village_desc_list = grid_comboScreen_mastercodes("QCD_UN_VILLAGE");
    In_buyer_country_desc_list = grid_comboScreen_mastercodes("QCD_COUNTRY");
    In_status_desc_list = grid_comboScreen_mastercodes("STATUS");
    function OnEdit1(e) {
        setDefaultValues(e);
        e.container.find("input[name='In_buyer_state_desc']").focusout(function () {
            var grid = $("#grid_Address").data("kendoGrid");
            var models = grid.dataSource.data();
            var model = models[0];
            var uniqueId = model.uid
            var row = grid.table.find("[data-uid=" + uniqueId + "]");
            grid.select(row);
            var valueprd1 = $(this).val();
            $("#villagecode").val(valueprd1);
        });
    }
    function grid_taxdetail(data) {
        try {
            $("#grid_tax").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_tax_rowid: { type: "string" },
                                In_tax_type: { type: "string" },
                                In_tax_reg_no: { type: "string" },
                                In_state_code: { type: "string" },
                                In_state_desc: { type: "string" },
                                In_status_code: { type: "string" },
                                In_status_desc: { type: "string" },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 300,
                groupable: false,
                dataBinding: setDefaultValues,
                edit: OnEdit,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {
                                // e.preventDefault();
                                var grid = $("#grid_tax").data("kendoGrid");
                                var dataItem = $("#grid_tax").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ], title: "Action", width: "50px",
                },

                {
                    field: "In_tax_rowid",
                    title: "tax_rowid",
                    hidden: true
                },
                {
                    field: "In_state_desc",
                    title: "State",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_state_code", "grid_tax")
                    },
                    width: 100,
                },
                {
                    field: "In_tax_type",
                    title: "Bussiness Vertical",
                    width: 100,
                    editor: '<div class="input-group input-group-sm"><input type="text"  name="In_tax_type"   style="width:323px;color:black"  onkeypress="return isValidAlphanumeric(event)" data-bind="value:In_tax_type"/><span class="input-group-btn" style="padding-right: 200px;"></span> </div>',

                },
                {
                    field: "In_tax_reg_no",
                    title: "GST Registration No",
                    width: 100,
                    editor: '<div class="input-group input-group-sm"><input type="text"  name="In_tax_reg_no"   style="width:323px;color:black"  onkeypress="return isValidAlphanumeric(event)" data-bind="value:In_tax_reg_no"/><span class="input-group-btn" style="padding-right: 200px;"></span> </div>',
                },
                {
                    field: "In_state_code",
                    title: "state",
                    width: 100,
                    hidden: true
                },


                {
                    field: "In_status_code",
                    title: "status_code",
                    hidden: true
                },
                {
                    field: "In_status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_status_code", "grid_tax")
                    },
                    width: 100,

                },

                {
                    field: "In_mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    In_state_desc_list = grid_comboScreen_mastercodes("QCD_UN_STATE");
    In_status_desc_list = grid_comboScreen_mastercodes("FPO_STATUS");
    function OnEdit(e) {
        setDefaultValues(e);
        e.container.find("input[name='In_tax_reg_no']").attr('maxlength', '15');

    }
    function Address1() {
        try {
            $("div#Address").toggleClass('tab-pane fade active in');
            $("div#Address").show();
            $("div#tax").hide();
            var itemGrid = $("#grid_Address").data("kendoGrid");
            itemGrid.refresh();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function tax1() {

        $("div#tax").toggleClass('tab-pane fade active in');
        $("div#tax").show();
        $("div#Address").hide();
    }
</script>
<script>


    function isValidChar(e) {
        var mm = e.target.value;
        var match = e.key.match(/[a-zA-Z0-9. ]/);
        return match ? true : false;
    }
    function isValidAlphanumeric(e) {
        var mm = e.target.value;
        var match = e.key.match(/[a-zA-Z0-9]/);
        return match ? true : false;
    }
    function IsbuyerValid(e) {
        var mm = e.target.value;
        var match = e.key.match(/[a-zA-Z0-9 ]/);
        return match ? true : false;
    }

    function isValidsupcode(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }

            if ((charCode > 47 && charCode < 58) || (charCode > 63 && charCode < 91) || (charCode > 95 && charCode < 123 || charCode == 38 || charCode == 45 || charCode == 92 || charCode == 32))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }


    function generate_buyer_header(res) {
        try {
            debugger;

            $("#txtsup_code").val(res.In_buyer_code)
            $("#txtbuyer_name").val(res.In_buyer_name);
            $("#txt_version_no").val(res.In_version_no);
            $("#txt_pan_no").val(res.In_pan_no);
            $("#txt_buyer_rowid").val(res.In_buyer_rowid);
            $("#txt_status_desc").val(res.In_status_desc);
            $("#txt_status_code").val(res.In_status_code);
            $("#txtMode").val(res.In_mode_flag);
            $("#txt_row_timestamp").val(res.In_row_timestamp);

            $("#txtMobile").val(res.In_MobileNo);
            $("#txtWhatsapp").val(res.In_WhatsappeNo);
            $("#txtEmail").val(res.In_Email);
            $("#txtContactPerson_name").val(res.In_Contact_name);
            $("#txtOnboard_Date").val(res.In_Onboard_Date);
           // $("#cmb_type").data("kendoComboBox").value(res.Out_buyer_type); 
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_buyer_Address(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                for (var i = 0; i < data.length; i++) {
                    data[i].In_buyeraddr_rowid = data[i].In_buyer_addr_rowid
                }
                grid_Address_details(data);
            }
            else {

                grid_Address_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_buyer_tax(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_taxdetail(data);
            }
            else {

                grid_taxdetail([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function grid_control() {
        try {
            var control_Name = [
                { "dataCol": "orgn_state", "grid_row_col": "In_buyer_state" },
                { "dataCol": "orgn_state_desc", "grid_row_col": "In_buyer_state_desc" },
                { "dataCol": "orgn_village", "grid_row_col": "In_buyer_village" },
                { "dataCol": "orgn_village_desc", "grid_row_col": "In_buyer_village_desc" },
                { "dataCol": "orgn_dist", "grid_row_col": "In_buyer_dist" },
                { "dataCol": "orgn_dist_desc", "grid_row_col": "In_buyer_dist_desc" },
                { "dataCol": "orgn_taluk", "grid_row_col": "In_buyer_taluk" },
                { "dataCol": "orgn_taluk_desc", "grid_row_col": "In_buyer_taluk_desc" },
                { "dataCol": "orgn_grampan", "grid_row_col": "In_buyer_panchayat" },
                { "dataCol": "orgn_grampan_desc", "grid_row_col": "In_buyer_panchayat_desc" },
                { "dataCol": "", "grid_row_col": "In_status_code" },
                { "dataCol": "", "grid_row_col": "In_status_desc" },
                { "dataCol": "", "grid_row_col": "In_buyeraddr_type" },
                { "dataCol": "", "grid_row_col": "In_buyer_addr_type_desc" },
                { "dataCol": "", "grid_row_col": "In_buyer_country_desc" },
                { "dataCol": "", "grid_row_col": "In_buyeraddr_rowid" },

                { "dataCol": "", "grid_row_col": "In_buyer_addr1" },
                { "dataCol": "", "grid_row_col": "In_buyer_addr2" },
                { "dataCol": "", "grid_row_col": "In_buyer_pincode" },
                { "dataCol": "", "grid_row_col": "In_buyer_pincode_desc" },
                { "dataCol": "", "grid_row_col": "In_buyer_country" },

                { "dataCol": "", "grid_row_col": "In_mode_flag" },
                { "dataCol": "", "grid_row_col": "uid" }
            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function controlName() {
        try {
            var control_Name = [
            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function trans_input_data() {
        var trans_coll = [
            { "trasfer": "NO", "dataCol": "", "controlId": "", "grid_id": "", "grid_row_col": "" },
            { "trasfer": "Yes", "dataCol": "orgn_state_desc", "controlId": "villagecode", "grid_id": "grid_Address", "grid_row_col": "" }
        ];
        return trans_coll;
    }
</script>
<script>
    function save_validate() {
        var validate_msg = "";
        var sup_name = $('#txtbuyer_name').val().trim();
        $("#txtbuyer_name").val(sup_name.trim());
        var sup_code = $('#txtsup_code').val().trim();
        $('#txtsup_code').val(sup_code.trim());
        //if (sup_code == '' || sup_code == undefined) {
        //    validate_msg += "Buyer Code cannot be blank<br>"
        //}
        if ($('#txtbuyer_name').val().trim() == '' || $('#txtbuyer_name').val().trim() == undefined) {
            validate_msg += "Buyer name cannot be blank<br>"
        }
        if ($('#txt_pan_no').val() == '' || $('#txt_pan_no').val() == undefined) {
            validate_msg += "PAN No cannot be blank<br>"
        }

        var grid_val = JSON.stringify($("#grid_Address").data().kendoGrid._data);
        var Bind = {};
        Bind = grid_val;
        var result = JSON.parse(Bind);
        if (result.length == 0) {
            validate_msg += "Address record needs to be entered";
        }
        $.each(result, function (key, value) {
            if (value.In_buyer_addr_type_desc == "" || value.In_buyer_addr_type_desc == undefined) {
                validate_msg += "Address Type cannot be blank <br>";
            }
            if (value.In_buyer_country_desc == "" || value.In_buyer_country_desc == undefined) {
                validate_msg += "Country cannot be blank <br>";
            }
            if (value.In_buyer_state_desc == "" || value.In_buyer_state_desc == undefined) {
                validate_msg += "State cannot be blank <br>";
            }
            if (value.In_buyer_dist_desc == "" || value.In_buyer_dist_desc == undefined) {
                validate_msg += "District cannot be blank <br>";
            }
            if (value.In_buyer_panchayat_desc == "" || value.In_buyer_panchayat_desc == undefined) {
                validate_msg += "Panchayat cannot be blank <br>";
            }
            if (value.In_buyer_taluk_desc == "" || value.In_buyer_taluk_desc == undefined) {
                validate_msg += "Taluk cannot be blank <br>";
            }
            if (value.In_buyer_village_desc == "" || value.In_buyer_village_desc == undefined) {
                validate_msg += "Village cannot be blank <br>";
            }
            if (value.In_buyer_addr1 == "" || value.In_buyer_addr1 == undefined) {
                validate_msg += "Buyer Address 1 cannot be blank <br>";
            }
            if (value.In_buyer_addr2 == "" || value.In_buyer_addr2 == undefined) {
                validate_msg += "Buyer Address 2 cannot be blank <br>";
            }
            if (value.In_buyer_pincode == "" || value.In_buyer_pincode == undefined) {
                validate_msg += "Pincode cannot be blank <br>";
            }
            if (value.In_status_desc == "" || value.In_status_desc == undefined) {
                validate_msg += "Status cannot be blank <br>";
            }
            if (value.In_status_desc == "Inactive") {
                validate_msg += "Status cannot be Inactive <br>";
            }

        });

        //----------------------Tax

        if (validate_msg == "") {
            //tax
            var grid_val5 = JSON.stringify($("#grid_tax").data().kendoGrid._data);
            var Bind5 = {};
            Bind5 = grid_val5;
            var result5 = JSON.parse(Bind5);

            if (result5.length == 0) {
                validate_msg = "Tax record needs to be entered";
                return validate_msg;
            }

            $.each(result5, function (index, value) {
                if (value.In_tax_type == "" || value.In_tax_type == undefined) {
                    validate_msg += "Bussiness Vertical cannot be blank <br>";
                    return;
                }
                if (value.In_tax_reg_no == "" || value.In_tax_reg_no == undefined) {
                    validate_msg += "GST Register Number cannot be blank <br>";
                    return;
                }
                if (value.In_state_code == "" || value.In_state_code == undefined) {
                    kendoAlert("Tax State cannot be blank");
                    validate_msg += "Tax State cannot be blank <br>";
                    return;
                }
                if (value.In_status_code == "I") {
                    validate_msg += "Tax Status cannot be Inactive <br>";
                    return;
                }
            });
        }

        return validate_msg;
    }
    function save() {
        try {
            var valid = save_validate();
            if (valid == "") {
                if ($("#txt_buyer_rowid").val() == "" || $("#txt_buyer_rowid").val() == undefined) {
                    $("#txt_buyer_rowid").val(0);
                }
                if ($("#txt_version_no").val() == "") {
                    $("#txt_version_no").val(1);
                }

                if ($("#txtMode").val() == "S") {
                    $("#txtMode").val('U');
                }

                var formval = form_Serialize("ICD_Supmst");
                var obj_val = JSON.parse(formval);
                if (obj_val.In_row_timestamp == null || obj_val.In_row_timestamp == "" || obj_val.In_row_timestamp == undefined) {
                    obj_val.In_row_timestamp = "2000-01-01";
                }
                obj_val.In_buyer_rowid1 = 0;


                if ($("#txtOnboard_Date").val() != "") {
                    var from_date1 = $("#txtOnboard_Date").val();
                    var parts = from_date1.split('/');
                    var from_date = parts[2] + '-' + parts[1] + '-' + parts[0];
                } 
                obj_val.In_Onboard_Date = from_date; 
                obj_val.module_code = $('#cmb_type').data("kendoComboBox").text();
                if ($("#cmb_type").val() != "" && $("#cmb_type").val() != undefined)
                {
                    obj_val.module_code = $('#cmb_type').data("kendoComboBox").text();
                } 


                //address

                var grid_val = JSON.stringify($("#grid_Address").data().kendoGrid._data);
                var Bind = {};
                Bind = grid_val;
                var result = JSON.parse(Bind);

                $.each(result, function (index, value) {
                    var row_id = value.In_buyeraddr_rowid;
                    if (row_id == undefined || row_id == "") {
                        result[index].In_buyeraddr_rowid = 0;
                    }
                    var mmode = result[index].In_mode_flag;
                    if (mmode == "S") {
                        result[index].In_mode_flag = "U";
                    }

                    var Status = result[index].In_status_code;
                    if (Status == undefined || Status == "") {
                        result[index].In_status_code = "A";
                    }

                });
                var obj_grid_val = result;


                //tax
                var grid_val5 = JSON.stringify($("#grid_tax").data().kendoGrid._data);
                var Bind5 = {};
                Bind5 = grid_val5;
                var result5 = JSON.parse(Bind5);

                if (result5.length == 0) {
                    kendoAlert("Tax record needs to be entered");
                    return;
                }

                $.each(result5, function (index, value) {
                    if (value.In_tax_type == "" || value.In_tax_type == undefined) {
                        kendoAlert("Tax type cannot be blank");
                        return;
                    }
                    if (value.In_tax_reg_no == "" || value.In_tax_reg_no == undefined) {
                        kendoAlert("Register Number cannot be blank");
                        return;
                    }
                    if (value.In_state_code == "" || value.In_state_code == undefined) {
                        kendoAlert("State cannot be blank");
                        return;
                    }
                    if (value.In_status_code == "I") {
                        kendoAlert("Tax Status cannot be Inactive");
                        return;
                    }
                    var tax_rowid = value.In_tax_rowid;
                    if (tax_rowid == undefined || tax_rowid == '') {
                        result5[index].In_tax_rowid = 0;
                    }
                    var state_code = value.In_state_code;
                    var state_code = result5[index].In_state_code;
                    if (state_code == '' || tax_rowid == undefined) {
                        result5[index].In_state_code = "tn";
                    }
                    var mmode = result5[index].In_mode_flag;
                    if (mmode == "S") {
                        result5[index].In_mode_flag = "U";
                    }
                });
                var obj_grid_val5 = result5;
                var data = {};
                debugger;
                data.context = WebAPIProxy.getContext();
                data.context.header = obj_val;
                data.context.address = obj_grid_val;
                data.context.tax = obj_grid_val5;
                var Context = data.context;
                var buyerAddress = data.context.address;
                var buyerTax = data.context.tax;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, header: Context.header, buyerAddress: Context.address, buyerTax: Context.tax }),
                    url: "/PAWHSNEWBuyerMaster/BuyerMasterSave",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        console.log(response)
                        //var Res = JSON.parse(response);
                        var Res = response;
                        var mode = $("#txtMode").val();
                        if (Res.ApplicationException.errorDescription == null || Res.ApplicationException.errorDescription == "") {
                            if (mode == "I") {
                                kendoAlert("Buyer Master saved successfully");
                                get_buyer_details(Res.context.Header);
                            }
                            else if (mode == "D") {
                                kendoAlert("Buyer Master inactivate successfully");
                                get_buyer_details(Res.context.Header);

                            }
                            else {
                                kendoAlert("Buyer Master Updated successfully");
                                get_buyer_details(Res.context.Header);
                            }
                        }
                        else {
                            kendoAlert(Res.ApplicationException.errorDescription);
                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });
            }
            else {
                kendoAlert(valid);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function get_buyer_details(res) {
        try {
            var formval = form_Serialize("ICD_Supmst");
            var obj_val = JSON.parse(formval);
            obj_val.In_buyer_rowid = res.Out_buyer_rowid1;
            obj_val.In_buyer_code = res.In_buyer_code1;
            obj_val.In_version_no = res.Out_version_no1;
            $("#txtsup_code").val(res.In_buyer_code1);
            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.header = obj_val;
            var Context = data.context;

            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, buyer_rowid: Context.header.In_buyer_rowid, buyer_code: Context.header.In_buyer_code, Header: Context.header}),
                url: "/PAWHSNEWBuyerMaster/BuyerMasterfetch",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.Context != null) {
                        generate_buyer_header(response.Context.Header);
                        generate_buyer_Address(response.Context.buyerAddress);
                        generate_buyer_tax(response.Context.buyerTax);
                    }
                    else {
                        console.log("Issue where Dropped");
                    }
                },
                error: function (er) {
                    console.log(er);
                }

            });
            $("#txtMode").val("U");
            setlocalStorage('doc_no', $("#txtsup_code").val());
            setlocalStorage('doc_row_id', $("#txt_buyer_rowid").val());
            setlocalStorage('doc_ver_no', $("#txt_version_no").val());
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>
