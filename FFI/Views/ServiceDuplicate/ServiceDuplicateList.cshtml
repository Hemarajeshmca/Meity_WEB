@{
    ViewBag.List = "Duplicate Certificate Request";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}
<form id="service_Duplicate" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="row">
        <div class="col-xs-12">
            <div id="gd_serduplicate">
                <div id="Service_grid_duplicate"></div>
            </div>
        </div>
    </div>
</form>

<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script>
    var menuId = "";
    var permission = "";
    $(document).ready(function () {
        $(".adv_filter").attr("hdrtitle", "Sevice Request Duplicate");
        $(".adv_filter").attr("fltid", "ServiceDetail");
        $(".Export").attr("hdrtitle", "Sevice Request Duplicate List");
        $(".Export").attr("hdrtitle", "Sevice Request Duplicate");
        $(".Export").attr("SubTreeId", "Duplicate");
      
        Screen_Id = "SRVDUP";
        permission = sec_Permission(Screen_Id);
        //page_load_list_permission(permission);
        setlocalStorage("ls_pageList", "");
        $("#RI").hide();
        $("#FPO").hide();
        listpageloadfetch();
    });
</script>
<script>
    function listpageloadfetch() {
        var formval = form_Serialize("service_Duplicate");
        var obj_val = JSON.parse(formval);
        obj_val.FilterBy_Option = "QCD_FPOSERVICE_CERTDUP";
        obj_val.FilterBy_Code = ".";
        if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
            obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
        }
        else {
            obj_val.FilterBy_Fromvalue = ".";
        }
        obj_val.FilterBy_Tovalue = ".";


        var data = {};
        data.context = WebAPIProxy.getContext();;
        data.context.Filter = obj_val;
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Filter: Context.Filter }),
            url: "/ServiceDuplicate/ServiceList",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_SerReqDuplicate_list(response.context.List)
                    //listgrid(response.context.List);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {
                    seviceduplicategrid([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
        //retrieve_SerReqDuplicate_list(data);
        
    }

    var status_Priority = [];
    function seviceduplicategrid(data) {
        $.each(data, function (index, value) {
            var flag = false;
            $.each(status_Priority, function (sindex, svalue) {
                if (svalue == value.status_desc) {
                    flag = true;
                }
            });
            if (flag == false) {
                status_Priority.push(value.status_desc);
            }
        });
        $("#Service_grid_duplicate").kendoGrid(
           {
               dataSource: {
                   data: data,
                   pageSize: 20,
                   change: function (e) {
                       setTimeout(function () {
                           var gd = $("#Service_grid_duplicate").data("kendoGrid");
                           filter_row(gd);
                           $('.k-i-close').css('display', 'none');
                           $('button.k-button-icon').css('display', 'none');
                           $('#Service_grid_duplicate .k-input').prop('disabled', false);
                           $('#Service_grid_duplicate .k-input').prop('readonly', true);
                       }, 1);
                   },
               },
               toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
               excelExport: function (e) {
                   var gd = $("#Service_grid_duplicate").data("kendoGrid");
                   var len = gd.dataSource._data.length;
                   var chkall = $('#chkall').is(':checked');
                   var chkfilter = $('#chkfilter').is(':checked');
                   var chktemp = $('#chktemp').is(':checked');
                   var twokendobox = true;
                   gd.dataSource.pageSize(len);
                   if (e.sender.dataSource._data.length == len) {
                       twokendobox = false;
                       exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                   }
                   else {
                       exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                   }
                   gd.dataSource.pageSize('10');
                   return false;
               },
               filterable: {
                   enabled: true,
                   delay: 1500,
                   mode: "menu, row",
                   height: 200,
                   click: function (e) {
                       var gd = $("#Service_grid_duplicate").data("kendoGrid");
                       filter_row(gd);
                   }
               },
               filterMenuInit: function (e) {
                   var gd = $("#Service_grid_duplicate").data("kendoGrid");
                   filter_row(gd);
               },
               change: selectRow,
               height: 450,
               sortable: true,
               selectable: true,
               selectable: "singl",   //  Grid Row Selection
               pageable: {
                   refresh: false,
                   pageSizes: true,
                   buttonCount: 5
               },
               navigatable: true,
               groupable: false,
               columns: [
                   {
                       field: "Out_servicereq_rowid",
                title: "servicereq_rowid",
                width: 150,
                hidden: true

                   },
                   {
                       field: "Out_servicereq_no",
                       title: "Service Request No",
                       filterable: {
                           cell: {
                               operator: "contains",
                               inputWidth: 1500
                           }
                       },
                       width: 150

                   },
                   {
                       field: "Out_request_date",
                       title: "Request Date",
                       filterable: {
                           cell: {
                               operator: "contains",
                               inputWidth: 1500
                           }
                       },
                       width: 150

                   },
            {
                field: "Out_farmer_code",
                title: "Farmer ID",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 150

            },
            {
                field: "Out_fpomember_code",
                title: "Member ID",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 150

            },
            {
                field: "Out_farmer_name",
                title: "Farmer Given Name",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 150

            },
            {
                field: "Out_sur_name",
                title: "Surname",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 150

            },
            {
                field: "Out_certificate_no",
                title: "Certificate No",
                attributes: { style: "text-align:right;" },
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 150

            },
            {
                field: "Out_issued_date",
                title: "Issued Date",
                filterable: {
                    cell: {
                        operator: "contains",
                        inputWidth: 1500
                    }
                },
                width: 150

            },

               {
                   field: "Out_dist_from",
                   title: "Distinct From",
                   attributes: { style: "text-align:right;" },
                   filterable: {
                       cell: {
                           operator: "contains",
                           inputWidth: 1500
                       }
                   },
                   width: 150

               },
                {
                    field: "Out_dist_to",
                    title: "Distinct To",
                    attributes: { style: "text-align:right;" },
                    filterable: {
                        cell: {
                            operator: "contains",
                            inputWidth: 1500
                        }
                    },
                    width: 150

                },
                 
                {
                    field: "Out_request_type",
                    title: "Request Type",
                    width: 150,
                    hidden: true

                },
                 {
                     field: "Out_request_type_desc",
                     title: "Request Type",
                     filterable: {
                         cell: {
                             operator: "contains",
                             inputWidth: 1500
                         }
                     },
                     width: 150

                 },

                {
                    field: "Out_requestsub_type",
                    title: "Request Sub Type",
                    hidden: true,
                    width: 150

                },
                 {
                     field: "Out_requestsub_type_desc",
                     title: "Request Sub Type",
                     filterable: {
                         cell: {
                             operator: "contains",
                             inputWidth: 1500
                         }
                     },
                     hidden: true,
                     width: 150

                 },

                {
                    field: "Out_chklist_status_flag",
                    title: "chklist_status_flag",
                    width: 150,
                    hidden: true
                },
                 {
                     field: "Out_sr_comments",
                     title: "sr_comments",
                     width: 150,
                     hidden: true
                 },
                  {
                      field: "Out_status_code",
                      title: "status_code",
                      width: 150,
                      hidden: true
                  },
                  {
                      field: "Out_status_desc",
                      title: "Status",
                      filterable: {
                          cell: {
                              operator: "contains",
                              inputWidth: 1500
                          }
                      },
                      width: 150,

                  }

            //{
            //    field: "mode_flag",
            //    title: "Mode",
            //    hidden: true
            //        }
                ],
          
        });
        $(".k-dropdown-operator").css('display', 'none');
        $("#Service_grid_duplicate .k-input").attr('disabled', 'false');
    }
    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: "--Select Value--"
        });
    }

    function selectRow() {
        var grid = $("#Service_grid_duplicate").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        setlocalStorage("ls_pageList", selectedItem);
    }
</script>
<script>
    $("#btn_Edit").bind("click", function () {
        getSerializedSelectedRows('edit');
    });

    $("#btn_View").bind("click", function () {
        getSerializedSelectedRows('view');
    });

    $("#btn_new").bind("click", function () {
        btn_onClick('Create');
        location.href = "../ServiceDuplicate/ServiceDuplicateForm";
    });
    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage("ls_pageList") != undefined) {
                var items = getlocalStorage("ls_pageList");
                if (items.length == 0) {
                    kendoAlert("Please select records");
                }

                else {
                    if (mode == "edit") {
                        btn_onClick('Edit');
                        location.href = "../ServiceDuplicate/ServiceDuplicateForm";
                    }
                    else if (mode == "view") {
                        btn_onClick('View');
                        location.href = "../ServiceDuplicate/ServiceDuplicateForm";
                    }
                }
            }
        }
        catch (err) {

        }

    }
</script>
<script>
    function generate_SerReqDuplicate_list(res) {
        if (res != null) {
            var data = changedataType(res);
            $("#gd_serduplicate").empty();
            $("#gd_serduplicate").append("<div id='Service_grid_duplicate'></div>");
            seviceduplicategrid(data);
        }
        else {
            seviceduplicategrid([]);
        }
    }

    function listRefresh() {
        setlocalStorage('flt_condition', "");
        listpageloadfetch();
    }
</script>




