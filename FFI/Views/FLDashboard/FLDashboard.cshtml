@{
    ViewBag.Form = "Dashboard";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}
<form id="Dashbord_form" class="form-horizontal" style="padding-top:0px">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:12px;padding-bottom:1px">
            <div class="row">
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="aggregator_code" class=" col-sm-4 control-label"> From Date </label>
                        <div class=" col-sm-7">
                            <input class="cusDate" type="date" data-role='datepicker' id="txtValidity1" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="from_date" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="aggregator_code" class=" col-sm-4 control-label"> To Date </label>
                        <div class=" col-sm-7">
                            <input class="cusDate" type="date" data-role='datepicker' id="txtValidity2" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="to_date" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class=" form-group">
                        <button title="" data-placement="top" data-toggle="tooltip" class="btn btn-info" type="button" data-original-title="Refresh" onclick="mandatory()"> <span class="glyphicon glyphicon-refresh"></span></button>
                    </div>
                </div>
                <div class="col-sm-4" style="display:none">
                    <div class=" form-group">
                        <label for="status" class=" col-sm-3 control-label"> Pay Mode </label>
                        <div class=" col-sm-7">
                            <input type="text" name="status" id="cmb_paymode" data-role="filtercombo" style="width:100%">
                        </div>
                    </div>
                </div>
            </div>


                    <div class="row">
                        <div class="col-xs-8">
                            <div id="grid_lease"></div>
                        </div>
                        @*<div class="col-xs-6">
                        <div class="chart-responsive" style="padding-bottom:10px">
                            @*<canvas id="canvas" height="100" width="100"></canvas>
                            <div id="piechart"></div>
                        </div>
                    </div>*@
                    </div>

                    <div class="row" style="padding-bottom:10px">
                        <a href='' style="padding-left:18px"> TOP 5 ESPs </a>
                    </div>

                    <div class="row" style="padding-bottom:10px">
                        <div class="col-xs-12">
                            <div id="grid_esplist"></div>
                        </div>
                    </div>

                    <div class="row" style="padding-left:18px; padding-bottom:20px">
                        <a href=''>Slow Moving Equipment</a>
                    </div>

                    <div class="row">
                        <div class="col-xs-8">
                            <div id="grid_slowmovingEquipmt"></div>
                        </div>
                    </div>
                </div>
            </div>
</form>
<script src="~/API_Scripts/equipmentReports_retrieveEquipmentReports_APIClient.js"></script>
<script src="~/API_Scripts/FLDashboard.js"></script>
<script src="~/API_Scripts/retrieveEquipmentReport_Model.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script>
    $(document).ready(function () {
        kendodate_format();
        GridLease();
        GridESP();
        GridEquipment();
        //PIE();
        //DoesColumnEqualOneHundred();
        $("#form_design").css("padding-top", "10px");
        //var combo_data1 = [{ code: 1, desc: "Online" }, { code: 2, desc: "Cash" }];
        //filter_combobox("cmb_paymode", combo_data1);

        Screen_Id = "FLDASHBRD";
        permission = sec_Permission(Screen_Id);
     
        $("#txtValidity1").kendoDatePicker({
            max: new Date(),// sets max date
            format: "dd/MM/yyyy"
        });
        $("#txtValidity2").kendoDatePicker({
            max: new Date(),// sets max date
            format: "dd/MM/yyyy"
        });
    });
</script>

<script>   
    function GridLease(data) {
        try {
            $("#grid_lease").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                of_lease: { type: "string" },
                                lease_hours: { type: "string" },
                                lease_revenue: { type: "string" },
                                cash: { type: "string" },
                                cashless: { type: "string" },
                            }

                        }
                    }
                },
                height: 150,
                groupable: false,

                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: "leasedetails_rowid",
                        title: "leasedetails_rowid",
                        hidden: true,
                    },
                 {
                     field: "of_leases",
                     title: "# Of Leases",
                     width: 80,
                 },
                 {
                     field: "lease_hours",
                     title: "Lease Hours",
                     width: 80,
                 },
                 {
                     field: "lease_revenue",
                     title: "Lease Revenue (INR)",
                     width: 100,

                 },
                  {
                      field: "cash",
                      title: "Cash",
                      editor: '<input type="text" readonly name="cash" maxlength="10" style="width:100px;color:white"  onkeypress="return speical_char(event)" data-bind="value:cash"/>',
                      width: 80,
                  },
                {
                    field: "cashless",
                    title: "Cashless",
                    width: 80,
                }],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }
</script>

<script>
       function GridESP(data) {
        try {
            $("#grid_esplist").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                esp_name: { type: "string" },
                                lease_hours: { type: "string" },
                                lease_revenue: { type: "string" },
                                cash: { type: "string" },
                                cashless: { type: "string" },
                                total_Revenue: { type: "string" },
                            }
                        }
                    }
                },
                height: 130,
                groupable: false,

                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                     {
                         field: "equip_details_rowid",
                         title: "equip_details_rowid",
                         hidden: true,
                     },
                       {
                           field: "esp_code",
                           title: "esp_code",
                           hidden: true,
                       },
                 {
                     field: "esp_name",
                     title: "ESP Name",
                     width: 80,
                 },
                 {
                     field: "lease_hours",
                     title: "Lease Hours",
                     width: 80,
                 },
                 {
                     field: "lease_revenue",
                     title: "Lease Revenue (INR)",
                     width: 100,

                 },
                  {
                      field: "cash",
                      title: "Cash",
                      width: 80,
                  },
                {
                    field: "cashless",
                    title: "Cashless",
                    width: 80,
                },
                {
                    field: "total_revenue",
                    title: "% Total Revenue",
                    width: 80,
                }
                ],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }
</script>

<script>
       function GridEquipment(data) {
        try {
            $("#grid_slowmovingEquipmt").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                esp_name: { type: "string" },
                                equipment: { type: "string" },
                                greater_than_60: { type: "string" },
                                greater_than_30: { type: "string" },
                            }
                        }
                    }
                },
                height: 130,
                groupable: false,

                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                      {
                          field: "equip_status_rowid",
                          title: "equip_status_rowid",
                          hidden: true,
                      },
                       {
                           field: "esp_code",
                           title: "esp_code",
                           hidden: true,
                       },
                 {
                     field: "esp_name",
                     title: "ESP Name",
                     width: 80,
                 },
                 {
                     field: "equipment_code",
                     title: "equipment_code",
                     hidden: true,
                 },
                 {
                     field: "equipment_name",
                     title: "Equipment",
                     width: 80,
                 },
                 {
                     field: "sixty_days",
                     title: "> 60 Days",
                     width: 100,

                 },
                  {
                      field: "ninety_days",
                      title: "> 30 Days",
                      width: 80,
                  },
                ],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }
</script>

@*<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<script type="text/javascript">
    function PIE() {
        google.charts.load('current', { 'packages': ['corechart'] });
        google.charts.setOnLoadCallback(drawChart);

        var grid = $("[id ^= 'grid_lease']").data("kendoGrid");
        var gridData = grid.dataSource.view();
        var Cash = 0;
        var Cashless = 0;
        for (var i = 0; i < gridData.length; i++) {
            Cash += gridData[i].cash != undefined ? parseFloat(gridData[i].cash) : parseFloat(0);
        }
        for (var i = 0; i < gridData.length; i++) {
            Cashless += gridData[i].cashless != undefined ? parseFloat(gridData[i].cashless) : parseFloat(0);
        }
        function drawChart() {
            var data = google.visualization.arrayToDataTable([
            ['Task', 'Cash Percentage'],
            ['Cash', Cash],
            ['Cashless', Cashless],
            ]);
            var options = { 'title': 'Cash And Cashless Chart', 'width': 400, 'height': 200 };
            var chart = new google.visualization.PieChart(document.getElementById('piechart'));
            chart.draw(data, options);
        }
    }
</script>


<script type="text/javascript">
    function DoesColumnEqualOneHundred(e) {
        var totalCash = 0;
        var grid = $("[id ^= 'grid_lease']").data("kendoGrid");
        var gridData = grid.dataSource.view();
        for (var i = 0; i < gridData.length; i++) {
            totalCash += gridData[i].cash != undefined ? parseFloat(gridData[i].cash) : parseFloat(0);
        }
    }
</script>*@
<script>
    function mandatory() {
        try {
            var mandatory_check = true;

            
            if ($("#txtValidity1").val() == "") {
                grid_validate_msg += "Kindly Select From Date </br>";
                mandatory_check = false;
            }
            if ($("#txtValidity2").val() == "") {
                grid_validate_msg += "Kindly Select TO date </br>";
                mandatory_check = false;
            }

            if (mandatory_check == false) {
                kendoAlert(grid_validate_msg);
                return false;
            }
            else {
                return listLoad();
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function listLoad() {
        try {
            var formval = form_Serialize("Dashbord_form");
            var obj_val = JSON.parse(formval);           
            obj_val.from_date = $("#txtValidity1").val();
            obj_val.to_date = $("#txtValidity2").val();

            if (obj_val.hasOwnProperty('from_date')) {
                if (obj_val.from_date != '')
                    obj_val.from_date = getFormated_StringDate(obj_val.from_date);
            }
            if (obj_val.hasOwnProperty('to_date')) {
                if (obj_val.to_date != '')
                    obj_val.to_date = getFormated_StringDate(obj_val.to_date);
            }

            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Header = obj_val;
            retrieve_FLDashboard_list(data);

            return false;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_FLDashboard_header(res) {
        try {
            if (res != null ) {
                var fromDate = res.period_from.split('/').reverse().join('/');
                $("#txtValidity1").val(from_date);
                var toDate = res.period_to.split('/').reverse().join('/');
                $("#txtValidity2").val(to_date);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function generate_FLDashboard_LeaseDetails(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                GridLease(data);
            }
            else {
                GridLease([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    
    function generate_FLDashboard_EquipmentDetails(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                GridESP(data);
            }
            else {
                GridESP([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_FLDashboard_EquipmentStatus(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                GridEquipment(data);
            }
            else {
                GridEquipment([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>





