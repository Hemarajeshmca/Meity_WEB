@{
    ViewBag.List = "Credit Tracker";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}
<form id="frm_Creditfrom" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="row">
        <div class="col-xs-12">
            <div id="gd_Credit">
                <div id="Creditissue_grid"></div>
            </div>
        </div>
    </div>
</form>

<script>
    click_act_name = "CreditIssueForm";
    click_ctrl_name = "CreditIssue";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>
<script src="~/API_Scripts/CreditIssue_master_getCreditIssue_APIClient.js"></script>
<script src="~/API_Scripts/CreditIssue_master_getCreditIssueList_APIClient.js"></script>
<script src="~/API_Scripts/CreditIssue_master_getPaymentCollection_APIClient.js"></script>
<script src="~/API_Scripts/CreditIssue_master_saveCreditIssue_APIClient.js"></script>
<script src="~/API_Scripts/CreditIssue_master_savePaymentCollection_APIClient.js"></script>
<script src="~/API_Scripts/getCreditIssue_Model.js"></script>
<script src="~/API_Scripts/getCreditIssueList_Model.js"></script>
<script src="~/API_Scripts/getPaymentCollection_Model.js"></script>
<script src="~/API_Scripts/savePaymentCollection_Model.js"></script>
<script src="~/API_Scripts/saveCreditIssue_Model.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/API_Scripts/Creditissue.js"></script>
<script>
    var menuId = "";
    var permission = "";
    $(document).ready(function () {
        $(".adv_filter").attr("hdrtitle", "Credit Issue Details");
        $(".adv_filter").attr("fltid", "Credit_Issue");
        $(".Export").attr("hdrtitle", "Credit Issue Details");
        $(".Export").attr("SubTreeId", "ICDCI");

        Screen_Id = "ICDCI";
        permission = sec_Permission(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage("ls_pageList", "");
    });
</script>

<script>
    function listpageloadfetch() {
        try {
            var formval = form_Serialize("frm_Creditfrom");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = "ALL";
            obj_val.FilterBy_Code = ".";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
                obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_Fromvalue = ".";
            }
            obj_val.FilterBy_Tovalue = ".";


            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Filter = obj_val;
            var Context = data.context;
            $.ajax({
                type: "POST",
                url: '/CreditIssue/CreditIssueListfetch',
                dataType: 'json',
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, FilterBy_Option: Context.Filter.FilterBy_Option, FilterBy_Code: Context.Filter.FilterBy_Code, FilterBy_FromValue: Context.Filter.FilterBy_FromValue, FilterBy_ToValue: Context.Filter.FilterBy_ToValue }),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    //var list = JSON.parse(response);
                    if (response.context.List != null) {
                        generate_Credit_list(response.context.List);
                    }
                    else {
                        Creditgrid([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    var status_Priority = [];
    function Creditgrid(data) {
        try {
            $.each(data, function (index, value) {
                var flag = false;
                $.each(status_Priority, function (sindex, svalue) {
                    if (svalue == value.status_desc) {
                        flag = true;
                    }
                });
                if (flag == false) {
                    status_Priority.push(value.status_desc);
                }
            });
            $("#Creditissue_grid").kendoGrid(
               {
                   dataSource: {
                       data: data,
                       pageSize: 20,
                       change: function (e) {
                           setTimeout(function () {
                               var gd = $("#Creditissue_grid").data("kendoGrid");
                               filter_row(gd);
                               $('.k-i-close').css('display', 'none');
                               $('button.k-button-icon').css('display', 'none');
                               $('#Creditissue_grid .k-input').prop('disabled', false);
                               $('#Creditissue_grid .k-input').prop('readonly', true);
                           }, 1);
                       },
                   },
                   toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
                   excelExport: function (e) {
                       var gd = $("#Creditissue_grid").data("kendoGrid");
                       var len = gd.dataSource._data.length;
                       var chkall = $('#chkall').is(':checked');
                       var chkfilter = $('#chkfilter').is(':checked');
                       var chktemp = $('#chktemp').is(':checked');
                       var twokendobox = true;
                       gd.dataSource.pageSize(len);
                       if (e.sender.dataSource._data.length == len) {
                           twokendobox = false;
                           exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                       }
                       else {
                           exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                       }
                       gd.dataSource.pageSize('10');
                       return false;
                   },
                   filterable: {
                       enabled: true,
                       delay: 1500,
                       mode: "menu, row",
                       height: 200,
                       click: function (e) {
                           var gd = $("#Creditissue_grid").data("kendoGrid");
                           filter_row(gd);
                       }
                   },
                   filterMenuInit: function (e) {
                       var gd = $("#Creditissue_grid").data("kendoGrid");
                       filter_row(gd);
                   },
                   change: selectRow,
                   height: 450,
                   sortable: true,
                   selectable: true,
                   selectable: "singl",   //  Grid Row Selection
                   pageable: {
                       refresh: false,
                       pageSizes: true,
                       buttonCount: 5
                   },
                   navigatable: true,
                   groupable: false,
                    columns: [
                        {
                            field: "Out_creditissue_rowid",
                            title: "creditTracker_rowid",
                            width: 1,
                            hidden: true,
                        },
                        {
                            field: "Out_ic_code",
                                    title: "ic_code",
                                    width: 1,
                                    hidden: true,
                        },
                                {
                                    field: "Out_ic_name",
                                    title: "Input Centre Name",
                                    filterable: {
                                        cell: {
                                            operator: "contains",
                                            inputWidth: 1500
                                        }
                                    }, hidden: true,
                                },
                        {
                            field: "Out_creditissue_date",
                            title: "Credit Tracker Date",
                            filterable: {
                                cell: {
                                    operator: "contains",
                                    inputWidth: 1500
                                }
                            }
                        },
                         {
                             field: "Out_creditissue_no",
                             title: "Credit Tracker No",
                             filterable: {
                                 cell: {
                                     operator: "contains",
                                     inputWidth: 1500
                                 }
                             }
                         },
                           {
                               field: "Out_customer_type",
                               title: "customer_type",
                               width: 1,
                               hidden: true,
                           },

                                 {
                                     field: "Out_customer_type_desc",
                                     title: "Customer Type",
                                     filterable: {
                                         cell: {
                                             operator: "contains",
                                             inputWidth: 1500
                                         }
                                     }
                                 },

                                  {
                                      field: "Out_customer_name",
                                      title: "Farmer/Customer Name",
                                      filterable: {
                                          cell: {
                                              operator: "contains",
                                              inputWidth: 1500
                                          }
                                      }
                                  },
                                  {
                                      field: "Out_reciver_location",
                                      title: "reciver_location",
                                      width: 1,
                                      hidden: true,
                                  },
                                  {
                                      field: "Out_reciver_location_desc",
                                      title: "Receiver Location",
                                      filterable: {
                                          cell: {
                                              operator: "contains",
                                              inputWidth: 1500
                                          }
                                      }
                                  },
                                  {
                                      field: "Out_reciver_address",
                                      title: "Receiver Address",
                                      filterable: {
                                          cell: {
                                              operator: "contains",
                                              inputWidth: 1500
                                          }
                                      }
                                  },
                                  {
                                      field: "Out_process_status",
                                      title: "process_status",
                                      width: 1,
                                      hidden: true,
                                  },
                                   {
                                       field: "Out_process_status_desc",
                                       title: "process_status_desc",
                                       width: 1,
                                       hidden: true,
                                   },
                                   {
                                       field: "Out_status_code",
                                       title: "status_code",
                                       width: 1,
                                       hidden: true,
                                   },
                                   {
                                       field: "Out_status_desc",
                                       title: "status_desc",
                                       width: 1,
                                       hidden: true,
                                   },
                    ]

                });

            $(".k-dropdown-operator").css('display', 'none');
            $("#Creditissue_grid .k-input").attr('disabled', 'false');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function selectRow() {
        try {
            var grid = $("#Creditissue_grid").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            setlocalStorage("ls_pageList", selectedItem);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: "--Select Value--"
        });
    }
</script>
<script>
    $("#btn_Edit").bind("click", function () {
        getSerializedSelectedRows('edit');
    });

    $("#btn_View").bind("click", function () {
        getSerializedSelectedRows('view');
    });

    $("#btn_new").bind("click", function () {
        btn_onClick('Create');
        location.href = "../CreditIssue/CreditIssueForm";
    });
    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage("ls_pageList") != undefined) {
                var items = getlocalStorage("ls_pageList");
                if (items.length == 0) {
                    kendoAlert("Please select records");
                }
                else {
                    if (mode == "edit") {
                        btn_onClick('Edit');
                        location.href = "../CreditIssue/CreditIssueForm";
                    }
                    else if (mode == "view") {
                        btn_onClick('View');
                        location.href = "../CreditIssue/CreditIssueForm";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }
</script>
<script>
    function generate_Credit_list(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                $("#gd_Credit").empty();
                $("#gd_Credit").append("<div id='Creditissue_grid'></div>");
                Creditgrid(data);


            }
            else {
                Creditgrid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function listRefresh() {
        try {
            setlocalStorage('flt_condition', "");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>








