@{
    ViewBag.Form = "Service Recepting";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}

<form id="Service_Recept" class="form-horizontal">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="service_receipt_no" class=" col-sm-5 control-label">Service Receipt No</label>
                        <div class=" col-sm-6">
                            <input type="text" id="service_receipt_no" class="form-control" name="IOU_service_receipt_no" readonly />
                            <input id="txtaggrorgn_code" name="agg_code" type="hidden" />
                        </div>
                    </div>
                </div>
                <div class="col-sm-4" style="display:none">
                    <div class="form-group">
                        <label for="whs_code" class="col-sm-5 control-label required">Warehouse Code</label>
                        <div class="col-sm-6">
                            <input type="text" id="whs_code" name="In_warehouse_code" class="form-control" maxlength="50" readonly>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="whs_name" class="col-sm-5 control-label required">Warehouse Name</label>
                        <div class="col-sm-6">
                            <input type="text" id="whs_name" class="form-control" maxlength="50" readonly>
                        </div>
                        <a class="HelpWindow fa fa-search fa-lg" role="button" id="pay_help1" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Warehouse Name" searchid="PW06" data-target="#HelpModal" onclick=transfer(this,"form","","form_control"); title="Search" style="font-size: 19px; "></a>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="receipt_date" class="col-sm-5 control-label required">Service Receipt Date</label>
                        <div class="col-sm-6">
                            <input class="cusDate" type="date" data-role='datepicker' id="receipt_date" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="In_service_receipt_date" style="width:100%" readonly />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row" style="padding-bottom:15px">

                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="farmer_code" class="col-sm-5 control-label required">Farmer Code</label>
                        <div class=" col-sm-6">
                            <input type="text" id="farmer_code" name="In_farmer_code" class="form-control" maxlength="50" readonly>
                        </div>
                        <a class="HelpWindow fa fa-search fa-lg" role="button" id="pay_help2" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Farmer Details Search" searchid="PW13" data-target="#HelpModal" onclick=transfer(this,"form","","form_control"); title="Search" style="font-size: 19px; "></a>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="farmer_name" class="col-sm-5 control-label required">Farmer Name</label>
                        <div class="col-sm-6">
                            <input type="text" id="farmer_name" name="In_farmer_name" class="form-control" maxlength="50" readonly>
                        </div>
                    </div>
                </div>

                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="request_id" class="col-sm-5 control-label ">Request ID</label>
                        <div class="col-sm-6">
                            <input type="text" id="request_id" name="In_request_id" class="form-control" maxlength="50" readonly>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="output_item_desc" class="col-sm-5 control-label ">Output Item</label>
                        <div class="col-sm-6">
                            <input type="text" id="output_item_desc" class="form-control" maxlength="150" readonly>
                        </div>
                        <a class="HelpWindow fa fa-search fa-lg" role="button" id="pay_help3" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Output Item" searchid="S38" data-target="#HelpModal" onclick=transfer(this,"form","","form_control"); title="Search" style="font-size: 19px; "></a>
                    </div>
                </div>
                <div class="col-sm-4" style="display:none">
                    <div class="form-group">
                        <label for="output_item" class="col-sm-5 control-label ">Output Item Code</label>
                        <div class="col-sm-6">
                            <input type="text" id="output_item" name="In_output_item" class="form-control" readonly>
                        </div>
                    </div>
                </div>

                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="service_type" class="col-sm-5 control-label ">Service Type</label>
                        <div class="col-sm-6">
                            <input type="text" id="service_type" class="form-control" readonly>
                        </div>
                        <a class="HelpWindow fa fa-search fa-lg" role="button" id="pay_help4" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Service Name" searchid="PW12" data-target="#HelpModal" onclick=transfer(this,"form","","form_control"); title="Search" style="font-size: 19px;"></a>
                    </div>
                </div>

                <div class="col-sm-4" style="display:none">
                    <div class="form-group">
                        <label for="service_type" class="col-sm-5 control-label ">Service Code</label>
                        <div class="col-sm-6">
                            <input type="text" id="service_type_code" name="In_service_type" class="form-control" maxlength="50">
                        </div>
                    </div>
                </div>

                @*<div class="col-sm-4">
                        <div class="form-group">
                            <label for="remarks" class="col-sm-5 control-label ">Remarks</label>
                            <div class="col-sm-6">
                                <input type="text" id="remarks" name="remarks" class="form-control" maxlength="1200">
                            </div>
                        </div>
                    </div>*@
            </div>

            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="remarks" class=" col-sm-5 control-label ">Remarks</label>
                        <div class=" col-sm-7">
                            <textarea id="remarks" name="In_remarks" style="width:941px;height:33px;" class="form-control"></textarea>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4" style="display:none">
                    <div class="form-group">
                        <label for="amount" class="col-sm-5 control-label ">Amount</label>
                        <div class=" col-sm-6">
                            <input type="text" id="amount" class="form-control" maxlength="50" name="In_amount" onkeypress="return isNumberKey(event)" style="text-align:right" value="0.00" readonly>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4" style="display:none">
                    <div class="form-group">
                        <label for="paid_amount" class="col-sm-5 control-label ">Paid Amount</label>
                        <div class=" col-sm-6">
                            <input type="text" id="paid_amount" class="form-control" maxlength="50" name="In_paid_amount" onkeypress="return isNumberKey(event)" style="text-align:right" value="0.00" readonly>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4" style="display:none">
                    <div class="form-group">
                        <label for="balance_amount" class="col-sm-5 control-label ">Balance Amount</label>
                        <div class=" col-sm-6">
                            <input type="text" id="balance_amount" class="form-control" maxlength="50" name="In_balance_amount" onkeypress="return isNumberKey(event)" style="text-align:right" value="0.00" readonly>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4" style="display:none">
                    <div class="form-group">
                        <label for="receipt_rowid" class="col-sm-5 control-label ">Service Recpt RowID</label>
                        <div class=" col-sm-6">
                            <input type="text" id="receipt_rowid" class="form-control" maxlength="50" name="IOU_receipt_rowid" onkeypress="return isNumberKey(event)" style="text-align:right">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4" style="display:none">
                    <div class="form-group">
                        <label for="status_codes" class="col-sm-5 control-label ">Status Code</label>
                        <div class=" col-sm-6">
                            <input type="text" id="status_code" class="form-control" maxlength="50" name="In_status_code" onkeypress="return isNumberKey(event)" style="text-align:right">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4" style="display:none">
                    <div class="form-group">
                        <label for="mode_flag" class="col-sm-5 control-label ">Mode Flage</label>
                        <div class=" col-sm-6">
                            <input type="text" id="mode_flag" class="form-control" maxlength="50" name="In_mode_flag" onkeypress="return isNumberKey(event)" style="text-align:right">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4" style="display:none">
                    <div class="form-group">
                        <label for="row_timestamp" class="col-sm-5 control-label ">RowTimestamp</label>
                        <div class=" col-sm-6">
                            <input type="text" id="row_timestamp" class="form-control" maxlength="50" name="In_row_timestamp" onkeypress="return isNumberKey(event)" style="text-align:right">
                        </div>
                    </div>
                </div>
                <div class="col-sm-3" style="display:none">
                    <div class="form-group">
                        <label for="row_timestamp" class="col-sm-5 control-label">Agg Code</label>
                        <div class="col-sm-7">
                            <input type="text" id="agg_code" class="form-control" maxlength="10" value="Time  ">
                        </div>
                    </div>
                </div>
            </div>

            <div class="row" style="padding-bottom:15px">
                <div class="col-xs-12">
                    <div id="gd_production">
                        <div id="service_grid">
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</form>

<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/CommonScripts/Common_func.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>
<script src="~/API_Scripts/PAWHSServiceReceipting.js"></script>
<script src="~/API_Scripts/PAWHS_saveServiceReceipt_Model.js"></script>
<script src="~/API_Scripts/PAWHS_getServiceReceipt_Model.js"></script>
<script src="~/API_Scripts/PAWHS_getStageItemDefinitionList_Model.js"></script>
<script src="~/API_Scripts/Service_Receipting_PAWHS_getServiceReceipt_APIClient.js"></script>
<script src="~/API_Scripts/Service_Receipting_PAWHS_getServiceReceiptList_APIClient.js"></script>
<script src="~/API_Scripts/Service_Receipting_PAWHS_saveServiceReceipt_APIClient.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>

<script>
    click_act_name = "PAWHSServiceReceiptList";
    click_ctrl_name = "PAWHSServiceReceipt";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>
<script>
    $(document).ready(function () {
        kendodate_format();
        $("#divCreate").hide();
        $("#divEdit").hide();
        $("#divView").hide();
        $('#divUserRoleGenerate').show();
        $('#frmlayerdiv').show();
        $("#hide_div").hide();
        $("#pay_help2").hide();
        $("#Topsubheader").show();
        $("#bottom_menus").hide();
        $(".file_attach").attr("hdrtitle", "Service Receipting");
        $(".notes").attr("hdrtitle", "Service Receipting");
        $("#lblForm_menuid").text("SERVCRECEPT");


        //$("#receipt_date").attr("readonly", true);
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#Service_Recept");
        kendo.init(container);
        container.kendoValidator({
        });
        $("#receipt_date").kendoDatePicker({
            max: new Date(),
            value: new Date(), // sets max date
            format: "dd/MM/yyyy"
        });
        //$('#receipt_date').attr('readonly', true);
        var org_id = getlocalStorage('org_id');
        $('#txtagg_code').val(org_id);
        grid_product([]);
        Screen_Id = "SERVCRECEPT";
        permission = sec_Permission(Screen_Id);

        if (getlocalStorage('btn_clk_val') == "Create") {
            $('#divUserRoleGenerate #btngen').attr("Disabled", true);
            //$("#bottom_menus").hide();
            $("#quantity").removeAttr("readonly");
            $("#received_qty").removeAttr("readonly");
            $("#rate").removeAttr("readonly");
            $("#paid_amount").removeAttr("readonly");
            //$("#accepted_quantity").removeAttr("readonly");
            //$("#bottom_menus").hide();
            $("#DocStat").val("New");
            $("#pay_help1").show();
            $("#pay_help2").show();
            $("#pay_help3").show();
            $("#pay_help4").show();
        }
        else if (getlocalStorage('btn_clk_val') == "Edit") {
            $('#divUserRoleGenerate #btngen').attr("Disabled", true);
            $('#divUserRoleGenerate #btnSave').removeAttr("Disabled");
            $("#receipt_date").prop("disabled", true);
            $("#paid_amount").removeAttr("readonly");
            //$("#bottom_menus").show();
            $("#pay_help1").hide();
            $("#pay_help2").hide();
            $("#pay_help3").hide();
            $("#pay_help4").hide();
            // $("#bottom_menus").show();
            //$("#bottom_menus li:nth-child(1)").hide();
            //$("#bottom_menus li:nth-child(3)").hide();
            if (getlocalStorage("ls_pageList") != undefined) {
                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("Service_Recept");
                var obj_val = JSON.parse(formval);
                obj_val.IOU_service_receipt_no = data.Out_pickup_request_id;
                obj_val.IOU_receipt_rowid = data.Out_receipt_rowid;

                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                var Context = data.context;
                SingleFetch_Service_ReceiptScreen(Context);
                //retrieve_ServiceReceiptEdit(data);
                $("#mode_flag").val('S');
                $("#DocStat").val("Active");
            }
        }
        else if (getlocalStorage('btn_clk_val') == "View") {
            //$("#bottom_menus").hide();
            $("#pay_help1").hide();
            $("#pay_help2").hide();
            $("#pay_help3").hide();
            $("#pay_help4").hide();
            $('#frmlayerdiv').show();
            $('#divUserRoleGenerate').hide();
            $("#btnpayment").hide();
            $('#btndiv').css("padding-left", "1000px");
            $("#receipt_date").prop("disabled", true);
            if (getlocalStorage("ls_pageList") != undefined) {
                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("Service_Recept");
                var obj_val = JSON.parse(formval);
                obj_val.IOU_service_receipt_no = data.Out_pickup_request_id;
                obj_val.IOU_receipt_rowid = data.Out_receipt_rowid;

                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                var Context = data.context;
                SingleFetch_Service_ReceiptScreen(Context);
                //retrieve_ServiceReceiptEdit(data);
                $("#mode_flag").val('S');
                $("#DocStat").val("View");
            }
        }
        var org = getlocalStorage('org_id');
        $('#agg_code').val(org);
        //amount validation
        $('#quantity').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
               ((event.which < 48 || event.which > 57) &&
               (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if (text.indexOf('.') != -1) {
                if ((text.indexOf('.') != -1) &&
               (text.substring(text.indexOf('.')).length > 2) &&
               (event.which != 0 && event.which != 8) &&
               ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }
            }
            else {
                if ($this.val().length > 17) {
                    if (event.which != 46) {
                        event.preventDefault();
                    }
                }
            }

        });
        $('#quantity').bind("paste", function (e) {
            var text = e.originalEvent.clipboardData.getData('Text');
            if ($.isNumeric(text)) {
                if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                    e.preventDefault();
                    $(this).val(text.substring(0, text.indexOf('.') + 3));
                }
            }
            else {
                e.preventDefault();
            }
        });
        $('#received_qty').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
               ((event.which < 48 || event.which > 57) &&
               (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if (text.indexOf('.') != -1) {
                if ((text.indexOf('.') != -1) &&
               (text.substring(text.indexOf('.')).length > 2) &&
               (event.which != 0 && event.which != 8) &&
               ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }
            }
            else {
                if ($this.val().length > 17) {
                    if (event.which != 46) {
                        event.preventDefault();
                    }
                }
            }

        });
        $('#received_qty').bind("paste", function (e) {
            var text = e.originalEvent.clipboardData.getData('Text');
            if ($.isNumeric(text)) {
                if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                    e.preventDefault();
                    $(this).val(text.substring(0, text.indexOf('.') + 3));
                }
            }
            else {
                e.preventDefault();
            }
        });
        $('#accepted_quantity').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
               ((event.which < 48 || event.which > 57) &&
               (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if (text.indexOf('.') != -1) {
                if ((text.indexOf('.') != -1) &&
               (text.substring(text.indexOf('.')).length > 2) &&
               (event.which != 0 && event.which != 8) &&
               ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }
            }
            else {
                if ($this.val().length > 17) {
                    if (event.which != 46) {
                        event.preventDefault();
                    }
                }
            }

        });
        $('#accepted_quantity').bind("paste", function (e) {
            var text = e.originalEvent.clipboardData.getData('Text');
            if ($.isNumeric(text)) {
                if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                    e.preventDefault();
                    $(this).val(text.substring(0, text.indexOf('.') + 3));
                }
            }
            else {
                e.preventDefault();
            }
        });
        $('#rate').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
               ((event.which < 48 || event.which > 57) &&
               (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if (text.indexOf('.') != -1) {
                if ((text.indexOf('.') != -1) &&
               (text.substring(text.indexOf('.')).length > 2) &&
               (event.which != 0 && event.which != 8) &&
               ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }
            }
            else {
                if ($this.val().length > 17) {
                    if (event.which != 46) {
                        event.preventDefault();
                    }
                }
            }

        });
        $('#rate').bind("paste", function (e) {
            var text = e.originalEvent.clipboardData.getData('Text');
            if ($.isNumeric(text)) {
                if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                    e.preventDefault();
                    $(this).val(text.substring(0, text.indexOf('.') + 3));
                }
            }
            else {
                e.preventDefault();
            }
        });
        $('#amount').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
               ((event.which < 48 || event.which > 57) &&
               (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if (text.indexOf('.') != -1) {
                if ((text.indexOf('.') != -1) &&
               (text.substring(text.indexOf('.')).length > 2) &&
               (event.which != 0 && event.which != 8) &&
               ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }
            }
            else {
                if ($this.val().length > 17) {
                    if (event.which != 46) {
                        event.preventDefault();
                    }
                }
            }

        });
        $('#amount').bind("paste", function (e) {
            var text = e.originalEvent.clipboardData.getData('Text');
            if ($.isNumeric(text)) {
                if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                    e.preventDefault();
                    $(this).val(text.substring(0, text.indexOf('.') + 3));
                }
            }
            else {
                e.preventDefault();
            }
        });
        $('#paid_amount').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
               ((event.which < 48 || event.which > 57) &&
               (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if (text.indexOf('.') != -1) {
                if ((text.indexOf('.') != -1) &&
               (text.substring(text.indexOf('.')).length > 2) &&
               (event.which != 0 && event.which != 8) &&
               ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }
            }
            else {
                if ($this.val().length > 17) {
                    if (event.which != 46) {
                        event.preventDefault();
                    }
                }
            }

        });
        $('#paid_amount').bind("paste", function (e) {
            var text = e.originalEvent.clipboardData.getData('Text');
            if ($.isNumeric(text)) {
                if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                    e.preventDefault();
                    $(this).val(text.substring(0, text.indexOf('.') + 3));
                }
            }
            else {
                e.preventDefault();
            }
        });
        $("#paid_amount").change(function () { BalanceAmount(); });
        $('#balance_amount').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
               ((event.which < 48 || event.which > 57) &&
               (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if (text.indexOf('.') != -1) {
                if ((text.indexOf('.') != -1) &&
               (text.substring(text.indexOf('.')).length > 2) &&
               (event.which != 0 && event.which != 8) &&
               ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }
            }
            else {
                if ($this.val().length > 17) {
                    if (event.which != 46) {
                        event.preventDefault();
                    }
                }
            }

        });
        $('#balance_amount').bind("paste", function (e) {
            var text = e.originalEvent.clipboardData.getData('Text');
            if ($.isNumeric(text)) {
                if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                    e.preventDefault();
                    $(this).val(text.substring(0, text.indexOf('.') + 3));
                }
            }
            else {
                e.preventDefault();
            }
        });



        function SingleFetch_Service_ReceiptScreen(Context) {
            debugger;
            try {
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, IOU_receipt_rowid: Context.Header.IOU_receipt_rowid, IOU_service_receipt_no: Context.Header.IOU_service_receipt_no }),
                    url: "/PAWHSServiceReceipt/SingleServiceList",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        if (response.context != null) {
                            generate_ServiceReceipt_header(response.context.Header)

                        }
                        if (response.context.Detail != null) {
                            generate_ServiceReceipt_list(response.context.Detail)
                        }
                        if (response.ApplicationException != null) {
                            kendoAlert(response.ApplicationException.errorDescription);
                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });
            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }

        }


        function load_master_code() {
            var data = {};
            data.screen_Id = "SERVCRECEP";
            var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
        }

        function BalanceAmount() {
            var totalamount = $('#amount').val();
            var paid_amount = $('#paid_amount').val() != 0 ? $('#paid_amount').val() : 0;
            var balanceamount = totalamount - paid_amount;
            $('#balance_amount').val(balanceamount != 0 ? balanceamount : 0)
        }
    });
</script>

<script>

    $('#rate').keypress(function (event) {
        var $this = $(this);
        if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
           ((event.which < 48 || event.which > 57) &&
           (event.which != 0 && event.which != 8))) {
            event.preventDefault();
        }

        var text = $(this).val();
        if (text.indexOf('.') != -1) {
            if ((text.indexOf('.') != -1) &&
           (text.substring(text.indexOf('.')).length > 2) &&
           (event.which != 0 && event.which != 8) &&
           ($(this)[0].selectionStart >= text.length - 2)) {
                event.preventDefault();
            }
        }
        else {
            if ($this.val().length > 17) {
                if (event.which != 46) {
                    event.preventDefault();
                }
            }
        }

    });

    $('#rate').bind("paste", function (e) {
        var text = e.originalEvent.clipboardData.getData('Text');
        if ($.isNumeric(text)) {
            if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                e.preventDefault();
                $(this).val(text.substring(0, text.indexOf('.') + 3));
            }
        }
        else {
            e.preventDefault();
        }
    })

    $("#rate").change(function () { Amount(); });

    $("#divUserRoleGenerate #btnSave").bind("click", function () {
        GenerateAndSend();
    });

    function GenerateAndSend() {
        debugger;
        try {
          
            Validations();
            if (Validate == true) {
                Validationgrid();
                Validation();
                var grid = $("#service_grid").data("kendoGrid");
                var dataSource = grid.dataSource;
                var totalCount = dataSource.total();

                if (totalCount > 0) {
                    var valid = Validation();
                    if (valid == "") {
                        if ($("#pickup_request_id").val() != "" || $("#pickup_request_id").val() != undefined) {
                            if ($("#receipt_rowid").val() == "") {
                                $("#receipt_rowid").val('0');
                            }
                            if ($("#mode_flag").val() == "") {
                                $("#mode_flag").val('I');
                            }
                            if ($("#mode_flag").val() == "S") {
                                $("#mode_flag").val('U');
                            }
                            if ($("#row_timestamp").val() == "") {
                                $("#row_timestamp").val('0');
                            }
                            if ($("#paid_amount").val() == "") {
                                $("#paid_amount").val('0');
                            }
                            if ($("#balance_amount").val() == "") {
                                $("#balance_amount").val('0');
                            }
                            if ($("#request_id").val() == "") {
                                $("#request_id").val('N/A');
                            }
                            //if ($("#remarks").val() == "") {
                            //    kendoAlert("Please Fill The Remarks field");
                            //}
                            $("#receipt_date").removeAttr("readonly");
                            $("#receipt_date").prop("disabled", false);
                            var formval = form_Serialize("Service_Recept");
                            var obj_val = JSON.parse(formval);
                            obj_val.In_service_receipt_date = $("#receipt_date").val();

                            if (obj_val.hasOwnProperty('In_service_receipt_date')) {
                                if (obj_val.In_service_receipt_date != '')
                                    obj_val.In_service_receipt_date = getFormated_StringDate(obj_val.In_service_receipt_date);
                            }
                            var grid_val = JSON.stringify($("#service_grid").data().kendoGrid._data);
                            var Bind = {};
                            Bind = grid_val;
                            var result = JSON.parse(Bind);

                            $.each(result, function (index, value) {
                                var row_id = value.In_receiptdtl_rowid;
                                if (row_id == undefined || row_id == '') {
                                    result[index].In_receiptdtl_rowid = "0";
                                }
                                var status_code = value.In_status_code;
                                if (status_code == undefined || status_code == '') {
                                    result[index].In_status_code = "A";
                                }
                                var mmode = obj_val.In_mode_flag;
                                if (mmode == "S") {
                                    result[index].In_mode_flag = "U";
                                }
                                else if (mmode == "I") {
                                    result[index].In_mode_flag = "I";
                                }
                                //var mode = obj_val.In_mode_flag;
                                //if (mode == "" || mode != "") {
                                //    result[index].In_mode_flag = "R";
                                //}
                            });
                            var obj_grid_val = result;
                            $.each(result, function (index, value) {
                                if (value.In_item_name == "" || value.In_item_name == undefined) {
                                    kendoAlert("ItemName cannot be blank");
                                    return false;
                                }
                                if (value.In_quantity == "" || value.In_quantity == undefined) {
                                    kendoAlert("Quantity cannot be blank");
                                    return false;
                                }
                                if (value.In_quantity == "0") {
                                    kendoAlert("Please Fill The Valid Quantity");
                                    return false;
                                }
                                if (value.In_received_qty == "" || value.In_received_qty == undefined) {
                                    kendoAlert("Received Quantity cannot be blank");
                                    return false;
                                }
                                if (value.In_received_qty == "0") {
                                    kendoAlert("Please Fill The Valid Received Quantity");
                                    return false;
                                }

                                if (value.In_accepted_qty == "" || value.In_accepted_qty == undefined) {
                                    kendoAlert("Accepted Quantity cannot be blank");
                                    return false;
                                }
                                if (value.In_accepted_qty == "0") {
                                    kendoAlert("Please Fill The Valid Accepted Quantity");
                                    return false;
                                }


                                else {

                                    var data = {};
                                    data.context = WebAPIProxy.getContext();
                                    data.context.Header = obj_val;
                                    data.context.Detail = obj_grid_val;
                                    var Context = data.context;

                                    $.ajax({
                                        type: "POST",
                                        data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
                                        url: "/PAWHSServiceReceipt/SaveServiceReceipt",
                                        dataType: "json",
                                        contentType: 'application/json; charset=utf-8',
                                        success: function (response) {
                                            debugger;
                                            var Res = response;
                                            if (Res != null) {
                                                var mode = $("#mode_flag").val();
                                                if (mode == "I") {
                                                    kendoAlert("Service Receipt Details Saved Successfully");
                                                    Get_ServiceReceipt_details(Res.context.Header);
                                                }
                                                else if (mode == "U") {
                                                    kendoAlert("Service Receipt Details Saved Successfully");
                                                    Get_ServiceReceipt_details(Res.context.Header);
                                                }
                                                else if (mode == "R") {
                                                    kendoAlert("Service Receipt Generated Successfully");
                                                    Get_ServiceReceipt_details(Res.context.Header);
                                                }
                                            }
                                            else {
                                                kendoAlert(Res.ApplicationException.errorDescription);
                                            }
                                        },
                                        error: function (er) {
                                            alert(er)
                                            console.log(er)
                                        }

                                    });
                                    //SaveSeriveReceiptList(data);
                                    $("#receipt_date").removeAttr("readonly", true);
                                    $('#divUserRoleGenerate #btnSave').attr("disabled", true);
                                    $('#divUserRoleGenerate #btngen').removeAttr("disabled");
                                }
                            });
                        }
                        else {
                            $("#mode_flag").val('I');
                            $('#divUserRoleGenerate #btnSave').attr("disabled", true);
                            $('#divUserRoleGenerate #btngen').removeAttr("disabled");
                        }

                    }
                    else {
                        kendoAlert(valid);
                    }
                }
                //else {
                //    kendoAlert(valid);
                //    kendoAlert("Please Add the Items. For Generate the Service Receipt");
                //}
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function Amount() {
        try {
            var rate = $('#rate').val() != '' ? parseFloat($('#rate').val()) : 0;
            var qty = $('#received_qty').val() != '' ? parseFloat($('#received_qty').val()) : 0;
            var amount = rate * qty;
            $('#amount').val(amount);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script>

    function grid_product(data) {
        try {
            $("#service_grid").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_receiptdtl_rowid: { type: "string" },
                                In_item_code: { type: "string", },
                                In_item_name: { type: "string", },
                                In_uom: { type: "string", },
                                In_quantity: { type: "string" },
                                In_received_qty: { type: "string" },
                                In_accepted_qty: { type: "string" },
                                In_status_code: { type: "string" },
                                In_remarks: { type: "string" },
                                //remarks: {
                                //    validation: {
                                //        required: { message: "remarks cannot be blank" },
                                //        maxlength:
                                //                                function (input) {
                                //                                    if (input.val().length > 50) {
                                //                                        input.attr("data-maxlength-msg", "Max length is 50");
                                //                                        return false;
                                //                                    }
                                //                                    return true;
                                //                                }
                                //    }
                                //},
                                In_mode_flag: { type: "string", defaultValues: "I" }
                            }
                        }
                    }
                },
                toolbar: "<a  class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 200,
                groupable: false,
                //dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#service_grid').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
            {
                name: "Delete",
                id: "Delete",
                imageClass: "fa fa-close",
                click: function (e) {
                    // e.preventDefault();
                    var grid = $("#service_grid").data("kendoGrid");
                    var dataItem = $("#service_grid").data("kendoGrid").dataItem($(e.target).closest("tr"));
                    DeleteWindowEvent(e, dataItem, grid);
                    e.stopImmediatePropagation()
                }
            },
                    ], title: "Action", width: "50px",
                },
                {
                    field: "In_receiptdtl_rowid",
                    title: "receiptdtl_rowid",
                    width: 1,
                    hidden: true,
                },
                {
                    field: "In_item_name",
                    title: "Item Name",
                    editor: '<div class="input-group input-group-sm"><input type="text" readonly name="item_name" maxlength="50" style="width:150px;color:black"  onkeypress="return speical_char(event)" data-bind="value:item_name"/><span class="input-group-btn" style="padding-right: 200px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Item Details Search" searchid="PW04" data-target="#HelpModal" onclick=transfer(this,"grid","service_grid","grid_product") title="Search" style="font-size: 15px; padding-left: 10px; color:white"></a> </span> </div>',
                    width: 150,
                },
                 {
                     field: "In_item_code",
                     title: "Item code",
                     width: 100,
                 },
                 {
                     field: "In_uom",
                     title: "UOM",
                     width: 100,

                 },
                 {
                     field: "In_quantity",
                     title: "Quantity",
                     attributes: { style: "text-align:right;" },
                     editor: function (container, options) {
                         numeric_editor(container, options.field, '50', '0');

                     },
                     width: 100,
                 },
                  {
                      field: "In_received_qty",
                      title: "received Qty",
                      attributes: { style: "text-align:right;" },
                      editor: function (container, options) {
                          numeric_editor(container, options.field, '50', '0');

                      },
                      width: 100,

                  },
                  {
                      field: "In_accepted_qty",
                      title: "Accepted qty",
                      attributes: { style: "text-align:right;" },
                      editor: function (container, options) {
                          numeric_editor(container, options.field, '50', '0');

                      },
                      width: 100,

                  },
                  {
                      field: "In_remarks",
                      title: "Remarks",
                      width: 100,

                  },
                  {
                      field: "In_status_code",
                      title: "status_code",
                      width: 1,
                      hidden: true,
                  },
                  {
                      field: "In_mode_flag",
                      title: "Mode",
                      hidden: true
                  }],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }

    function Validation() {
        try {
            var validate_msg = "";
            if ($("#whs_name").val() == "") {
                validate_msg += "Warehouse Name Cannot Be Blank. Please Fill the Warehouse Name Field<br>"
                return 0;
            }
            if ($("#farmer_code").val() == "") {
                validate_msg += "Farmer Code Cannot Be Blank. Please Fill the Farmer Code  Field<br>"
                return 0;
            }
            if ($("#remarks").val() == "") {
                validate_msg += "Remarks Cannot Be Blank. Please Fill the Remarks  Field<br>"
                return 0;
            }
            var grid_val = JSON.stringify($("#service_grid").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            if (result.length == 0) {
                validate_msg += "Atleast one record needs to be entered<br>"
                return false;
            }
            //$.each(result, function (index, value) {
            //    if (value.remarks == "" || value.remarks == undefined) {
            //        validate_msg += "remarks cannot be blank<br>"
            //        return 0;
            //    }
            //    if (value.quantity == "") {
            //        validate_msg += "quantity cannot be blank<br>"
            //        return 0;
            //    }
            //    if (value.received_qty == "") {
            //        validate_msg += "received quantity cannot be blank<br>"
            //        return 0;
            //    }
            //});
            return validate_msg;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    var mandatory_check = true;
    function

      Validationgrid() {
        try {
            var grid_val = JSON.stringify($("#service_grid").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            var grid_validate_msg = "";
            if (result.length == 0) {
                kendoAlert("Atleast one record needs to be entered");
                mandatory_check = false;
                return false;
            }
            //$.each(result, function (index, value) {
            //    if (value.remarks == "" || value.remarks == undefined) {
            //        grid_validate_msg += "remarks cannot be blank <br>";
            //        mandatory_check = false;
            //    }
            //    if (value.quantity == "") {
            //        grid_validate_msg += "quantity cannot be blank <br>";
            //        mandatory_check = false;
            //    }
            //    if (value.received_qty == "") {
            //        grid_validate_msg += "received quantity cannot be blank <br>";
            //        mandatory_check = false;
            //    }
            //    if (mandatory_check == false) {
            //        kendoAlert(grid_validate_msg);
            //        return false;
            //    }
            //});

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    var Validate = false;
    function Validations() {
        try {
            if ($("#whs_name").val() == "") {
                kendoAlert("Warehouse Name Cannot Be Blank. Please Enter the Warehouse Name Field");
                return 0;
            }
            if ($("#farmer_code").val() == "") {
                kendoAlert("Farmer Code Cannot Be Blank. Please Enter the Farmer Code  Field");
                return 0;
            }
            if ($("#farmer_name").val() == "") {
                kendoAlert("Farmer Name Cannot Be Blank. Please Enter the Farmer Name Field");
                return 0;
            }
            if ($("#output_item_desc").val() == "") {
                kendoAlert("Output item Cannot Be Blank. Please Enter the Output item Field");
                return 0;
            }
            if ($("#service_type").val() == "") {
                kendoAlert("Service Type Cannot Be Blank. Please Enter the Service Type Field");
                return 0;
            }
            
            else {
                Validate = true;
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function save() {
        var grid = $("#service_grid").data("kendoGrid");
        var dataSource = grid.dataSource;
        var totalCount = dataSource.total();
        if (totalCount > 0) {
            try {
                if ($("#receipt_rowid").val() == "") {
                    $("#receipt_rowid").val('0');
                }
                if ($("#mode_flag").val() != "" || $("#mode_flag").val() == "") {
                    $("#mode_flag").val('R');
                }
                if ($("#rate").val() == "") {
                    $("#rate").val('0');
                }
                if ($("#paid_amount").val() == "") {
                    $("#paid_amount").val('0');
                }
                if ($("#balance_amount").val() == "") {
                    $("#balance_amount").val('0');
                }
                if ($("#pickup_request_id").val() == "" || $("#pickup_request_id").val() == undefined) {
                    $("#pickup_request_id").val('N/A');
                }
                var formval = form_Serialize("Service_Recept");
                var obj_val = JSON.parse(formval);
                obj_val.service_receipt_date = $("#receipt_date").val();

                if (obj_val.hasOwnProperty('service_receipt_date')) {
                    if (obj_val.service_receipt_date != '')
                        obj_val.service_receipt_date = getFormated_StringDate(obj_val.service_receipt_date);
                }
                var grid_val = JSON.stringify($("#service_grid").data().kendoGrid._data);
                var Bind = {};
                Bind = grid_val;
                var result = JSON.parse(Bind);
                $.each(result, function (index, value) {
                    var row_id = value.In_receiptdtl_rowid;
                    if (row_id == undefined || row_id == '') {
                        result[index].In_receiptdtl_rowid = "0";
                    }
                    var mode = obj_val.In_mode_flag;
                    if (mode == "" || mode != "") {
                        result[index].In_mode_flag = "R";
                    }
                    var status_code = value.In_status_code;
                    if (status_code == undefined || status_code == '') {
                        result[index].In_status_code = "A";
                    }
                });
                var obj_grid_val = result;
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                data.context.Detail = obj_grid_val;
                var Context = data.context;

                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
                    url: "/PAWHSServiceReceipt/SaveServiceReceipt",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        var Res = response;
                        if (Res != null) {
                            var mode = $("#mode_flag").val();
                            if (mode == "I") {
                                kendoAlert("Service Receipt Details Saved Successfully");
                                Get_ServiceReceipt_details(Res.context.Header);
                            }
                            else if (mode == "U") {
                                kendoAlert("Service Receipt Details Saved Successfully");
                                Get_ServiceReceipt_details(Res.context.Header);
                            }
                            else if (mode == "R") {
                                kendoAlert("Service Receipt Generated Successfully");
                                Get_ServiceReceipt_details(Res.context.Header);
                            }                            
                        }
                        else {
                            kendoAlert(Res.ApplicationException.errorDescription);
                        }


                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });

                //SaveSeriveReceiptList(data);
                $("#service_receipt_no").removeAttr("disabled");
                setlocalStorage("ls_pageList", "Service_Recept");
                if ($("#service_receipt_no").val() != "") {
                    $('#divUserRoleGenerate #btngen').attr("disabled", true);
                }
                $("#service_receipt_no").attr("readonly", true);
                $("#mode_flag").val('P');
            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }
        else {
            kendoAlert("Please Add the Items. For Generate the Service Receipt");
        }
    }
   
    function generate_ServiceReceipt_header(res) {
        try {
            var formval = form_Serialize("Warehouse_Receipt");
            var obj_val = JSON.parse(formval);
            $("#receipt_rowid").val(res.IOU_receipt_rowid);
            $("#service_receipt_no").val(res.IOU_service_receipt_no);
            $("#whs_code").val(res.In_warehouse_code);
            $("#whs_name").val(res.In_warehouse_name);
            $('#farmer_code').val(res.In_farmer_code);
            $('#farmer_name').val(res.In_farmer_name);
            $('#request_id').val(res.In_request_id);
            $('#item_code').val(res.item_code);
            $('#item_name').val(res.item_name); 0
            $('#uom').val(res.uom);
            $("#output_item").val(res.In_output_item);
            $("#output_item_desc").val(res.In_status_desc);
            $("#remarks").val(res.In_remarks);
            $("#service_type").val(res.In_service_type);
            $("#service_type_code").val(res.In_status_code);
            $("#mode_flag").val('U');
            $("#row_timestamp").val(res.In_row_timestamp);
            $("#DocStat").val("Active");
            $("#mode_flag").val('P');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_ServiceReceipt_list(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                $("#service_grid").empty();
                $("#service_grid").append("<div id='production_tran_grid'></div>");
                grid_product(data);
            }
            else {
                grid_product([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function Get_ServiceReceipt_details(res) {
        try {
            var formval = form_Serialize("Service_Recept");
            var obj_val = JSON.parse(formval);
            obj_val.IOU_service_receipt_no = obj_val.IOU_service_receipt_no;
            obj_val.IOU_receipt_rowid = res.IOU_receipt_rowid;

            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, IOU_receipt_rowid: Context.Header.IOU_receipt_rowid, IOU_service_receipt_no: Context.Header.IOU_service_receipt_no }),
                url: "/PAWHSServiceReceipt/SingleServiceList",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_ServiceReceipt_header(response.context.Header)

                    }
                    if (response.context.Detail != null) {
                        generate_ServiceReceipt_list(response.context.Detail)
                    }
                    if (response.ApplicationException != null) {
                        kendoAlert(response.ApplicationException.errorDescription);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function grid_control() {
        try {
            var control_Name = [
            { "dataCol": "item_code", "grid_row_col": "In_item_code" },
                { "dataCol": "item_name", "grid_row_col": "In_item_name" },
            { "dataCol": "uom_desc", "grid_row_col": "In_uom" },
            { "dataCol": "", "grid_row_col": "In_received_qty" },
            { "dataCol": "", "grid_row_col": "In_accepted_qty" },
            { "dataCol": "", "grid_row_col": "In_quantity" },
            { "dataCol": "", "grid_row_col": "In_mode_flag" },
            { "dataCol": "", "grid_row_col": "In_remarks" },
            { "dataCol": "", "grid_row_col": "uid" }
            ];

            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function controlName() {
        try {
            var control_Name = [
            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function form_control() {
        var control_Name = [
            { "dataCol": "whs_code", "controlId": "whs_code", "type": "Text" },
            { "dataCol": "whs_name", "controlId": "whs_name", "type": "Text" },
            { "dataCol": "farmer_code", "controlId": "farmer_code", "type": "Text" },
            { "dataCol": "farmer_name", "controlId": "farmer_name", "type": "Text" },
            { "dataCol": "item_code", "controlId": "output_item", "type": "Text" },
            { "dataCol": "item_name", "controlId": "output_item_desc", "type": "Text" },
             { "dataCol": "agg_code", "controlId": "agg_code", "type": "Text" },
             { "dataCol": "service_name", "controlId": "service_type", "type": "Text" },
             { "dataCol": "service_code", "controlId": "service_type_code", "type": "Text" },
        ];
        return control_Name;
    }

    function trans_input_data() {
        try {
            var trans_coll = [
               { "trasfer": "Yes", "dataCol": "", "controlId": "", "grid_id": "", "grid_row_col": "" },
            ];
            return trans_coll;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>



