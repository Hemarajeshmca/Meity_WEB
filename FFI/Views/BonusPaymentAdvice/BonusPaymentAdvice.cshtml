@{
    ViewBag.List = "Bonus Payment Advice";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}
<form id="frm_bonus" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="row">
        <div class="col-xs-12">
            <div id="gd_bonusgrid">
                <div id="Bonus_grid"></div>
            </div>
        </div>
    </div>
</form>

<script src="~/API_Scripts/Bonus_Payment_retrieveBonusPayment_APIClient.js"></script>
<script src="~/API_Scripts/Bonus_Payment_retrieveBonusPaymentList_APIClient.js"></script>
<script src="~/API_Scripts/Bonus_Payment_saveBonusPayment_APIClient.js"></script>
<script src="~/API_Scripts/retrieveBonusPaymentList_Model.js"></script>
<script src="~/API_Scripts/retrieveBonusPayment_Model.js"></script>
<script src="~/API_Scripts/saveBonusPayment_Model.js"></script>
<script src="~/API_Scripts/BonusPayment.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>

<script>
    var menuId = "";
    var permission = "";
    $(document).ready(function () {
        $(".adv_filter").attr("hdrtitle", "Bonus Payment Advice List");
        $(".adv_filter").attr("fltid", "BONUSPAY");
        $(".Export").attr("hdrtitle", "Bonus Payment Advice List");
        list_grid_id = "Bonus_grid";
        Screen_Id = "MBPAY";
        //permission = sec_Permission(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage("ls_pageList", "");
    });
</script>

<script>
    function listpageloadfetch() {
        try{
        var org_type = getlocalStorage('org_type');
        var formval = form_Serialize("frm_bonus");
        var obj_val = JSON.parse(formval);
        obj_val.FilterBy_Option = org_type;
        obj_val.FilterBy_Code = ".";
        if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
            obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
        }
        else {
            obj_val.FilterBy_Fromvalue = ".";
        }
        obj_val.FilterBy_Tovalue = ".";

        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Filter = obj_val;
        retrieve_BonusPayment_list(data);
        //setlocalStorage('flt_condition', "");
    }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    var status_Priority = [];
    var status_Priority = [];
    function listgrid(data) {
        try{
        $.each(data, function (index, value) {
            var flag = false;
            $.each(status_Priority, function (sindex, svalue) {
                if (svalue == value.status_desc) {
                    flag = true;
                }
            });
            if (flag == false) {
                status_Priority.push(value.status_desc);
            }
        });
        $("#Bonus_grid").kendoGrid(
          {
              dataSource: {
                  data: data,
                  pageSize: 20,
                  change: function (e) {
                      setTimeout(function () {
                          var gd = $("#Bonus_grid").data("kendoGrid");
                          filter_row(gd);
                          $('.k-i-close').css('display', 'none');
                          $('button.k-button-icon').css('display', 'none');
                          $('#Bonus_grid .k-input').prop('disabled', false);
                          $('#Bonus_grid .k-input').prop('readonly', true);
                      }, 1);
                  },
              },
              toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
              excelExport: function (e) {
                  var gd = $("#Bonus_grid").data("kendoGrid");
                  var len = gd.dataSource._data.length;
                  var chkall = $('#chkall').is(':checked');
                  var chkfilter = $('#chkfilter').is(':checked');
                  var chktemp = $('#chktemp').is(':checked');
                  var twokendobox = true;
                  gd.dataSource.pageSize(len);
                  if (e.sender.dataSource._data.length == len) {
                      twokendobox = false;
                      exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                  }
                  else {
                      exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                  }
                  gd.dataSource.pageSize('10');
                  return false;
              },
              filterable: {
                  enabled: true,
                  delay: 1500,
                  mode: "menu, row",
                  height: 200,
                  click: function (e) {
                      var gd = $("#Bonus_grid").data("kendoGrid");
                      filter_row(gd);
                  }
              },
              filterMenuInit: function (e) {
                  var gd = $("#Bonus_grid").data("kendoGrid");
                  filter_row(gd);
              },
              change: selectRow,
              height: 450,
              sortable: true,
              selectable: true,
              selectable: "singl",   //  Grid Row Selection
              pageable: {
                  refresh: false,
                  pageSizes: true,
                  buttonCount: 5
              },
              navigatable: true,
              groupable: false,
             columns: [

                    {
                        field: "bonus_rowid",
                        title: "Bonus Row ID",                      
                        hidden: true,
                    },
                 {
                     field: "bonus_no",
                     title: "Bonus Payment ID",
                     filterable: {
                         cell: {
                             operator: "contains",
                             inputWidth: 1500
                         }
                     }
                 },
                     {
                         field: "bonus_date",
                         title: "Bonus Payment Date",
                         filterable: {
                             cell: {
                                 operator: "contains",
                                 inputWidth: 1500
                             }
                         }
                     },
                       {
                           field: "finyear_code",
                           title: "Financial year",
                           filterable: {
                               cell: {
                                   operator: "contains",
                                   inputWidth: 1500
                               }
                           }
                       },
                
                 {
                     field: "status_desc",
                     title: "Process Status",
                     filterable: {
                         cell: {
                             operator: "contains",
                             inputWidth: 1500
                         }
                     }
                 },
          
              {
                  field: "status_desc",
                  title: "Status",
                  filterable: {
                      cell: {
                          operator: "contains",
                          inputWidth: 1500
                      }
                  }
              },
              {
                  field: "mode_flag",
                  title: "Mode",
                  hidden: true
              }],

         });
        $(".k-dropdown-operator").css('display', 'none');
        $("#Bonus_grid .k-input").attr('disabled', 'false');
        }
        catch (err) {            
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: "--Select Value--"
        });
    }
    function selectRow() {
        var grid = $("#Bonus_grid").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        setlocalStorage("ls_pageList", selectedItem);
    }

</script>


<script>
    $("#btn_Edit").bind("click", function () {
        getSerializedSelectedRows('edit');
    });

    $("#btn_View").bind("click", function () {
        getSerializedSelectedRows('view');
    });

    $("#btn_new").bind("click", function () {
        btn_onClick('Create');
        location.href = "../BonusPaymentAdvice/BonusPaymentAdviceForm";
    });

    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage("ls_pageList") != undefined) {
                var items = getlocalStorage("ls_pageList");
                if (items.length == 0) {
                    kendoAlert("Please select records");
                }
                else {
                    if (mode == "edit") {
                        btn_onClick('Edit');
                        location.href = "../BonusPaymentAdvice/BonusPaymentAdviceForm";
                    }
                    else if (mode == "view") {
                        btn_onClick('View');
                        location.href = "../BonusPaymentAdvice/BonusPaymentAdviceForm";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }
</script>

<script>
    function generate_BonusPayment_list(res) {
        try{
        if (res != null) {
            var data = changedataType(res);
            listgrid(data);
        }
        else {
            listgrid([]);
        }
        }
        catch (err) {            
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


        function listRefresh() {
            try{
        setlocalStorage('flt_condition', "");
        listpageloadfetch();
            }
            catch (err) {            
                javascript_log4j_root(arguments.callee.name, err);
            }
        }


</script>


