
@{
    ViewBag.Form = "Refund Rejected Applications";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";
}

<form id="Refund_form" class="form-horizontal">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="row" style="padding-bottom:15px">

                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="cmb_refund" class="col-sm-4 control-label required">Refund Status:</label>
                        <div class="col-sm-7">
                            <input id="cmb_refund" name="In_refund_status" data-role="filtercombo" style="width:100%" />
                        </div>
                    </div>
                </div>

                <div class="col-xs-6">
                    <div class="form-group">
                        <label for="txtValidity" class=" col-sm-4 control-label ">Refund Date:</label>
                        <div class=" col-sm-4">
                            <input class="cusDate" data-role='datepicker' id="txtValidity" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="In_refund_date" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                        <div class=" col-sm-2">
                            <input type="checkbox" id="apply_all"> Apply to all
                        </div>
                        <button title="" data-placement="top" data-toggle="tooltip" class="btn btn-info" type="button" data-original-title="Refresh" onclick="listLoad()"> <span class="glyphicon glyphicon-refresh"></span></button>

                    </div>
                </div>

            </div>
            <div class="col-xs-12">
                <div>
                    <input type="hidden" id="status_code" />
                </div>
            </div>
            <div class="col-xs-12">
                <div id="grid_Drop_list">
                </div>
            </div>

        </div>
    </div>

</form>
<script src="~/API_Scripts/retrieveShareRefund_Model.js"></script>
<script src="~/API_Scripts/Share_App_retrieveShareRefund_APIClient.js"></script>
<script src="~/API_Scripts/Share_App_saveShareRefund_APIClient.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/API_Scripts/saveShareRefund_Model.js"></script>
<script src="~/API_Scripts/Refund.js"></script>
<script>
    $(document).ready(function () {
        master_userRoleNew2();
        kendodate_format();
        var data = [];
        gridFilter(data);
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#Refund_form");
        kendo.init(container);
        container.kendoValidator({
            rules: {
                checkdate: function (input) {
                    if (input.attr("data-role") == "datepicker") {
                        var res = isDate(input.val());
                        return res;
                    }
                    else {
                        return true;
                    }
                }
            }
        });
        load_master_code();
        Screen_Id = "SHRREF";
        permission = sec_Permission(Screen_Id);

        var map_in = "";
        $("#cmb_refund").empty();
        map_in = grid_comboScreen_mastercodes("QCD_SHA_REFUND_STAT");
        filter_combobox("cmb_refund", map_in);

        $("#RIform").hide();
        $("#FPOform").hide();
        $("#txtValidity").kendoDatePicker({
            max: new Date(), // sets max date to Jan 1st, 2013
            format: "dd/MM/yyyy"
        });
    });
</script>
<script>
    function load_master_code() {
        var data = {};
        data.screen_Id = "SHRREF";
        var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
    }


    $(function () {
        $('#cmb_refund').change(function () {
            var opt = $(this).val();
            if (opt == 'QCD_SHA_REFUND_PEND') {
                $('#divUserRole3 #btnnew').attr("disabled", false);
                $('#apply_all').removeAttr("disabled");
                listLoad();

            } else {
                // $('#divUserRole3 #btnnew').hide();
                $('#divUserRole3 #btnnew').attr("disabled", true);
                $('#apply_all').attr("checked", false);
                $('#apply_all').attr("disabled", true);
                listLoad();

            }
        });
    });

</script>
<script>
    function gridFilter(data) {
        try {
            $("#grid_Drop_list").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_shareapp_date: { type: "string", editable: false },
                                In_shareapp_no: { type: "string", editable: false },
                                In_farmer_name: { type: "string", editable: false },
                                In_applied_shares: { type: "string", editable: false },
                                In_rejected_shares: { type: "string", editable: false },
                                In_payment_mode: { type: "string" },
                                In_payment_mode_desc: { type: "string" },
                                In_refund_amount: { type: "string", editable: false },
                                In_payment_ref_no: { type: "string", editable: true },
                                In_status_desc: { type: "string", editable: true },
                                In_refund_date: { type: "date", editable: true },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },

                height: 400,
                groupable: false,
                edit: OnEdit,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {

                        field: "In_shareapp_rowid",
                        title: "shareapp_rowid",
                        hidden: true

                    },
                    {
                        field: "In_refund_rowid",
                        title: "refund_rowid",
                        hidden: true
                    },
                   
                    {

                        field: "In_shareapp_no",
                        title: "Application No",
                        width: 100,

                    },
                    {

                        field: "In_shareapp_date",
                        title: "Applied Date",
                        width: 100,

                    },
                    {
                        field: "In_member_name",
                        title: "member_name",
                        hidden: true
                    },
                    {

                        field: "In_farmer_name",
                        title: "Applicant Name",
                        width: 100,

                    },

                    {
                        field: "In_applied_shares",
                        title: "Shares Applied",
                        width: 100,

                    },

                    {
                        field: "In_rejected_shares",
                        title: "Shares Rejected",
                        width: 100,

                    },
                    {
                        field: "In_payment_mode_desc",
                        title: "Refund Mode",
                        editor: function (container, options) {
                            combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_payment_mode", "grid_Drop_list")
                        },
                        width: 100,

                    },
                    {
                        field: "In_payment_mode",
                        title: "payment_mode",
                        hidden: true
                    },
                    {
                        field: "In_refund_date",
                        title: "Refund Date",
                        width: 100,
                        format: "{0:dd/MM/yyyy}",
                        editor: date_editor


                    },

                    {
                        field: "In_refund_amount",
                        title: "Refund Amount",
                        width: 100,

                    },
                    {
                        field: "In_payment_ref_no",
                        title: "Bank Reference No",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            numeric_editor(container, options.field, '50', '0');
                        }
                    },
                    
                {
                    field: "In_status_code",
                    title: "status_desc",
                    hidden: true
                },
                {
                    field: "In_status_desc",
                    title: "Refund Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_status_code", "grid_Drop_list")
                    },
                    width: 100

                },

                {
                    field: "In_mode_flag",
                    title: "Mode",
                    hidden: true
                },
                {
                    field: "In_row_timestamp",
                    title: "row_timestamp",
                    hidden: true
                }],
                editable: true,
            });
    }
        catch (err) {
        alert(err);
    }
    }
    load_master_code();
    In_status_desc_list = grid_comboScreen_mastercodes("QCD_SHA_REFUND_STAT");
    In_payment_mode_desc_list = grid_comboScreen_mastercodes("QCD_PAYMENT_MODE");
    function OnEdit(e) {
        setDefaultValues(e);
        e.container.find("input[name='In_refund_date']").kendoDatePicker({
            max: new Date(), // sets max date to Jan 1st, 2013
            format: "dd/MM/yyyy"
        });
    }

</script>

<script>
    function GridValidation() {
        var grid_val = JSON.stringify($("#grid_Drop_list").data().kendoGrid._data);
        var Bind = {};
        Bind = grid_val;
        var result = JSON.parse(Bind);
        if (result.length == 0) {
            kendoAlert("Atleast one record needs to be entered");
            return false;
        }
        var datecount = 0;
        var refcount = 0;
        var Nval = 0;

        $.each(result, function (index, value) {
            if (result[index].In_status_desc == "Refund Complete") {

                if ((result[index].In_refund_date == null) && (result[index].In_payment_ref_no == "")) {
                    datecount++;
                    refcount++;
                }
                else if ((result[index].In_refund_date != "") && (result[index].In_payment_ref_no == "")) {
                    refcount++;
                }
                else if ((result[index].In_refund_date == null) && (result[index].In_payment_ref_no != "")) {
                    datecount++;
                }
            }

            else {
                Nval++;
            }

        });
        if (datecount > 0) {
            kendoAlert("Refund Date Cannot be Empty");
        }
        if (refcount > 0) {
            kendoAlert("Bank Ref.no Cannot be Empty");
        }
        if (datecount + refcount > 0) {
            return false;
        }
        if (Nval == result.length) {
            kendoAlert("Change the Refund Status");
            return false;
        }
        else if (datecount + refcount == 0) {
            return true;
        }
    }

    function save() {
        debugger;
        if (GridValidation()) {
            if ($("#txtMode").val() == "S") {
                $("#txtMode").val('I');
            }
            var formval = form_Serialize("Refund_form");
            var obj_val = JSON.parse(formval);
            var c = $('#cmb_refund');
            obj_val.In_share_certificate = c.data('kendoComboBox').value();
            obj_val.In_fpoorgn_code = getlocalStorage('org_id');
            obj_val.In_certi_date = $("#txtValidity").val();
            obj_val.In_refund_date = getFormated_StringDate(obj_val.In_refund_date);

            var grid_val = JSON.stringify($("#grid_Drop_list").data().kendoGrid._data);

            var Bind = {};

            Bind = grid_val;
            var result = JSON.parse(Bind);
            if (result.length == 0) {
                kendoAlert("Atleast one record needs to be entered");
                return false;
            }
            $.each(result, function (index, value) {

                if (result[index].In_refund_date == null) {
                    var d1 = new Date();
                    var date1 = kendo.parseDate(d1);
                    value = kendo.toString(date1, "MM/dd/yyyy");
                    result[index].In_refund_date = value
                }
                else {

                    var d = value.In_refund_date;
                    var date = kendo.parseDate(d);
                    value = kendo.toString(date, "MM/dd/yyyy");
                    result[index].In_refund_date = value;

                }

                var mmode = result[index].In_mode_flag;
                if (mmode == "S") {
                    result[index].In_mode_flag = "I";
                }
            });
            var obj_grid_val = result;
            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            data.context.Detail = obj_grid_val;
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
                url: "/Refund/RefundSave",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                   // var Res = JSON.parse(response);
                    if (response.context != null) {
                        kendoAlert("Refunds saved successfully");
                        get_Refund_details();
                    }
                    else {
                        kendoAlert(Res.ApplicationException.errorDescription);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }
        else {
            return false;
        }
    }



    function listLoad() {
        var mandatory_check = true;

        var grid_validate_msg = "";

        if ($('#cmb_refund').data("kendoComboBox").value() == "") {
            grid_validate_msg += "Refund Status cannot be blank <br>";
            mandatory_check = false;
        }

        if (mandatory_check == false) {
            kendoAlert(grid_validate_msg);
            return false;
        }
        var formval = form_Serialize("Refund_form");
        var obj_val = JSON.parse(formval);
        if (obj_val != undefined) {
            var org_id = getlocalStorage('org_id');
            obj_val.fpoorgn_code = org_id;

            obj_val.In_refund_date = $("#txtValidity").val();
            if (obj_val.hasOwnProperty('In_refund_date')) {
                if (obj_val.In_refund_date != '')
                    obj_val.In_refund_date = getFormated_StringDate(obj_val.In_refund_date);
                else
                    obj_val.In_refund_date = "0";

            }

            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, In_refund_status: Context.Header.In_refund_status, In_fpoorgn_code: Context.Header.fpoorgn_code, In_refund_date: Context.Header.In_refund_date }),
                url: "/Refund/Refundfetch",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_Refund_detail(response.context.Detail);
                    }
                    else {
                        generate_Refund_detail();
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }

        return false;
    }

    function generate_Refund_detail(res) {
        if ($("#txtValidity").val() != "") {
            var date = $("#txtValidity").val();
            var code = date.split("/");
            var applydate = code[1] + '/' + code[0] + '/' + code[2];
        }
        if (res != null) {
            if ($('#apply_all').is(':checked')) {
                if (applydate != "" && applydate != undefined) {

                    //var grid_val = JSON.stringify($("#grid_Drop_list").data().kendoGrid._data);
                    //var Bind = {};
                    //Bind = grid_val;
                    //var result = JSON.parse(Bind);
                    var result = changedataType(res);
                    $.each(result, function (index, value) {

                        var date = kendo.parseDate(applydate);
                        value = kendo.toString(date, "MM/dd/yyyy");
                        result[index].In_refund_date = value;
                    });
                    if (result.length == 0) {
                        var data = changedataType(res);
                        gridFilter(data);
                    }
                    else {
                        gridFilter(result);
                    }
                }

                else {

                    var data = changedataType(res);
                    $.each(data, function (index, value) {
                        debugger;
                        var d = value.In_refund_date;
                        var date = kendo.parseDate(d);
                        value = kendo.toString(date, "MM/dd/yyyy");
                        data[index].In_refund_date = value;
                    });
                    gridFilter(data);
                }

            }
            else {
                var data = changedataType(res);
                $.each(data, function (index, value) {
                    debugger;
                    var d = value.In_refund_date;
                    var date = kendo.parseDate(d);
                    value = kendo.toString(date, "MM/dd/yyyy");
                    data[index].In_refund_date = value;
                });
                gridFilter(data);
            }
        }
        else {
            gridFilter([]);
        }

    }

    function get_Refund_details() {
        try {

            listLoad();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>
<script>
    $('#apply_all').click(function () {
        if ($(this).is(':checked')) {
            if ($("#txtValidity").val() != "") {
                var date = $("#txtValidity").val();
                var code = date.split("/");
                var applydate = code[1] + '/' + code[0] + '/' + code[2];
            }

            if (applydate != "" && applydate != undefined) {

                var grid_val = JSON.stringify($("#grid_Drop_list").data().kendoGrid._data);
                var Bind = {};
                Bind = grid_val;
                var res = JSON.parse(Bind);
                var result = changedataType(res);
                $.each(result, function (index, value) {

                    var date = kendo.parseDate(applydate);
                    value = kendo.toString(date, "MM/dd/yyyy");
                    result[index].In_refund_date = value;
                });
                if (result.length == 0) {
                    var data = changedataType(res);
                    gridFilter(data);
                }
                else {
                    gridFilter(result);
                }
            }

            else {

                var data = changedataType(res);
                $.each(data, function (index, value) {

                    var d1 = value.refund_date;
                    var date = kendo.parseDate(d1);
                    value = kendo.toString(date, "MM/dd/yyyy");
                    data[index].In_refund_date = value;
                });
                gridFilter(data);
            }

        }
    });
</script>
<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>