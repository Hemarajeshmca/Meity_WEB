@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
</head>
<body>
    <form class="form-horizontal" id="frm_invoice" data-role="validator" novalidate="novalidate">
        <div class="modal-header">
            @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>*@
            <h4 class="modal-title">Payment Collection</h4>
        </div>
        <div class="modal-header" style="height:49px">
            <div class="col-sm-12" style="margin-top:-7px">
                <div class="form-group" style="padding-bottom:10px">
                    <div class="col-sm-3">
                        <button type="button" class="btn btn-sm btn-primary" id="btnsave" onclick="fetch_Invoice_payment_details()" style="width:85px">
                            View
                        </button>
                        <button type="button" class="btn btn-sm btn-primary" id="btnClose" onclick=closeModal(); style="width:85px">
                            Close
                        </button>
                    </div>
                    <div class="col-sm-10">
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-body" style="height:500px">
            <div class="row" style="padding-bottom:15px;padding-left:20px">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="txtProc_amt" class="col-sm-4 control-label ">Invoice Amount</label>
                            <div class="col-sm-6">
                                <input type="text" id="txtProc_amt" class="form-control" maxlength="50" disabled>
                                <input type="hidden" id="hdn_procrowid">
                                <input type="hidden" id="hdn_procno">
                                <input type="hidden" id="hdn_procdate">
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="txtbal_amt" class="col-sm-4 control-label ">Balance Amount</label>
                            <div class="col-sm-6">
                                <input type="text" id="txtbal_amt" class="form-control" name="In_balance_amount" maxlength="50" disabled>
                                <input type="hidden" id="hdnbal_amt" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="cmb_pay" class="col-sm-4 control-label ">Paymode</label>
                            <div class="col-sm-6">
                                <input id="cmb_pay" style="width: 100%" name="In_paymode_code">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="txtRef_no" class="col-sm-4 control-label ">Reference No</label>
                            <div class="col-sm-6">
                                <input type="text" id="txtRef_no" name="In_ref_no" class="form-control" maxlength="50">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="txtPay_date" class="col-sm-4 control-label ">Payment Date</label>
                            <div class=" col-sm-6">
                                <input class="cusDate" type="date" data-role='datepicker' onkeypress="return date_validate(event)" id="txtPay_date" data-checkdate-msg="Enter Valid Date" name="In_payment_date" style="width:100%" />
                                <span data-for='valid' class='k-invalid-msg'></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="txtpay_amt" class="col-sm-4 control-label ">Payment Amount</label>
                            <div class="col-sm-6">
                                <input type="text" id="txtpay_amt" name="In_payment_amount" class="form-control" maxlength="50">
                                <input type="hidden" id="hdn_status_code" name="In_status_code" value="A">
                                <input type="hidden" id="hdn_row_timestamp" name="In_row_timestamp">
                                <input type="hidden" id="hdn_mode_flag" name="In_modeflag" value="I">
                                <input type="hidden" id="hdn_proc" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group" style="padding-bottom:20px">
                    <div class="col-sm-12">
                        <button type="button" class="btn btn-sm btn-primary" id="btnsave" onclick="mandatory()" style="width:85px;margin-left:330px">
                            Save
                        </button>
                        <button type="button" class="btn btn-sm btn-primary" id="btnClose" onclick=closeModal(); style="width:85px;margin-left:10px">
                            Cancel
                        </button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-11">
                        <div id="grid_Invoice_pay">
                        </div>
                    </div>
                </div>
            </div>

        </div>


    </form>
</body>
</html>
<style>
    .breadcrumb > li + li:before {
        color: #E6E6E6;
    }
</style>
<script src="~/API_Scripts/PAWHS_getRaiseInvoice_Model.js"></script>
<script src="~/API_Scripts/PAWHS_getRaiseInvoiceList_Model.js"></script>
<script src="~/API_Scripts/PAWHS_saveRaiseInvoice_Model.js"></script>
<script src="~/API_Scripts/PAWHS_getPaymentCollection_Model.js"></script>
<script src="~/API_Scripts/PAWHS_savePaymentCollection_Model.js"></script>
<script src="~/API_Scripts/Raise_Invoice_PAWHS_getPaymentCollection_APIClient.js"></script>
<script src="~/API_Scripts/Raise_Invoice_PAWHS_getRaiseInvoice_APIClient.js"></script>
<script src="~/API_Scripts/Raise_Invoice_PAWHS_getRaiseInvoiceList_APIClient.js"></script>
<script src="~/API_Scripts/Raise_Invoice_PAWHS_savePaymentCollection_APIClient.js"></script>
<script src="~/API_Scripts/Raise_Invoice_PAWHS_saveRaiseInvoice_APIClient.js"></script>
<script src="~/API_Scripts/PAWHS_raise_getPaymentCollection_Model.js"></script>
<script src="~/API_Scripts/PAWHS_raise_savePaymentCollection_Model.js"></script>
<script src="~/API_Scripts/RaiseInvoice.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>

<script>
    $(document).ready(function () {
        debugger;
        load_master_code();
        kendodate_format();
        $('#WhsRecpt').on('show.bs.modal', function (e) {
            gridInvoiceHistory([]);
        });

        $('#WhsRecpt').on('loaded.bs.modal', function (e) {
            gridInvoiceHistory([]);
        });
        $('#WhsRecpt').on('hidden.bs.modal', function () {
            $('#invoice_payment').removeData();
        });

        var combo_data1 = "";
        $("#cmb_pay").empty();
        combo_data1 = grid_comboScreen_mastercodes("QCD_PAWHS_PAYMODE");
        filter_combobox("cmb_pay", combo_data1);

        setlocalStorage("process", "INVOICE");

        var invoice_id = getlocalStorage('procrowid');
        $("#hdn_procrowid").val(invoice_id);
        var proc = getlocalStorage('process');
        $("#hdn_proc").val(proc);

        //if (invoice_id == '' || invoice_id == undefined) {
        //    $('#invoice_payment').modal("hide");
        //    kendoAlert('Please Save the Invoice Details');
        //}

        $('#txtpay_amt').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
               ((event.which < 48 || event.which > 57) &&
               (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if (text.indexOf('.') != -1) {
                if ((text.indexOf('.') != -1) &&
               (text.substring(text.indexOf('.')).length > 2) &&
               (event.which != 0 && event.which != 8) &&
               ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }
            }
            else {
                if ($this.val().length > 17) {
                    if (event.which != 46) {
                        event.preventDefault();
                    }
                }
            }

        });
        $('#txtpay_amt').bind("paste", function (e) {
            var text = e.originalEvent.clipboardData.getData('Text');
            if ($.isNumeric(text)) {
                if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                    e.preventDefault();
                    $(this).val(text.substring(0, text.indexOf('.') + 3));
                }
            }
            else {
                e.preventDefault();
            }
        })

        $("#txtpay_amt").change(function () { balamtchk(); });
        fetch_Invoice_payment_details();
    });
    function fetch_Invoice_payment_details() {
        debugger;
        var data = getlocalStorage("ls_pageList", "invoice_form");
        var formval = form_Serialize("invoice_form");
        var obj_val = JSON.parse(formval);
        obj_val.whs_receipt_rowid = $("#hdn_procrowid").val();
        obj_val.IOU_invoice_rowid = $("#hdn_procrowid").val();
        var data_fetch = {};
        data_fetch.context = WebAPIProxy.getContext();
        data_fetch.context.Header = obj_val;
        var Context = data_fetch.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, IOU_invoice_rowid: Context.Header.IOU_invoice_rowid }),
            url: "/PAWHSRaiseInvoice/PaymentCollection",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_Invoice_payment_header(response.context.Header)

                }
                if (response.context.Detail != null) {
                    generate_Invoice_payment_Detail(response.context.Detail)
                }
              
                if (response.ApplicationException != null) {
                    kendoAlert(response.ApplicationException.errorDescription);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
        //retrieve_PaymentCollection(data_fetch);
        //$('#txt_grn').val(obj_val.grn_invoice_no);
        var grn = getlocalStorage("grn")
        $('#txt_grn').val(grn);
    }
    function generate_Invoice_payment_header(res) {
        try {
            debugger;
            if (res != null) {

                $("#amount").removeAttr("readonly");
                $("#balance_amount").removeAttr("readonly");
                $("#hdn_procno").val(res.In_invoice_no);
                $("#txt_payment_amount").val(res.In_payment_amount);
                $("#txtProc_amt").val(res.In_amount);
                $("#txtbal_amt").val(res.In_balance_amount);
                $('#cmb_pay').data("kendoComboBox").value(res.In_paymode_desc);
                $('#ref_no').val(res.In_ref_no);
                $('#whs_receipt_rowid').val(res.produce_agg_rowid);
                $("#hdnbal_amt").val(res.In_balance_amount);

                var formval = form_Serialize("frm_payment");
                var obj_val = JSON.parse(formval);
                setlocalStorage("payment_info", obj_val);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_Invoice_payment_Detail(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                gridInvoiceHistory(data);
                //$("#hdn_mode_flag").val("S");
            }
            else {
                gridInvoiceHistory([]);
                //$("#hdn_mode_flag").val("I");
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function balamtchk() {
        try {
            debugger;
            var pay_amt = $('#txtpay_amt').val() != '' ? parseFloat($('#txtpay_amt').val()) : 0;
            var inv_amt = $('#txtProc_amt').val() != '' ? parseFloat($('#txtProc_amt').val()) : 0;
            var curbal_amt = $('#txtbal_amt').val() != '' ? parseFloat($('#txtbal_amt').val()) : 0;
            var orgbal_amt = $('#hdnbal_amt').val() != '' ? parseFloat($('#hdnbal_amt').val()) : 0;
            var balance_limit = (orgbal_amt - pay_amt).toFixed(2);
            var balance_amt = (orgbal_amt - pay_amt).toFixed(2);

            var grid_validate_msg = "";
            if (balance_limit < 0) {
                $('#txtbal_amt').val(orgbal_amt);
                $('#txtpay_amt').val(0);
                grid_validate_msg = "Payment amount is greater than Balance amount";
                kendoAlert(grid_validate_msg);
            }
            else {
                $('#txtbal_amt').val(balance_amt);
            }

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function closeModal() {
        debugger;
        var invoice_amt = $('#txtProc_amt').val();
        var paid_amt = $('#txtpay_amt').val()!= "" ? $('#txtpay_amt').val() : 0;
        
        //var grid = $("#grid_Invoice_pay").data("kendoGrid");
        //var gridData = grid.dataSource.view();
        //var paid_amt = 0;
        //for (var i = 0; i < gridData.length; i++) {
        //    if (gridData[i].paid_amount != '') {
        //        paid_amt += gridData[i].paid_amount != undefined ? parseFloat(gridData[i].paid_amount) : parseFloat(0);
        //    }
        //}
        //if ($("#hdn_proc").val() == "INVOICE" || $("#hdn_proc").val() == "ICDCI") {
        if ($("#hdn_proc").val() == "INVOICE") {
            if (parseFloat(invoice_amt) > parseFloat(paid_amt))
            {
                if (parseFloat($('#txtbal_amt').val()) != 0) {
                    kendoAlert("Please complete the payment updation");
                    return false;
                }
                else {
                    $('#WhsRecpt').modal("hide");
                }
            }
            else {
                $('#WhsRecpt').modal("hide");
            }
        }
        else {
            $('#WhsRecpt').modal("hide");
        }
    }

</script>
<script>
    //var data = [];
    function gridInvoiceHistory(data) {
        try {
            $("#grid_Invoice_pay").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                invoice_amount: { type: "string", editable: false },
                                balance_amount: { type: "string", editable: false },
                                Paymode: { type: "string", editable: false },
                                Reference_No: { type: "string", editable: false },
                                Payment_Date: { type: "string", editable: false },
                                payment_amount: { type: "string", editable: false },
                                payment_mode_desc: { type: "string", editable: false },
                                balance_amount: { type: "string", editable: false },
                                ref_no: { type: "string", editable: false },
                                payment_date: { type: "string", editable: false },
                                paid_amount: { type: "string", editable: false },
                            }
                        },
                        parse: function (data) {
                            return $.map(data, function (item) {
                                if (item.balance_amount == undefined || item.balance_amount == '') {
                                    item.balance_amount = (parseFloat(item.payment_amount) - parseFloat(item.paid_amount)).toFixed(2);
                                }
                                return item;
                            });
                        }
                    }
                },

                height: 250,
                groupable: false,


                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: "In_paymentcollection_rowid",
                        title: "paymentcollection_rowid",
                        hidden: true
                    },
                   {
                       field: "In_payment_amount",
                       title: "Invoice Amount",
                       width: 80

                   },
                   {
                       field: "In_payment_no",
                       title: "payment_no",
                       hidden: true

                   },
                {
                    field: "In_payment_type",
                    title: "payment_type",
                    hidden: true

                },
                {
                    field: "In_payment_type_desc",
                    title: "payment_type_desc",
                    hidden: true

                },
                 {
                     field: "In_payment_mode",
                     title: "Paymode",
                     hidden: true

                 },
                 {
                     field: "In_payment_mode_desc",
                     title: "Payment Mode",
                     width: 80

                 },
                 {
                     field: "In_balance_amount",
                     title: "Balance Amount",
                     width: 80

                 },
                  {
                      field: "In_ref_no",
                      title: "Reference No",
                      width: 80

                  },
                  {
                      field: "In_payment_date",
                      title: "Payment Date",
                      width: 80
                  },
                  {
                      field: "In_paid_amount",
                      title: "Paid Amount",
                      width: 80
                  },
                  {
                      field: "In_process_status",
                      title: "process_status",
                      width: 1,
                      hidden: true,
                  },
                  {
                      field: "In_process_status_desc",
                      title: "process_status_desc",
                      width: 1,
                      hidden: true,
                  },
                   {
                       field: "In_mode_flag",
                       title: "Mode",
                       hidden: true
                   }
                ],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }
</script>
<script>

    function mandatory() {
        try {
            var mandatory_check = true;

            var grid_validate_msg = "";

            if ($("#txtProc_amt").val() == "" || $("#txtProc_amt").val() == undefined) {
                if ($("#hdn_proc").val() == "INVOICE") {
                    grid_validate_msg += "Invoice amount cannot be blank <br>";
                }
                if ($("#hdn_proc").val() == "ICDCI") {
                    grid_validate_msg += "Credit Issue amount cannot be blank <br>";
                }
                mandatory_check = false;
            }
            if ($("#txtbal_amt").val() == "" || $("#txtbal_amt").val() == undefined) {
                grid_validate_msg += "Balance amount cannot be blank <br>";
                mandatory_check = false;
            }
           
            if ($('#cmb_pay').data("kendoComboBox").value() == "" || $('#cmb_pay').data("kendoComboBox").value() == undefined) {
                grid_validate_msg += "Payment mode cannot be blank <br>";
                mandatory_check = false;
            }
            if ($("#txtPay_date").val() == "" || $("#txtPay_date").val() == undefined) {
                grid_validate_msg += "Payment cannot be blank <br>";
                mandatory_check = false;
            }
            if ($("#txtpay_amt").val() == "" || $("#txtpay_amt").val() == undefined) {
                grid_validate_msg += "Payment amount cannot be blank <br>";
                mandatory_check = false;
            }

            if (mandatory_check == false) {
                kendoAlert(grid_validate_msg);
                return false;
            }
            else {
                debugger;
                if ((parseFloat($('#txtbal_amt').val()) != 0) || (parseFloat($('#txtpay_amt').val()) != 0)) {              
                    return save();
                }
                else {
                    kendoAlert("Your Payment Completed!!!! ");
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    
   

    function save() {
        debugger;
        $("#txtbal_amt").prop("disabled", false).removeClass("k-state-disabled");
        if ($("#hdn_mode_flag").val() == "S") {
            $("#hdn_mode_flag").val('U');
        }
        if ($("#hdn_procrowid").val() == "") {
            $("#hdn_procrowid").val('0');
        }
        var formval = form_Serialize("frm_invoice");
        var obj_val = JSON.parse(formval);
        
        if ($("#hdn_proc").val() == "INVOICE") {
            obj_val.In_invoice_rowid = $("#hdn_procrowid").val();
            obj_val.In_invoice_no = $("#hdn_procno").val();
            obj_val.invoice_date = $("#hdn_procdate").val();
            obj_val.invoice_amount = $("#txtProc_amt").val();
        }

        obj_val.In_invoice_rowid = 0;
        obj_val.In_amount = 0;

        if (obj_val.hasOwnProperty('In_payment_date')) {
            if (obj_val.In_payment_date != '' && obj_val.In_payment_date != undefined)
                obj_val.In_payment_date = getFormated_StringDate(obj_val.In_payment_date);
        }
        var rowtime_date = new Date();

        if (obj_val.In_row_timestamp == undefined || obj_val.In_row_timestamp == "") {
            obj_val.In_row_timestamp = rowtime_date;
        }
        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Header = obj_val;
        var Context = data.context;

        $.ajax({
            type: "POST",
            data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, Header: Context.Header }),
            url: "/PAWHSRaiseInvoice/SavePaymentCollection",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                var Res = JSON.parse(response);
                if (Res != null) {
                    var msg = Res.ApplicationException;
                    //retrive_SingleFetch_Details(Res.context);
                    if (Res.ApplicationException == null || Res.ApplicationException == "") {
                        get_Invoicepaymen_details(Res.context.Header)
                        kendoAlert("Payment Details Saved Successfully");
                    }
                    else {
                        kendoAlert(Res.ApplicationException.errorDescription);
                    }

                }

            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
            //SaveraiseinvoicePayment(data);
        //fetch_Invoice_payment_details();
     
        
            $("#txtbal_amt").prop("disabled", true).addClass("k-state-disabled");
            $("#cmb_pay").data("kendoComboBox").value("");
            $("#txtRef_no").val("");
            $("#txtPay_date").val("");
            $("#txtpay_amt").val("");
    }

    function get_Invoicepaymen_details(res) {
        var formval = form_Serialize("frm_invoice");
        var obj_val = JSON.parse(formval);
        if (obj_val != undefined) {
            //obj_val.invoice_rowid = res.invoice_rowid;
            obj_val.IOU_invoice_rowid = $("#hdn_procrowid").val();
            var data_fetch = {};
            data_fetch.context = WebAPIProxy.getContext();
            data_fetch.context.Header = obj_val;
            var Context = data_fetch.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, IOU_invoice_rowid: Context.Header.IOU_invoice_rowid }),
                url: "/PAWHSRaiseInvoice/PaymentCollection",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_Invoice_payment_header(response.context.Header)

                    }
                    if (response.context.Detail != null) {
                        generate_Invoice_payment_Detail(response.context.Detail)
                    }

                    if (response.ApplicationException != null) {
                        kendoAlert(response.ApplicationException.errorDescription);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
            //retrieve_PaymentCollection(data_fetch);
        }
    }

   
</script>



