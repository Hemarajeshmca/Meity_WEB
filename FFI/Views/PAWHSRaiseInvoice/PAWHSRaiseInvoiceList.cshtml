@{
    ViewBag.List = "Raise Invoice";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}
<form id="Raise_Invoice" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="row">
        <div class="col-xs-12">
            <div id="gd_Raiseinvoice">
                <div id="Raiseinvoice_grid"></div>
            </div>
        </div>
    </div>
    </form>
    <script src="~/API_Scripts/PAWHS_getRaiseInvoice_Model.js"></script>
    <script src="~/API_Scripts/PAWHS_getRaiseInvoiceList_Model.js"></script>
    <script src="~/API_Scripts/PAWHS_saveRaiseInvoice_Model.js"></script>
    <script src="~/API_Scripts/PAWHS_getPaymentCollection_Model.js"></script>
    <script src="~/API_Scripts/PAWHS_savePaymentCollection_Model.js"></script>
    <script src="~/API_Scripts/Raise_Invoice_PAWHS_getPaymentCollection_APIClient.js"></script>
    <script src="~/API_Scripts/Raise_Invoice_PAWHS_getRaiseInvoice_APIClient.js"></script>
    <script src="~/API_Scripts/Raise_Invoice_PAWHS_getRaiseInvoiceList_APIClient.js"></script>
    <script src="~/API_Scripts/Raise_Invoice_PAWHS_savePaymentCollection_APIClient.js"></script>
    <script src="~/API_Scripts/Raise_Invoice_PAWHS_saveRaiseInvoice_APIClient.js"></script>
    <script src="~/API_Scripts/RaiseInvoice.js"></script>
    <script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
    <script src="~/CommonScripts/common.js"></script>
    <script src="~/CommonScripts/tamil.js"></script>
    <script src="~/CommonScripts/HelpFile.js"></script>
<script>
    var menuId = "";
    var permission = "";
    $(document).ready(function () {
        $(".adv_filter").attr("hdrtitle", "Raise Invoice List");
        $(".adv_filter").attr("fltid", "RaiseInvoice");
        $(".Export").attr("hdrtitle", "Raise Invoice List");
        $(".Export").attr("SubTreeId", "RAISEINV");
        list_grid_id = "Raiseinvoice_grid";
        listpageloadfetch();
        
        Screen_Id = "RAISEINV";
        permission = sec_Permission(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage("ls_pageList", "");
        filterhover();
    });


</script>

    <script>
        function listpageloadfetch() {
            try {
                var formval = form_Serialize("Raise_Invoice");
                var obj_val = JSON.parse(formval);
                obj_val.FilterBy_Option = "ALL";
                obj_val.FilterBy_Code = ".";
                if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
                    obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
                }
                else {
                    obj_val.FilterBy_FromValue = ".";
                }
                obj_val.FilterBy_ToValue = ".";

                var data = {};
                data.context = WebAPIProxy.getContext();;
                data.context.Filter = obj_val;
                var Context = data.context;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Filter: Context.Filter }),
                    url: "/PAWHSRaiseInvoice/ServiceList",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        if (response.context != null) {
                            generate_RaiseInvoice_list(response.context.List)
                            //listgrid(response.context.List);
                            //SetPager(response.context.Filter.out_record_count)
                        }
                        else {
                            RaiseInvoice([]);
                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });
                //retrieve_RaiseInvoice_list(data);
                //setlocalStorage('flt_condition', "");
            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }

        var status_Priority = [];
        function RaiseInvoice(data) {
            try {
                $.each(data, function (index, value) {
                    var flag = false;
                    $.each(status_Priority, function (sindex, svalue) {
                        if (svalue == value.status_desc) {
                            flag = true;
                        }
                    });
                    if (flag == false) {
                        status_Priority.push(value.status_desc);
                    }
                });

            $("#Raiseinvoice_grid").kendoGrid(
                    {
                        dataSource: {
                            data: data,
                            pageSize: 20,
                            change: function (e) {
                                setTimeout(function () {
                                    var gd = $("#Raiseinvoice_grid").data("kendoGrid");
                                    filter_row(gd);
                                    $('.k-i-close').css('display', 'none');
                                    $('button.k-button-icon').css('display', 'none');
                                    $('#Raiseinvoice_grid .k-input').prop('disabled', false);
                                    $('#Raiseinvoice_grid .k-input').prop('readonly', true);

                                }, 1);
                            },
                        },
                        toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
                        excelExport: function (e) {
                            var gd = $("#Raiseinvoice_grid").data("kendoGrid");
                            var len = gd.dataSource._data.length;
                            var chkall = $('#chkall').is(':checked');
                            var chkfilter = $('#chkfilter').is(':checked');
                            var chktemp = $('#chktemp').is(':checked');
                            var twokendobox = true;
                            gd.dataSource.pageSize(len);
                            if (e.sender.dataSource._data.length == len) {
                                twokendobox = false;
                                exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                            }
                            else {
                                exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                            }
                            gd.dataSource.pageSize('10');
                            return false;
                        },
                        //filterable: {
                        //    enabled: true,
                        //    delay: 1500,
                        //    mode: "menu, row",
                        //    height: 200,
                        //    click: function (e) {
                        //        var gd = $("#Raiseinvoice_grid").data("kendoGrid");
                        //        filter_row(gd);
                        //    }
                        //},

                    filterable: true,
                    resizable: true, 
                        filterMenuInit: function (e) {
                            var gd = $("#Raiseinvoice_grid").data("kendoGrid");
                            filter_row(gd);
                        },
                        change: selectRow,
                        height: 450,
                        sortable: true,
                        selectable: true,
                        selectable: "singl",   //  Grid Row Selection
                        pageable: {
                            refresh: false,
                            pageSizes: true,
                            buttonCount: 5
                        },
                        navigatable: true,
                        groupable: false,
                        columns: [
                             
                                {
                                field: "Out_raise_invoce_rowid",
                                    title: "raise invoce rowid",        
                                    hidden: true,
                                },
                           {
                               field: "Out_invoice_no",
                               title: "Invoice No.",
                               width: 200,

                               filterable: {
                                   extra: false,
                                   operators: {
                                       string: {
                                           contains: "Contains"
                                       }
                                   }
                               }, 
                               width:150
                           },
                             {
                                 field: "Out_invoice_date",
                                 title: "Invoice Date",
                                 width: 200,
                                 filterable: {
                                     extra: false,
                                     operators: {
                                         string: {
                                             contains: "Contains"
                                         }
                                     }
                                 },
                                 width: 150
                             },

                            {
                                field: "Out_customer_name",
                                title: "Customer Name",
                                width: 200,
                                filterable: {
                                    extra: false,
                                    operators: {
                                        string: {
                                            contains: "Contains"
                                        }
                                    }
                                },
                                width: 150
                            },
                             {
                                 field: "Out_status_code",
                                 title: "Status",
                                 hidden: true,
                                 width: 200,
                                 filterable: {
                                     extra: false,
                                     operators: {
                                         string: {
                                             contains: "Contains"
                                         }
                                     }
                                 },
                                 width: 150
                             },
                             {
                                 field: "Out_status_desc",
                                 title: "Status",               
                                 hidden: true,
                             },
                              {
                                  field: "Out_row_timestamp",
                                  title: "Status",                
                                  hidden: true,
                              },
                        ]

                    });
            $(".k-dropdown-operator").css('display', 'none');
            $("#Raiseinvoice_grid .k-input").attr('disabled', 'false');           
            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }
        function statusFilter(element) {    // Dropdown list functionality
            element.kendoDropDownList({
                dataSource: status_Priority,
                optionLabel: "--Select Value--"
            });
        }

        function selectRow() {
            try {
                var grid = $("#Raiseinvoice_grid").data("kendoGrid");
                var selectedItem = grid.dataItem(grid.select());
                setlocalStorage("ls_pageList", selectedItem);
            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }
    </script>
    <script>
        $("#btn_Edit").bind("click", function () {
            getSerializedSelectedRows('edit');
        });

        $("#btn_View").bind("click", function () {
            getSerializedSelectedRows('view');
        });

        $("#btn_new").bind("click", function () {
            btn_onClick('Create');
            location.href = "../PAWHSRaiseInvoice/RaiseInvoiceForm";
        });
        function getSerializedSelectedRows(mode) {
            try {
                if (getlocalStorage("ls_pageList") != undefined) {
                    var items = getlocalStorage("ls_pageList");
                    if (items.length == 0) {
                        kendoAlert("Please select records");
                    }

                    else {
                        if (mode == "edit") {
                            btn_onClick('Edit');
                            location.href = "../PAWHSRaiseInvoice/RaiseInvoiceForm";
                        }
                        else if (mode == "view") {
                            btn_onClick('View');
                            location.href = "../PAWHSRaiseInvoice/RaiseInvoiceForm";
                        }
                    }
                }
            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }
    </script>
   

    <script>
        function generate_RaiseInvoice_list(res) {
            try {
                if (res != null) {
                    var data = changedataType(res);
                    $("#gd_Raiseinvoice").empty();
                    $("#gd_Raiseinvoice").append("<div id='Raiseinvoice_grid'></div>");
                    RaiseInvoice(data);
                }
                else {
                    RaiseInvoice([]);
                }
            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }
        function listRefresh() {
            try {
                setlocalStorage('flt_condition', "");
                listpageloadfetch();
            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }
    </script>


