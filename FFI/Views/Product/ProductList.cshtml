@{
    ViewBag.List = "Product";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}
<form id="frm_product_master" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="row">
        <div class="col-xs-12">
            <div id="gd_product">
                <div id="product_grid"></div>
            </div>

        </div>
    </div>
</form>

<script src="~/API_Scripts/product_master_getProductList_APIClient.js"></script>
<script src="~/API_Scripts/getProductList_Model.js"></script>
<script src="~/API_Scripts/ProductMaster.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script>
    var menuId = "";
    var permission = "";
    $(document).ready(function () {
        $(".adv_filter").hide();
        //$(".adv_filter").attr("hdrtitle", "Product Master List Record");
        //$(".adv_filter").attr("fltid", "prdlist");
        $(".Export").attr("hdrtitle", "Product Master List");
        $(".Export").attr("SubTreeId", "ICDPRDT");
        list_grid_id = "product_grid";
        Screen_Id = "ICDPRDT";
        permission = sec_Permission(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage("ls_pageList", ""); listpageloadfetch();
        filterhover();


    });
</script>

<script>

    function listpageloadfetch() {
        try {
            var formval = form_Serialize("frm_product_master");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = "ALL";
            obj_val.FilterBy_Code = ".";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
                obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_FromValue = ".";
            }
            obj_val.FilterBy_ToValue = ".";

            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Filter = obj_val;
            var Context = data.context;
            $.ajax({
                type: "POST",
                url: '/Product/ProductListfetch',
                dataType: 'json',
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, FilterBy_Option: Context.Filter.FilterBy_Option, FilterBy_Code: Context.Filter.FilterBy_Code, FilterBy_FromValue: Context.Filter.FilterBy_FromValue, FilterBy_ToValue: Context.Filter.FilterBy_ToValue }),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    //var list = JSON.parse(response);
                    if (response.context.List != null) {
                        generate_productmaster_list(response.context.List);
                    }
                    else {
                        listgrid([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
            //setlocalStorage('flt_condition', "");
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var status_Priority = [];
    function ProductMasterGrid(data) {
        try {
            $.each(data, function (index, value) {
                var flag = false;
                $.each(status_Priority, function (sindex, svalue) {
                    if (svalue == value.status_desc) {
                        flag = true;
                    }
                });
                if (flag == false) {
                    status_Priority.push(value.status_desc);
                }
            });
            $("#product_grid").kendoGrid(
                {
                    dataSource: {
                        data: data,
                        pageSize: 20,
                        change: function (e) {
                            setTimeout(function () {
                                var gd = $("#product_grid").data("kendoGrid");
                                filter_row(gd);
                                $('.k-i-close').css('display', 'none');
                                $('button.k-button-icon').css('display', 'none');
                                $('#product_grid .k-input').prop('disabled', false);
                                $('#product_grid .k-input').prop('readonly', true);

                            }, 1);
                        },
                    },
                    toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
                    excelExport: function (e) {
                        debugger;
                        var gd = $("#product_grid").data("kendoGrid");
                        var len = gd.dataSource._data.length;
                        var chkall = $('#chkall').is(':checked');
                        var chkfilter = $('#chkfilter').is(':checked');
                        var chktemp = $('#chktemp').is(':checked');
                        var twokendobox = true;
                        gd.dataSource.pageSize(len);
                        if (e.sender.dataSource._data.length == len) {
                            ///// Changes delete columns and renaming the columns for excel /////
                            var test = e.sender.dataSource._data;
                            for (i = 0; i < test.length; i++) {
                                delete test[i]["Out_product_rowid"];
                                delete test[i]["Out_status_code"];
                                delete test[i]["Out_product_catg_code"];
                                delete test[i]["Out_product_subcatg_code"];
                                delete test[i]["Out_status_desc"];
                                test[i]["Product Category"] = test[i]["Out_product_catg_desc"];
                                delete test[i]["Out_product_catg_desc"];
                                test[i]["Product Sub-category"] = test[i]["Out_product_subcatg_desc"];
                                delete test[i]["Out_product_subcatg_desc"];
                                test[i]["Product Code"] = test[i]["Out_product_code"];
                                delete test[i]["Out_product_code"];
                                test[i]["Product Name"] = test[i]["Out_product_name"];
                                delete test[i]["Out_product_name"];
                                test[i]["Base Price"] = test[i]["Out_base_price"];
                                delete test[i]["Out_base_price"];
                            }
                            e.sender.dataSource._data = test;
                            /////// end //////////////////
                            twokendobox = false;
                            exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                        }
                        else {
                            exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                        }
                        $("#product_grid").data("kendoGrid").dataSource.read();
                        gd.dataSource.pageSize('20');
                        return false;
                    },
                    filterable: true,
                    resizable: true, 
                    filterMenuInit: function (e) {
                        var gd = $("#product_grid").data("kendoGrid");
                        filter_row(gd);
                    },
                    change: selectRow,
                    height: 450,
                    sortable: true,
                    selectable: true,
                    selectable: "singl",   //  Grid Row Selection
                    pageable: {
                        refresh: false,
                        pageSizes: true,
                        buttonCount: 5
                    },
                    navigatable: true,
                    groupable: false,
                    columns: [
                        {
                            field: "Out_product_rowid",
                            title: "product_rowid",
                            hidden: true,                             
                        },
                        {
                            field: "Out_product_catg_code",
                            title: "product_catg_code",
                            hidden: true,                            
                        },
                        {
                            field: "Out_ic_name",
                            title: "IC Name",
                            filterable: {
                                extra: false,
                                operators: {
                                    string: {
                                        contains: "contains"
                                    }
                                }
                            }
                        },
                        {
                            field: "Out_product_catg_desc",
                            title: "Product Category",
                            filterable: {
                                extra: false,
                                operators: {
                                    string: {
                                        contains: "contains"
                                    }
                                }
                            }
                        },
                        {
                            field: "Out_product_subcatg_code",
                            title: "Product_subcatg_code",
                            hidden: true,
                            width: 1,
                        },
                        {
                            field: "Out_product_subcatg_desc",
                            title: "Product Sub-Category",
                            filterable: {
                                extra: false,
                                operators: {
                                    string: {
                                        contains: "contains"
                                    }
                                }
                            }

                        },
                        {
                            field: "Out_product_code",
                            title: "Product Code",
                            filterable: {
                                extra: false,
                                operators: {
                                    string: {
                                        contains: "contains"
                                    }
                                }
                            }

                        },
                        {
                            field: "Out_product_name",
                            title: "Product Name",
                            filterable: {
                                extra: false,
                                operators: {
                                    string: {
                                        contains: "contains"
                                    }
                                }
                            }
                        },
                        {
                            field: "Out_product_tax_verified",
                            title: "Product Tax Verified",
                            hidden: true,   
                        },
                        {
                            field: "Out_gstrate_verified", 
                            title: "GST Rate Verified",
                            hidden: true,   
                        },
                        {
                            field: "Out_product_name",
                            title: "Product Name",
                            filterable: {
                                extra: false,
                                operators: {
                                    string: {
                                        contains: "contains"
                                    }
                                }
                            }
                        },
                        {
                            field: "Out_status_code",
                            title: "status_code",
                            hidden: true,
                        },
                        {
                            field: "Out_status_desc",
                            title: "status_desc",
                            hidden: true, 
                        },]

                });
            $(".k-dropdown-operator").css('display', 'none');
            $("#product_grid .k-input").attr('disabled', 'false');
        }

        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: "--Select Value--"
        });
    }
    function selectRow() {
        var grid = $("#product_grid").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        setlocalStorage("ls_pageList", selectedItem);
    }
</script>
<script>
    $("#btn_Edit").bind("click", function () {
        getSerializedSelectedRows('edit');
    });

    $("#btn_View").bind("click", function () {
        getSerializedSelectedRows('view');
    });

    $("#btn_new").bind("click", function () {
        btn_onClick('Create');
        location.href = "../Product/ProductForm";
    });
    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage("ls_pageList") != undefined) {
                var items = getlocalStorage("ls_pageList");
                if (items.length == 0) {
                    kendoAlert("Please select records");
                }
                else {
                    if (mode == "edit") {
                        btn_onClick('Edit');
                        location.href = "../Product/ProductForm";
                    }
                    else if (mode == "view") {
                        btn_onClick('View');
                        location.href = "../Product/ProductForm";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<script>
    function generate_productmaster_list(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                $("#gd_product").empty();
                $("#gd_product").append("<div id='product_grid'></div>");
                ProductMasterGrid(data);
            }
            else {
                ProductMasterGrid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function listRefresh() {
        try {
            setlocalStorage('flt_condition', "");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>


