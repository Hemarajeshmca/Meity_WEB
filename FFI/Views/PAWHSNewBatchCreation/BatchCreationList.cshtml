@{
    ViewBag.List = "Batch Creation List";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}
<form id="frm_NEWPAWHS_BATCHCRTList" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="row">
        <div class="col-xs-12">
            <div id="gd_FPOREG">
                <div id="BATCHCRTGrid"></div>
            </div>
        </div>
    </div>
</form>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>


<script>
    var menuId = "";
    var permission = "";
    $(document).ready(function () {
        $("#divEdit").hide();
        $("#btn_Edit").hide();
        $(".adv_filter").attr("hdrtitle", "Batch Creation List");
        $(".adv_filter").attr("fltid", "batchcreation");
        $(".Export").attr("hdrtitle", "Batch Creation List");
        $(".Export").attr("SubTreeId", "Batch Creation Listt");
        list_grid_id = "BATCHCRTGrid";
        Screen_Id = "PWNEWBATCHCRT";
        permission = sec_Permission(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage("ls_pageList", "");
        filterhover();
        listpageloadfetch()
    });
</script>

<script>
    function listpageloadfetch() {
        debugger;
        try {
            var formval = form_Serialize("frm_NEWPAWHS_BATCHCRTList");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = "ALL";
            obj_val.FilterBy_Code = ".";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
                obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_FromValue = ".";
            }
            obj_val.FilterBy_ToValue = ".";
            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Filter = obj_val;
            var Context = data.context;
            $.ajax({
                type: "POST",
                url: '/PAWHSNewBatchCreation/NewBatchCreationList',
                dataType: 'json',
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, FilterBy_Option: Context.Filter.FilterBy_Option, FilterBy_Code: Context.Filter.FilterBy_Code, FilterBy_Fromvalue: Context.Filter.FilterBy_FromValue, FilterBy_ToValue: Context.Filter.FilterBy_ToValue }),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.BatchList != null) {
                        generate_buyer_list(response.BatchList);
                    }
                    else {
                        BATCHCRTGrid([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var status_Priority = [];
    function BATCHCRTGrid(data) {
        try {
            $.each(data, function (index, value) {
                var flag = false;
                $.each(status_Priority, function (sindex, svalue) {
                    if (svalue == value.status_desc) {
                        flag = true;
                    }
                });
                if (flag == false) {
                    status_Priority.push(value.status_desc);
                }
            });
            $("#BATCHCRTGrid").kendoGrid(
                {
                    excel: {
                        fileName: "PAWHS Batch Creation.xlsx",
                        filterable: true,
                        allPages: false
                    },
                    dataSource: {
                        data: data,
                        pageSize: 20,
                        change: function (e) {
                            setTimeout(function () {
                                var gd = $("#BATCHCRTGrid").data("kendoGrid");
                                filter_row(gd);
                                $('.k-i-close').css('display', 'none');
                                $('button.k-button-icon').css('display', 'none');
                                $('#BATCHCRTGrid .k-input').prop('disabled', false);
                                $('#BATCHCRTGrid .k-input').prop('readonly', true);
                            }, 1);
                        },
                    },
                    toolbar: "<button type= 'button' id = 'Exportclick' class = 'k-grid-excel' style = 'display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
                    excelExport: function (e) {
                        debugger;

                        //Mohan Changes 07-11-2020
                        var gd = $("#BATCHCRTGrid").data("kendoGrid");
                        var gd_fi = $("#BATCHCRTGrid").data("kendoGrid").dataSource;

                        var filters = gd_fi.filter();
                        var allData = gd_fi.data();
                        var query = new kendo.data.Query(allData);
                        var data = query.filter(filters).data;
                        var data_tt = gd.dataSource.data();


                        var sheet = e.workbook.sheets[0];
                        var gridColumns = gd.columns;

                        var columnCells = [];
                        for (var c = 0; c < gridColumns.length; c++) {
                            var fieldName = gd.columns[c].hidden;
                            if (typeof (fieldName) === "undefined") {
                                var cellValue = gridColumns[c].title ? gridColumns[c].title : gridColumns[c].field;
                                columnCells.push({ value: cellValue, autoWidth: true, background: "#7a7a7a", color: "#fff" });
                            }
                        }

                        var rows = [{ cells: columnCells, type: "header" }];


                        for (var i = 0; i < data.length; i++) {
                            var rowCells = [];
                            for (var j = 0; j < gridColumns.length; j++) {

                                var fieldName = gd.columns[j].hidden;
                                if (typeof (fieldName) === "undefined") {
                                    var cellValue = data[i][gridColumns[j].field];
                                    rowCells.push({ value: cellValue });
                                }
                            }
                            rows.push({ cells: rowCells, type: "data" });
                        }

                        sheet.rows = rows;

                        return false;
                    },
                    change: selectRow,
                    height: 450,
                    sortable: true,
                    selectable: true,
                    selectable: "singl",   //  Grid Row Selection
                    pageable: {
                        refresh: false,
                        pageSizes: true,
                        buttonCount: 5
                    },
                    navigatable: true,
                    groupable: false,
                    filterable:true,
                    columns: [
                       
                        {
                            field: "Out_agg_code",
                            title: "Agg Code", 
                            hidden: true,

                        },
                        {
                            field: "Out_batch_no",
                            title: "Batch No",
                            filterable: {
                                extra: false,
                                operators: {
                                    string: {
                                        contains: "Contains"
                                    }
                                }
                            },
                            width: 110,
                        },
                        {
                            field: "Out_batch_date",
                            title: "Batch Date",
                            filterable: {
                                extra: false,
                                operators: {
                                    string: {
                                        contains: "Contains"
                                    }
                                }
                            },
                            width: 110,
                        },
                        {
                            field: "Out_buyer_name",
                            title: "Buyer Name",
                            filterable: {
                                extra: false,
                                operators: {
                                    string: {
                                        contains: "Contains"
                                    }
                                }
                            },
                            width: 120,

                        },

                        {
                            field: "Out_Vehicle_no",
                            title: "Vehicle No",
                            filterable: {
                                extra: false,
                                operators: {
                                    string: {
                                        contains: "Contains"
                                    }
                                }
                            },
                            width: 120,
                        }
                       
                    ]

                });
            $(".k-dropdown-operator").css('display', 'none');
            $("#BATCHCRTGrid .k-input").attr('disabled', 'false');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: "--Select Value--"
        });
    }
    function selectRow() {
        try {
            var grid = $("#BATCHCRTGrid").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            setlocalStorage("ls_pageList", selectedItem);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script>
    $("#btn_Edit").bind("click", function () {
        getSerializedSelectedRows('edit');
    });

    $("#btn_View").bind("click", function () {
        getSerializedSelectedRows('view');
    });

    $("#btn_new").bind("click", function () {
        btn_onClick('Create');
        location.href = "../PAWHSNewBatchCreation/BatchCreationNewV3";
    });
    function getSerializedSelectedRows(mode) {
        debugger;
        try {
            if (getlocalStorage("ls_pageList") != undefined) {
                var items = getlocalStorage("ls_pageList");
                if (items.length == 0) {
                    kendoAlert("Please select records");
                }
                else {
                    if (mode == "edit") {
                        btn_onClick('Edit');
                        location.href = "../PAWHSNewBatchCreation/BatchCreationNewV3";
                    }
                    else if (mode == "view") {
                        btn_onClick('View');
                        location.href = "../PAWHSNewBatchCreation/BatchCreationNewV3";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script>
    function generate_buyer_list(res) {
        debugger;
        if (res != null) {
            var data = changedataType(res);
            BATCHCRTGrid(data);
        }
        else {
            BATCHCRTGrid([]);
        }
    }
    function listRefresh() {
        try {
            setlocalStorage('flt_condition', "");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>



