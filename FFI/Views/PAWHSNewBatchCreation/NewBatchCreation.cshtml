
@{
    ViewBag.Form = "NewBatch Creation";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}

<form id="NewBatchCreation_form" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:20px;padding-bottom:20px">
            <div class="row" style="padding-bottom:1px">
                <div class="col-xs-4">
                    <div class="form-group">
                        <label for="txt_batchno" class=" col-sm-5 control-label">Batch No.</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txt_BatchNo" name="in_batch_no" class="form-control" maxlength="50" disabled>
                        </div>
                    </div>
                </div>

                <div class=" col-sm-2">
                    <input type="checkbox" id="chkfarmgate">  From Farmer Gate
                </div>
                <div class=" col-sm-2">
                    <input type="checkbox" id="chkprocenter">  Procurement Center
                </div>
                <div class=" col-sm-2">
                    <input type="checkbox" id="chkwhs">  Warehouse
                </div>
                <div class="col-sm-2">
                    <div class="form-group" style="display:none;">
                        <label for="txtMode" class="col-sm-5 control-label">Mode</label>
                        <div class="col-sm-4">
                            <input type="text" id="txtMode" name="in_mode_flag" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>


            </div>
            <div class="row" style="padding-bottom:1px">
                <div class="col-xs-4">
                    <label for="txtfarcusname" class=" control-label required">Buyer Name:&nbsp;&nbsp;&nbsp;&nbsp;</label>
                    <input type="text" id="txtfarcusname" name="In_buyer_name" style="margin-left:20%">
                    <a class="HelpWindow fa fa-search fa-lg" role="button" id="pay_help1" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Member" searchid="PWNEWPOSearch" data-target="#HelpModal" onclick=transfer(this,"form","","form_control"); title="Search" style="font-size: 19px; "></a>
                    <input hidden id="buyer_code" name="In_buyer_code" />
                </div>
                <div class="col-xs-4">
                    <label for="cmb_rec_Loca" class="control-label required">Buyer Location:&nbsp;&nbsp;&nbsp;&nbsp;</label>
                    <input id="cmb_rec_Loca" name="In_buyer_location" data-role="filtercombo">
                    <input type="hidden" id="In_buyer_location_desc" name="In_buyer_location_desc">
                    <input type="hidden" id="hdn_farmer_village">
                    <input type="hidden" id="txtinvoice_rowid" name="In_po_rowid">
                    <input type="hidden" id="shipment_uid" name="shipment_uid">
                    <input type="hidden" id="json" name="json">
                    <input type="hidden" id="tranqty" name="tranqty">
                    <input type="hidden" id="product_code" name="product_code">
                </div>
                <div class="col-xs-4">
                    <div class=" form-group">
                        <label for="cmb_cus_type" class=" col-sm-5 control-label required" style="left: 3%;">Remarks:</label>
                        <textarea class="form-control" id="cmb_cus_type" name="In_po_remarks" rows="3" cols="5" style="margin: 0px 1.82813px 0px 0px;width: 195px;height: 40px;position: relative;left: -66px;"></textarea>

                    </div>
                </div>

            </div>

            <div class="row">
                <section class="col-md-12">
                    <div id="tab_list" class="col-md-12">
                        <ul class="nav nav-tabs">
                            @*<li>
                                    <a href="#Transport" role="tab" onclick="Transporttab()" data-toggle="tab">
                                        Transport
                                    </a>
                                </li>*@
                            <li>
                                <a href="#Batch" id="data1" role="tab" onclick="Batchtab()" data-toggle="tab">
                                    Batch
                                </a>
                            </li>
                            <li>
                                <a href="#OtherDtls" id="data1" role="tab" onclick="Othertab()" data-toggle="tab">
                                    Other Costs
                                </a>
                            </li>
                            <li>
                                <a href="#Invoice" id="txtpo" role="tab" onclick="Invoice()" data-toggle="tab">
                                    Purchase Order
                                </a>
                            </li>
                            <li style="width: 8%;">
                                <a href="#Tax" id="txtdtl" role="tab" onclick="Tax()" data-toggle="tab">
                                    Tax
                                </a>
                            </li>
                            <li style="width: 8%;">
                                <a href="#Attachment" id="attachmentdtl" onclick="Attachment()" role="tab" data-toggle="tab">
                                    Attachment
                                </a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            @*<div class="tab-pane fade active in" id="Transport">
                                    <div class="panel panel-default">
                                        <div class="panel-body">
                                            <div id="grid_Transport">
                                            </div>
                                        </div>
                                    </div>
                                </div>*@
                            <div class="tab-pane fade active in" id="Batch">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_Batch">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade " id="OtherDtls">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_Other">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="Invoice">
                                <div class="panel panel-default">
                                    <div class="panel-body" style="padding-bottom:5px">
                                        <div id="grid_invoice">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="Tax">
                                <div class="panel panel-default">
                                    <div class="panel-body" style="padding-bottom:5px">
                                        <div id="grid_tax"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="Attachment">
                                <div class="panel panel-default">
                                    <div class="panel-body" style="padding-bottom:5px">
                                        <div id="grid_attachment"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
    <div id="dialog">
        <button type="button" id="btnsaveShipment" style="margin-left:18px;margin-top:-7px" class="btn btn-info" onclick="saveshipment()"><span class="glyphicon glyphicon-ok"></span> Save</button>
        <input type="hidden" id="tax_rate" name="In_tax_rate">
        <div id="grid_shipment"></div>
    </div>
    @*Implemented by Mohan*@
    <div id="dialogFileupload">

        <div class="form-group">
            <div class="col-md-10">
                <p>Upload one or more files using this form:</p>
                <input type="file" id="farmerfile" name="files" multiple />
                <input type="hidden" id="txtImageHidden" name="in_photo_farmer" />
                <input type="hidden" id="txtImageunique" name="unique_id" />

            </div>
        </div>
        <div>
            &nbsp;&nbsp;&nbsp;
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" onclick="save_Image()" value="Upload" />
            </div>
        </div>
    </div>
    <div id="dialogFileuploadView">

        <div class="form-group">
            <div class="col-md-10">
                <img id="farmer_img" src="~/images/NoImage.png" class="col-sm-5 img-bordered profileImg1" alt="User Image" height="150" width="50" />
            </div>
        </div>
    </div>
    <input type="hidden" id="txtagg_code" name="Out_agg_code">

</form>
<script>
    click_act_name = "BatchCreationList";
    click_ctrl_name = "PAWHSNewBatchCreation";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/CommonScripts/common.js"></script>
<script src="~/CommonScripts/tamil.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>
<script>
    var ViewBatchTab = false;
    $(document).ready(function () {
        kendodate_format();
        $("#bottom_menus").hide();
        $("#hide_div").hide();
        $("#divCreate #review").hide();

        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#NewBatchCreation_form");
        kendo.init(container);
        container.kendoValidator({
        });
        Screen_Id = "PWNEWBATCHCRT";
        permission = sec_Permission(Screen_Id);

        New_grid_Batch_details([]);
        New_grid_Transport_details([]);
        New_grid_Other_details([]);
        gridinvoice([]);
        $("#btnsaveShipment").hide();
        $("#dialogFileupload").hide();
        $("#dialogFileuploadView").hide();
        gridtax([]);
        gridattachment([]);
        if (getlocalStorage('btn_clk_val') == "Create") {
            debugger;
            $("#DocStat").val("New");
            load_master_code();
            //Transporttab();
            Batchtab();
        }
        var org_id = getlocalStorage('org_id');
        var org_type = getlocalStorage('org_type');
        var orgtname = getlocalStorage('orgtname');
        var org = getlocalStorage('org');

        if (getlocalStorage('btn_clk_val') == "View") {
            debugger;
            $("#bottom_menus").hide();
            $("#hide_div").hide();
            if (getlocalStorage("ls_pageList") != undefined) {
                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("NewBatchCreation_form");
                var obj_val = JSON.parse(formval);
                obj_val.In_batch_no = data.Out_batch_no;

                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                var Context = data.context;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({
                        userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId,
                        In_batch_no: Context.Header.In_batch_no
                    }),
                    url: "/PAWHSNewBatchCreation/BatchCreationfetch",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        if (response.context != null) {
                            generate_batchcreation_header(response.context);
                            generate_batchcreation_Transport(response.context.Header);
                            generate_BatchCreation_BatchList(response.context.BatchList);
                            generate_batchcreation_OtherList(response.context.OtherList);
                            //Transporttab();
                            ViewBatchTab = true;

                        }
                        else {
                            console.log(response);
                        }
                    },
                    error: function (er) {
                        alert(er);
                        console.log(er);
                    }

                });
            }
            viewdisable();
        }

    });

    function Batchtab() {
        debugger;
        try {
            $("div#Transport").hide();
            $("div#OtherDtls").hide();
            $("div#Batch").toggleClass('tab-pane fade active in');
            $("div#Batch").show();
            if (ViewBatchTab == false) {
                var in_selected_vehicle_no = "";
                var grid_val = JSON.stringify($("#grid_Transport").data().kendoGrid._data);
                var Bind = {};
                Bind = grid_val;
                var result = JSON.parse(Bind);

                for (var i = 0; i < result.length; i++) {
                    var itemcompare = result[i];
                    var actvehicleno = itemcompare.In_vehicle_no;


                    if (in_selected_vehicle_no == '') {
                        in_selected_vehicle_no = "'" + actvehicleno + "'";
                    }
                    else {
                        in_selected_vehicle_no += ',' + "'" + actvehicleno + "'";
                    }
                }

                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("NewBatchCreation_form");
                var obj_val = JSON.parse(formval);

                obj_val.In_vehicle_no = in_selected_vehicle_no;
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                var Context = data.context;
                $.ajax({
                    type: "Post",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, In_vehicle_no: Context.Header.In_vehicle_no }),
                    url: "/PAWHSNewBatchCreation/BatchCreationLotNo_List",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {

                        if (response.Context.List != null) {
                            generate_BatchCreation_BatchList(response.Context.List);
                            $('#selectall').prop('checked', true, onchange);
                            $('.checkbox').prop('checked', true);
                        }
                        else {
                            generate_BatchCreation_BatchList([]);
                        }

                    },
                    error: function (er) {
                        console.log(er);
                    }

                });
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Transporttab() {
        try {
            $("div#Transport").toggleClass('tab-pane fade active in');
            $("div#Transport").show();
            $("div#Batch").hide();
            $("div#OtherDtls").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Othertab() {
        try {
            $("div#OtherDtls").toggleClass('tab-pane fade active in');
            $("div#OtherDtls").show();
            $("div#Batch").hide();
            $("div#Invoice").hide();
            $("div#Attachment").hide();
            $("div#Tax").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Invoice() {
        try {
            $("div#Invoice").toggleClass('tab-pane fade active in');
            $("div#Invoice").show();
            $("div#Batch").hide();
            $("div#OtherDtls").hide();
            $("div#Attachment").hide();
            $("div#Tax").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Tax() {
        try {
            $("div#Tax").toggleClass('tab-pane fade active in');
            $("div#Tax").show();
            $("div#Batch").hide();
            $("div#OtherDtls").hide();
            $("div#Attachment").hide();
            $("div#Invoice").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Attachment() {
        try {
            $("div#Attachment").toggleClass('tab-pane fade active in');
            $("div#Attachment").show();
            $("div#Batch").hide();
            $("div#OtherDtls").hide();
            $("div#Tax").hide();
            $("div#Invoice").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function load_master_code() {
        try {
            debugger;
            var data = {};
            var context = WebAPIProxy.getContext();
            data.userId = context.userId
            data.orgnId = context.orgnId
            data.locnId = context.locnId
            data.localeId = context.localeId
            data.screen_Id = "PWNEWBATCHCRT";
            var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
     function fetch_loc() {
        var In_buyer_code = $("#buyer_code").val();
        var In_agg_code = $("#txtorgn_code").val();
        var data = { In_buyer_code: In_buyer_code, In_agg_code: In_agg_code };
        $.ajax({
          url: '@Url.Action("location_searchPO", "PAWHSNEWPurchaseOrder")',
         type: "post",
        contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response) {

                if (response != null) {

                    var itemArr1 = [];
                    for (var i = 0; i < response.length; i++) {
                        var list = {};
                        list.id = response[i].Out_buyer_addr_rowid
                        list.code = response[i].Out_loction;
                        list.desc = response[i].Out_loction;
                        itemArr1.push(list);
                    }
                    filter_combobox("cmb_rec_Loca", itemArr1);

                }

            },
            error: function (er) {
                alert(er);
                console.log(er);
            }

        });
          $.ajax({
                   url: '@Url.Action("location_search", "PAWHSNewBookInvoice")',
                    type: "post",
                    contentType: 'application/x-www-form-urlencoded',
                    data: data,
                    success: function (response) {

                        if (response != null) {

                            var itemArr2 = [];
                            for (var i = 0; i < response.length; i++) {
                                var list = {};
                                list.id = response[i].Out_buyer_addr_rowid
                                list.code = response[i].Out_loction;
                                list.desc = response[i].Out_loction;
                                itemArr2.push(list);
                            }
                            setlocalStorage("Address", itemArr2);

                        }

                    },
                    error: function (er) {
                        alert(er);
                        console.log(er);
                    }
                });

    }
</script>

<script>

    function New_grid_Transport_details(data) {
        try {
            $("#grid_Transport").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_batch_rowid: { type: "int", defaultValue: 0 },
                                In_vehicle_no: { type: "string" },
                                In_Total_No_of_lots: { type: "int", defaultValue: 0, editable: false },
                                In_No_of_batch_creation: { type: "int", defaultValue: 0, editable: false },
                                In_No_of_Pending: { type: "int", defaultValue: 0, editable: false },
                                in_mode_flag: { type: "string", defaultValue: "I" }

                            }
                        }
                    }
                },
                toolbar: "<a  class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 280,
                groupable: false,

                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{

                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {
                                var grid = $("#grid_Transport").data("kendoGrid");
                                var dataItem = $("#grid_Transport").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ],
                    title: "Action",
                    width: "25px",

                },
                {
                    field: "In_batch_rowid",
                    title: "Batch Gid",
                    hidden: true
                },
                {
                    field: "In_vehicle_no",
                    title: "Vehicle No",
                    editor: Getproduct,
                    //editor: function (container, options) {
                    //    combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_maize_code", "Itm_mst")
                    //},
                    editable: true,
                    width: 60,

                },
                {
                    field: "In_Total_No_of_lots",
                    title: "Total No of Lots",
                    width: 50,
                    attributes: { style: "text-align:right;", "class": "customClass" },
                    editor: function (container, options) {
                        item_rate(container, options.field, '9', '2');
                    },

                },
                {
                    field: "In_No_of_batch_creation",
                    title: "No of Batch Creation",
                    width: 50,
                    attributes: { style: "text-align:right;", "class": "customClass" },
                    editor: function (container, options) {
                        item_rate(container, options.field, '9', '2');
                    },

                },

                {
                    field: "In_No_of_Pending",
                    title: "No of Pending Lots",
                    width: 50,
                    attributes: { style: "text-align:right;", "class": "customClass" },
                    editor: function (container, options) {
                        item_rate(container, options.field, '9', '2');
                    },

                },
                {
                    field: "in_mode_flag",
                    title: "Mode",
                    hidden: true
                }


                ],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }
    function New_grid_Batch_details(data) {
        try {
            $("#grid_Batch").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_act_row_id: { type: "int" },
                                In_orgn_code: { type: "string" },
                                In_agg_code: { type: "string" },
                                In_product_Type: { type: "string" },//In_lotno
                                In_lot_type: { type: "string" },
                                In_farmer_code: { type: "string" },
                                In_farmer_name: { type: "string" },
                                In_item_code: { type: "string" },
                                In_item_name: { type: "string" },
                                In_actual_qty: { type: "double" },
                                In_actual_price: { type: "double" },
                                In_actual_value: { type: "double" },
                                In_advance_amt: { type: "double" },
                                In_no_of_bags: { type: "int" },

                            }
                        }
                    }
                },
                toolbar: "<a  class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 250,
                //groupable: false,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {

                        command: [
                            {
                                name: "Delete",
                                id: "Delete",
                                imageClass: "fa fa-close",
                                click: function (e) {
                                    var grid = $("#grid_Batch").data("kendoGrid");
                                    var dataItem = $("#grid_Batch").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                    DeleteWindowEvent(e, dataItem, grid);
                                    e.stopImmediatePropagation()
                                }
                            },
                        ],
                        title: "Action",
                        width: "10",

                    },
                    {
                        field: "In_act_row_id",
                        title: "Act Rowid",
                        hidden: true
                    },
                    {
                        field: "In_orgn_code",
                        title: "Orgn Code",
                        hidden: true
                    },
                    {
                        field: "In_agg_code",
                        title: "Agg Code",
                        hidden: true
                    },
                    {
                        field: "In_product_Type",//In_lotno
                        editor: '<div class="input-group input-group-sm"><input type="text" readonly name="orgn_village_desc" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:orgn_village_desc"/><span class="input-group-btn" style="padding-right: 150px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Details" searchid="PAWHSPO" data-target="#HelpModal" onclick=transfer(this,"grid","grid_invoice","gridinvoice") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>',
                        title: "Lot No",
                        width: 150
                    },
                    {
                        field: "In_lot_type",
                        title: "Lot Type",
                        width: 100
                    },
                    {
                        field: "In_farmer_code",
                        title: "Farmer Code",
                        width: 120
                    },

                    {
                        field: "In_farmer_name",
                        title: "Farmer Name",
                        width: 100

                    },

                    {
                        field: "In_item_code",
                        title: "Item Code",
                        width: 100
                    },
                    {
                        field: "In_item_name",
                        title: "Item Name",
                        width: 100
                    },

                    {
                        field: "In_actual_qty",
                        title: "Actual Qty",
                        width: 100
                    },
                    {
                        field: "In_actual_price",
                        title: "Actual Price",
                        width: 100
                    },
                    {
                        field: "In_actual_value",
                        title: "Actual Value",
                        width: 100
                    },
                    {
                        field: "In_advance_amt",
                        title: "Advance Amount",
                        hidden: true
                    },
                    {
                        field: "In_no_of_bags",
                        title: "No Of Bags",
                        width: 75
                    }],
                editable: true

            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function New_grid_Other_details(data) {
        try {
            $("#grid_Other").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                in_cost_type: { type: "string", required: true },
                                In_cost_name: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_cost_name']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Cost Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                In_cost_value: { type: "int", defaultValue: 0 },
                                in_mode_flag: { type: "string", defaultValue: "I" }


                            }
                        }
                    }
                },
                toolbar: "<a  class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 280,
                groupable: false,

                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{

                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {
                                var grid = $("#grid_Other").data("kendoGrid");
                                var dataItem = $("#grid_Other").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ],
                    title: "Action",
                    width: "25px",

                },
                {
                    field: "in_cost_type",
                    title: "cost_type",
                    hidden: true,

                },
                {
                    field: "In_cost_name",
                    title: "Cost Name",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_cost_type", "grid_Other")
                    },
                    width: 100,

                },
                {
                    field: "In_cost_value",
                    title: "Value",
                    width: 50,
                    attributes: { style: "text-align:right;", "class": "customClass" },
                    editor: function (container, options) {
                        item_rate(container, options.field, '9', '2');
                    },

                },
                {
                    field: "in_mode_flag",
                    title: "Mode",
                    hidden: true
                }
                ],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }

    load_master_code();
    In_cost_name_list = grid_comboScreen_mastercodes("QCD_OTHERCOST_TYPE");

    function gridinvoice(data) {
        try {
            $("#grid_invoice").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_podtl_rowid: { type: "string" },
                                In_sln_no: { type: "string" },
                                In_item_code: { type: "string" },
                                In_item_name: { type: "string" },
                                In_product_Variety: { type: "string" },
                                In_hsn_code: { type: "string" },
                                In_qty: { type: "string" },
                                In_rate: { type: "string" },
                                In_tax_rate: { type: "string", defaultValue: "0" },
                                In_product_amount: { type: "string", defaultValue: "0" },
                                In_discount: { type: "string", defaultValue: "0" },
                                In_othercharges: { type: "number", defaultValue: 0 },
                                In_tax: { type: "string", defaultValue: "0" },
                                In_gross_amount: { type: "number", defaultValue: 0 },
                                In_remarks: { type: "string", defaultValue: "0" },
                                ShipDetail: { type: "json" },
                                unique_id: { type: "string" },
                                In_cgst_rate: { type: "string" },
                                In_sgst_rate: { type: "string" },
                                In_igst_rate: { type: "string" },
                                product_code: { type: "string" },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                                //editable: false
                            }

                        }
                    },
                    aggregate: [{ field: "In_gross_amount", aggregate: "sum" }],
                },

                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",


                dataBinding: setDefaultValues,
                dataBound: function (e) {

                    resultData = e.sender._data;
                    var rows = $('#grid_invoice').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                edit: OnEdit,
                save: function (data) {

                    if (data.values.In_qty) {
                        data.model.set("In_product_amount", (parseFloat(data.values.In_qty) * parseFloat(data.model.In_rate)).toFixed(2));
                        var prd_amt = data.model.In_product_amount != undefined ? parseFloat(data.model.In_product_amount) : parseFloat(0.0);
                        var dis_amt = data.model.In_discount != "" ? parseFloat(data.model.In_discount) : parseFloat(0.0);
                        var amt = (parseFloat(prd_amt) + parseFloat(dis_amt)).toFixed(2);
                        var amt1 = (parseFloat(prd_amt) - parseFloat(dis_amt)).toFixed(2);
                        data.model.set("In_tax", ((parseFloat(amt1) * parseFloat(data.model.In_tax_rate)) / 100.0).toFixed(2));
                        data.model.set("In_gross_amount", (parseFloat(amt) + parseFloat(data.model.In_tax)).toFixed(2));

                    }
                    if (data.values.In_rate) {
                        data.model.set("In_product_amount", (parseFloat(data.model.In_qty) * parseFloat(data.values.In_rate)).toFixed(2));
                        var prd_amt = data.model.In_product_amount != undefined ? parseFloat(data.model.In_product_amount) : parseFloat(0.0);
                        var dis_amt = data.model.In_discount != "" ? parseFloat(data.model.In_discount) : parseFloat(0.0);
                        var amt = (parseFloat(prd_amt) + parseFloat(dis_amt)).toFixed(2);
                        var amt1 = (parseFloat(prd_amt) - parseFloat(dis_amt)).toFixed(2);
                        data.model.set("In_tax", ((parseFloat(amt1) * parseFloat(data.model.In_tax_rate)) / 100.0).toFixed(2));
                        data.model.set("In_gross_amount", (parseFloat(amt) + parseFloat(data.model.In_tax)).toFixed(2));
                    }
                    if (data.values.In_discount) {

                        if (parseFloat(data.values.In_discount) > parseFloat(data.model.In_gross_amount) || parseFloat(data.values.In_discount) == parseFloat(data.model.In_product_amount)) {
                            var discount1 = "0.00";
                            data.model.set("In_discount", (parseFloat(discount1).toFixed(2)));
                            return false;
                        }

                        var amt_disc = (data.model.In_product_amount != undefined ? parseFloat(data.model.In_product_amount) : parseFloat(0.0)) - (data.values.In_discount != undefined ? parseFloat(data.values.In_discount) : parseFloat(0.0));
                        data.model.set("In_tax", ((parseFloat(amt_disc) * parseFloat(data.model.In_tax_rate)) / 100.0).toFixed(2));
                        data.model.set("In_gross_amount", (parseFloat(amt_disc) + parseFloat(data.model.In_tax)).toFixed(2));
                    }
                    if (data.values.In_discount == 0) {
                        if (parseFloat(data.values.In_discount) > parseFloat(data.model.In_gross_amount) || parseFloat(data.values.In_discount) == parseFloat(data.model.In_product_amount)) {
                            var discount1 = "0.00";
                            data.model.set("In_discount", (parseFloat(discount1).toFixed(2)));
                            return false;
                        }

                        var amt_disc = (data.model.In_product_amount != undefined ? parseFloat(data.model.In_product_amount) : parseFloat(0.0)) - (data.values.In_discount != undefined ? parseFloat(data.values.In_discount) : parseFloat(0.0));
                        data.model.set("In_tax", ((parseFloat(amt_disc) * parseFloat(data.model.In_tax_rate)) / 100.0).toFixed(2));
                        data.model.set("In_gross_amount", (parseFloat(amt_disc) + parseFloat(data.model.In_tax)).toFixed(2));
                    }

                    if (data.values.In_product_code != "") {
                        var code = (data.model.In_product_code)
                    }
                    if (data.values.In_product_code) {
                        data.model.set("unique_id", $("#shipment_uid").val());
                        data.model.set("ShipDetail", $("#json").val());
                        data.model.set("In_qty", $("#tranqty").val());
                    }
                },
                height: 240,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: "In_podtl_rowid",
                        title: "In_podtl_rowid",
                        hidden: true
                    },
                    {
                        field: "In_item_code",
                        title: "Item Code",
                        width: 80
                    },
                    {
                        field: "In_item_name",
                        title: "Item Name",
                        width: 100
                    },
                    {
                        field: "In_product_Variety",
                        title: "Crop Variety",
                        width: 100,
                        hidden: true
                    }, {
                        field: "productcategory",
                        title: "productcategory",
                        hidden: true
                    },
                    {
                        field: "product_code",
                        title: "product_code",
                        hidden: true
                    },
                    {
                        field: "In_hsn_code",
                        title: "HSN Code",
                        width: 100,
                    },
                    {
                        field: "In_uomtype_code",
                        title: "UOM",
                        hidden: true
                    },
                    {
                        field: "In_uomtype_desc",
                        title: "UOM",
                        width: 100, hidden: true
                    },
                    {
                        field: "In_qty",
                        title: "Quantity",
                        width: 80,
                        attributes: { style: "text-align:right;", "class": "customClass" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },
                    },
                    {
                        field: "In_rate",
                        title: "Rate",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            numeric_editor_dot(container, options.field, '9', '3');
                        },
                    },

                    {
                        field: "In_product_amount",
                        title: "Amount",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');

                        },
                    },
                    {
                        field: "In_discount",
                        title: "Discount",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');

                        },
                    },
                    {
                        field: "In_tax",
                        title: "Tax Amount",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        footerTemplate: "Total",
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },
                    },

                    {
                        title: 'Gross Amount',
                        field: 'In_gross_amount',
                        width: 100,
                        format: "{0:0.##}",
                        footerTemplate: "<div style='text-align:right'>#= kendo.toString(sum, '0.00') # </div>",
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },


                    },
                    //{
                    //command: [
                    //    {
                    //        name: "Add",
                    //        id: "Add",
                    //        text: "Add",
                    //        click: function (e) {
                    //            var grid = $("#grid_invoice").data("kendoGrid");
                    //            var dataItem = $("#grid_invoice").data("kendoGrid").dataItem($(e.target).closest("tr"));
                    //            shipment(e, dataItem, grid);
                    //        }
                    //        // click: shipment
                    //    },
                    //    {
                    //        name: "View",
                    //        id: "View",
                    //        text: "View",
                    //        click: function (e) {
                    //            var grid = $("#grid_invoice").data("kendoGrid");
                    //            var dataItem = $("#grid_invoice").data("kendoGrid").dataItem($(e.target).closest("tr"));
                    //            shipmentView(e, dataItem, grid);
                    //        }
                    //        // click: shipment
                    //    },
                    //    {
                    //        name: "Delete",
                    //        id: "Delete",
                    //        imageClass: "fa fa-close",
                    //        click: function (e) {
                    //            // e.preventDefault();
                    //            var grid = $("#grid_invoice").data("kendoGrid");
                    //            var dataItem = $("#grid_invoice").data("kendoGrid").dataItem($(e.target).closest("tr"));
                    //            DeleteWindowEvent(e, dataItem, grid);
                    //            e.stopImmediatePropagation()

                    //            var gridTax2 = $("#grid_tax").data("kendoGrid");
                    //            var gridData2 = gridTax2.dataSource.view();

                    //            for (var i = 0; i < gridData2.length; i++) {
                    //                if (gridData2[i].product_code == dataItem.product_code) {
                    //                    var array1 = gridTax2.dataSource.data();
                    //                    gridTax2.dataSource.remove(array1[i]);
                    //                    gridTax2.dataSource.sync();
                    //                }
                    //            }
                    //        }
                    //    },
                    //], title: "Shipment", width: "150px",
                    // },
                    {
                        field: "ShipDetail",
                        title: "json",
                        width: 400,
                        hidden: true
                    },
                    {
                        field: "unique_id",
                        title: "unique_id",
                        width: 400,
                        hidden: true
                    },
                    {
                        field: "In_tax_rate",
                        title: "Tax Rate",
                        width: 100,
                        hidden: true

                    },

                    {
                        field: "In_status_code",
                        title: "status_code",
                        width: 1,
                        hidden: true,
                    },

                    {
                        field: "In_hsn_desc",
                        title: "status_code",
                        width: 1,
                        hidden: true,
                    },
                    {
                        field: "hsn_code",
                        title: "hsn_code",
                        width: 1,
                        hidden: true,
                    },

                    {
                        field: "In_status_desc",
                        title: "status_desc",
                        width: 1,
                        hidden: true,
                    },

                    {
                        field: "In_mode_flag",
                        title: "Mode",
                        hidden: true
                    }
                ],
                editable: true
            });



        } catch (err) {
            alert(err);
        }
    }
    load_master_code();
    In_product_desc_list = grid_comboScreen_mastercodes("PRODCTNAME");
    function OnEdit(e) {
        setDefaultValues(e);

        e.container.find("input[name='In_product_amount']").prop('readonly', true);
        e.container.find("input[name='In_tax']").prop('readonly', true);
        e.container.find("input[name='In_gross_amount']").prop('readonly', true);
        e.container.find("input[name='In_product_code']").prop('readonly', true);
        e.container.find("input[name='In_uomtype_desc']").prop('readonly', true);
        e.container.find("input[name='In_qty']").focusout(function () {

            //e.model.unique_id = $("#shipment_uid").val();
            //e.model.ShipDetail = $("#json").val();
            if (parseFloat($(this).val()) == 0) {
                e.model.In_qty = 0;
                e.model.In_product_amount = 0;
                e.model.In_discount = 0;
                e.model.In_tax = 0;
                e.model.In_gross_amount = 0;

                var invgrid = $("#grid_invoice").data("kendoGrid");
                invgrid.dataSource.sync();
                kendoAlert("Quantity Can't Be Zero for the Product" + e.model.In_product_desc);
                return false;
            }

        });
        e.container.find("input[name='In_discount']").change(function () {

            if (e.model.In_qty == 0) {
                e.model.In_tax = 0;
                e.model.In_gross_amount = 0;
                var invgrid = $("#grid_invoice").data("kendoGrid");
                invgrid.dataSource.sync();
                kendoAlert("Please fill the Quantity of the Product" + e.model.In_product_desc);
                return false;
            }
            var dis = parseFloat($(this).val());
            if (parseFloat($(this).val()) > parseFloat(e.model.In_product) || parseFloat($(this).val()) == parseFloat(e.model.In_product)) {

                kendoAlert("Please Enter a valid Discount Amount");
                e.model.In_discount = 0;
                var invgrid = $("#grid_invoice").data("kendoGrid");
                invgrid.dataSource.sync();
            }
            if (parseFloat($(this).val()) == 0) {
                e.model.In_discount = 0;
                var invgrid = $("#grid_invoice").data("kendoGrid");
                invgrid.dataSource.sync();
            }
        });
        e.container.find("input[name='In_product_desc']").change(function () {

            var grid = $("#grid_invoice").data("kendoGrid");
            var models = grid.dataSource.data();
            var model = models[0];
            var uniqueId = model.uid
            var row = grid.table.find("[data-uid=" + uniqueId + "]");
            grid.select(row);
            if ($("#cmb_rec_Loca").val() != '') {
                var valueprd = $(this).val();
                var formval = form_Serialize("Purchase_form");
                var obj_val = JSON.parse(formval);

                obj_val.FilterBy_Option = "pawhs_NEW";
                obj_val.FilterBy_Code = valueprd;
                obj_val.FilterBy_FromValue = $("#cmb_rec_Loca").val();
                obj_val.FilterBy_ToValue = ".";
                var data = {};
                data.context = getContext();
                data.context.Header = obj_val;
                var Context = data.context;
                $.ajax({
                    type: "POST",
                    url: '/InWard/InwardProductfetch',
                    dataType: 'json',
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, FilterBy_Option: Context.Header.FilterBy_Option, FilterBy_Code: Context.Header.FilterBy_Code, FilterBy_FromValue: Context.Header.FilterBy_FromValue, FilterBy_ToValue: Context.Header.FilterBy_ToValue }),
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {

                        //var list = JSON.parse(response);
                        if (response.context != null) {

                            generate_TaxInvoiceproduct_list(response.context.InvoiceTax);
                            generate_Invoiceproduct_list(response.context.Detail);
                        }
                        else {

                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });
            }

        });
    }
</script>
<script>
    function gridtax(data) {
        try {
            $("#grid_tax").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                In_product_code: { type: "string" },
                                In_product_name: { type: "string" },
                                In_hsn_code: { type: "string" },
                                In_hsn_code_desc: { type: "string" },
                                In_hsn_desc: { type: "string" },
                                In_cgst_rate: { type: "string" },
                                In_sgst_rate: { type: "string" },
                                In_sugst_rate: { type: "string" },
                                In_igst_rate: { type: "string" },
                                In_tax_rate: { type: "string" },
                                In_taxable_amount: { type: "string" },
                                In_tax_amount: { type: "string" },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        },
                        parse: function (data) {
                            return $.map(data, function (item) {
                                item.In_cgst_rate = parseFloat(item.In_cgst_rate).toFixed(2);
                                item.In_sgst_rate = parseFloat(item.In_sgst_rate).toFixed(2);
                                item.In_ugst_rate = parseFloat(item.In_ugst_rate).toFixed(2);
                                item.In_tax_amount = parseFloat(item.In_tax_amount).toFixed(2);
                                item.In_taxable_amount = parseFloat(item.In_taxable_amount).toFixed(2);
                                item.In_sugst_rate = parseFloat(item.In_sgst_rate).toFixed(2) + parseFloat(item.In_ugst_rate).toFixed(2);
                                return item;
                            });
                        }
                    }
                },
                height: 240,
                groupable: false,
                dataBinding: setDefaultValues,
                //dataBound: function (e) {
                //    resultData = e.sender._data;
                //    var rows = $('#grid_tax').data('kendoGrid').tbody.children();
                //    setColor(rows, resultData);
                //},
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [

                    {
                        field: "In_invoicedtl_rowid",
                        title: "invoicedtl_rowid",
                        hidden: true
                    },
                    {
                        field: "In_invoice_no",
                        title: "invoice_no",
                        width: 1,
                        hidden: true,
                    },

                    {
                        field: "In_product_code",
                        title: "Product Code",
                        width: 100,

                    },
                    {
                        field: "In_product_name",
                        title: "Product Name",
                        width: 100,
                    },
                    {
                        field: "In_hsn_desc",
                        title: "HSN Code",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: "In_hsn_code",
                        title: "HSN",
                        width: 100,

                    },

                    {
                        field: "In_cgst_rate",
                        title: "CGST %",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '4', '2');
                        },
                    },

                    {
                        field: "In_sgst_rate",
                        title: "SGST % / UGST %",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '4', '2');
                        },
                    },
                    {
                        field: "In_igst_rate",
                        title: "IGST %",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '4', '2');
                        },
                    },
                    {
                        field: "In_tax_rate",
                        title: "Tax Rate",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: "In_taxable_amount",
                        title: "Taxable Amount",
                        attributes: { style: "text-align:right;" },
                        width: 100,
                    },

                    {
                        field: "In_tax",
                        title: "Tax Amount",
                        attributes: { style: "text-align:right;" },
                        width: 100,
                    },
                    {
                        field: "In_mode_flag",
                        title: "Mode",
                        hidden: true
                    }],
                editable: false
            });
        }
        catch (err) {
            alert(err);
        }
    }
</script>
<script>
    function gridattachment(data) {
        try {
            $("#grid_attachment").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_attch_rowid: { type: "string" },
                                In_filename: { type: "string" },
                                In_document: { type: "string" },
                                In_description: { type: "string" },
                                In_attch_date: { type: "date" },
                                In_attch_upload: { type: "string" },
                                In_attch_unique_id: { type: "string" },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    },

                },

                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",

                //edit: OnEditattachment,
                //dataBinding: setDefaultValues,
                dataBound: function (e) {

                    resultData = e.sender._data;
                    var rows = $('#grid_attachment').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },

                height: 240,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: "In_attch_rowid",
                        title: "invoicedtl_rowid",
                        hidden: true
                    },
                    {
                        field: "In_po_no",
                        title: "invoice_no",
                        width: 1,
                        hidden: true,
                    },
                    {
                        field: "In_filename",
                        title: "File Name",
                        width: 100
                    },
                    {
                        field: "In_document",
                        title: "Document",
                        width: 120,
                    },
                    {
                        field: "In_description",
                        title: "Description",
                        width: 100,

                    },
                    {
                        field: "In_attch_date",
                        title: "Date",
                        width: 100,
                        format: "{0:dd/MM/yyyy}"
                    },
                    {
                        field: "In_attch_upload",
                        title: "File Upload",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: "In_attch_unique_id",
                        title: "Unique Id",
                        width: 100,
                        hidden: true
                    },
                    {
                        command: [
                            {
                                name: "Upload",
                                id: "Upload",
                                text: "Upload",
                                click: function (e) {
                                    var grid = $("#grid_attachment").data("kendoGrid");
                                    var dataItem = $("#grid_attachment").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                    Upload(e, dataItem, grid);
                                },
                            },
                            {
                                name: "View",
                                id: "View",
                                text: "View",
                                click: function (e) {
                                    var grid = $("#grid_attachment").data("kendoGrid");
                                    var dataItem = $("#grid_attachment").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                    Uploadview(e, dataItem, grid);
                                }

                            },


                        ], title: "Image Upload", width: "100px",
                    },
                    {
                        field: "In_mode_flag",
                        title: "Mode",
                        hidden: true
                    }],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }

    function dateEditor(container, options) {
        $('<input type="text" name="JoiningDate" id="JoiningDate"/>')
            .appendTo(container)
            .kendoDatePicker({
                format: "MM/dd/yyyy"
            });
    }

    function Getproduct(container, options) {
        debugger;
        var gridDataArray = $('#grid_Transport').data('kendoGrid')._data;
        $('<div class="input-group input-group-sm"><input type="text" readonly name="" maxlength="10" style="width:100px;color:black" onkeypress="return speical_char(event)" data-bind="value:vehicle_no" /><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Vehicle List" searchid="B01" data-target="#HelpModal" onclick=transfer(this,"grid","grid_Transport","New_grid_Transport_details") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>').appendTo(container);
    }


    function grid_control() {
        debugger;
        try {
            var control_Name = [
                { "dataCol": "productcategory", "grid_row_col": "productcategory" },
                { "dataCol": "productsubcategory", "grid_row_col": "In_product_Type" },
                { "dataCol": "vehicle_no", "grid_row_col": "In_vehicle_no" },
                { "dataCol": "Total_No_of_lots", "grid_row_col": "In_Total_No_of_lots" },
                { "dataCol": "No_of_batch_creation", "grid_row_col": "In_No_of_batch_creation" },
                { "dataCol": "No_of_Pending", "grid_row_col": "In_No_of_Pending" },
                { "dataCol": "", "grid_row_col": "in_cost_type" },
                { "dataCol": "", "grid_row_col": "In_cost_name" },
                { "dataCol": "", "grid_row_col": "In_cost_value" },
                { "dataCol": "", "grid_row_col": "uid" }

            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function form_control() {
        var control_Name = [
            { "dataCol": "orgn_code", "controlId": "txtorgn_code", "type": "Text" },
            { "dataCol": "buyer_code", "controlId": "buyer_code", "type": "Text" },
            { "dataCol": "buyer_name", "controlId": "txtfarcusname", "type": "Text" }
        ];
        return control_Name;
    }
    function trans_input_data() {
        var trans_coll = [
            { "trasfer": "NO", "dataCol": "", "controlId": "", "grid_id": "", "grid_row_col": "" },
            { "trasfer": "Yes", "dataCol": "in_bank_code", "controlId": "", "grid_id": "grid_Bank", "grid_row_col": "" },
            { "trasfer": "Yes", "dataCol": "orgn_state_desc", "controlId": "", "grid_id": "grid_Address", "grid_row_col": "" }

        ];
        return trans_coll;
    }

    function save() {
        debugger;

        try {
            if ($("#txtMode").val() == "") {
                $("#txtMode").val('I');
            }

            var formval = form_Serialize("NewBatchCreation_form");
            var obj_val = JSON.parse(formval);

            obj_val.in_mode_flag = "I";

            //var costingvalidation = false;
            //if ($("#txt_Packing_cost").val() > 0 || $("#txt_Tran_cost").val() > 0 || $("#txt_UnPack_cost").val() > 0 || $("#txt_Locpac_cost").val() > 0 || $("#txt_Loctran_cost").val() > 0) {
            //    costingvalidation = true;
            //}

            //if (costingvalidation == false) {
            //    kendoAlert("Atleast one cost value need to be entred.");
            //    return false;
            //}

            var grid = $("#grid_Batch").data("kendoGrid");
            var selected = [];
            grid.tbody.find("input:checked").closest("tr").each(function (index) {
                selected.push(grid.dataItem(this));
            });

            var result_batch = selected;
            if (result_batch.length == 0) {
                kendoAlert("Atleast one record need to be selected.");
                return false;
            }

            var grid_val_tran = JSON.stringify($("#grid_Transport").data().kendoGrid._data);
            var Bind_tran = {};
            Bind_tran = grid_val_tran;
            var result = JSON.parse(Bind_tran);
            $.each(result, function (index, value) {
                result[index].in_mode_flag = "I";
            });
            var obj_grid_tran = result;
            if (obj_grid_tran.length > 0) {
                for (i = 0; i < obj_grid_tran.length; i++) {
                    if (obj_grid_tran[i].In_vehicle_no == "") {
                        kendoAlert("Kindly fill the Vehicle No field.!!");
                        return false;
                    }
                }
            }

            for (var i = 0; i < obj_grid_tran.length; i++) {
                var currentDataItem = obj_grid_tran[i];
                var qty1 = currentDataItem.In_vehicle_no.trim().toUpperCase();

                for (var j = i + 1; j < obj_grid_tran.length; j++) {
                    var nextDataItem = obj_grid_tran[j];
                    var qty2 = nextDataItem.In_vehicle_no.trim().toUpperCase();

                    if (qty1 == qty2) {
                        kendoAlert("This " + qty1 + "Vehicle no is already exists.");
                        return false;

                    }
                }
            }

            var total_actualvalue = 0.00;
            var in_selected_lot_id = "";
            var grid_val = JSON.stringify($("#grid_Other").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            var obj_grid_val = result;
            if (obj_grid_val.length > 0) {
                for (i = 0; i < obj_grid_val.length; i++) {
                    if (obj_grid_val[i].In_cost_name == "") {
                        kendoAlert("Kindly fill the Cost Type field.!!");
                        return false;
                    }
                }
            }
            for (var i = 0; i < obj_grid_val.length; i++) {
                var currentDataItem = obj_grid_val[i];
                var qty1 = currentDataItem.In_cost_name.trim().toUpperCase();

                for (var j = i + 1; j < obj_grid_val.length; j++) {
                    var nextDataItem = obj_grid_val[j];
                    var qty2 = nextDataItem.In_cost_name.trim().toUpperCase();

                    if (qty1 == qty2) {
                        kendoAlert("This " + qty1 + "Cost type is already exists.");
                        return false;

                    }
                }
            }
            var result = JSON.parse(Bind);

            var loctran_cost = 0.00;
            var locpack_cost = 0.00;
            var Unpack_cost = 0.00;
            var tran_cost = 0.00;
            var packing_cost = 0.00;

            for (var i = 0; i < result.length; i++) {
                var itemcompare = result[i];
                var CostType = itemcompare.in_cost_type;
                if (CostType == "QCD_LOCALTRANSPORTCOST") {

                    loctran_cost = parseFloat(itemcompare.In_cost_value).toFixed(2);
                }
                else if (CostType == "QCD_LOCALPACKINGCOST") {
                    locpack_cost = parseFloat(itemcompare.In_cost_value).toFixed(2);
                }
                else if (CostType == "QCD_UNPACKINGCOST") {
                    Unpack_cost = parseFloat(itemcompare.In_cost_value).toFixed(2);
                }
                else if (CostType == "QCD_TRANSPORTCOST") {
                    tran_cost = parseFloat(itemcompare.In_cost_value).toFixed(2);
                }
                else if (CostType == "QCD_PACKINGCOST") {
                    packing_cost = parseFloat(itemcompare.In_cost_value).toFixed(2);
                }


            }


            var toal_costingvalue = (parseFloat(packing_cost) + parseFloat(tran_cost) + parseFloat(Unpack_cost) + parseFloat(locpack_cost) + parseFloat(loctran_cost));

            for (var i = 0; i < result_batch.length; i++) {
                var itemcompare = result_batch[i];
                var actGid = itemcompare.In_act_row_id;
                var actual_value = parseFloat(itemcompare.In_actual_value).toFixed(2);
                total_actualvalue = (parseFloat(total_actualvalue) + parseFloat(actual_value));
                if (in_selected_lot_id == '') {
                    in_selected_lot_id = actGid;
                }
                else {
                    in_selected_lot_id += ',' + actGid;
                }
            }
            if (toal_costingvalue > total_actualvalue) {
                kendoAlert("Costing Value greater than selected Lot's.");
                return false;
            }
            obj_val.in_selected_lot_id = in_selected_lot_id;


            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_grid_tran;
            data.context.OtherDtl = obj_grid_val;
            data.context.in_selected_lot_id = obj_val.in_selected_lot_id;
            var context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: context.userId, orgnId: context.orgnId, locnId: context.locnId, localeId: context.localeId, in_selected_lot_id: context.in_selected_lot_id, Header: context.Header, OtherDtl: context.OtherDtl }),
                url: "/PAWHSNewBatchCreation/BatchCreationSave",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;

                    var Res = response;
                    if (Res.ApplicationException.errorDescription != null || Res.ApplicationException.errorDescription != '') {
                        var mode = $("#txtMode").val();
                        if (mode == "I") {
                            kendoAlert("Batch Creation Save Successfully");
                            get_batch_details(Res.context);
                            ViewBatchTab = true;
                        }
                        else if (mode == "D") {
                            kendoAlert("Batch Creation inactivate successfully");
                            get_batch_details(Res.context);

                        }
                        else {
                            kendoAlert("Batch Creation Updated successfully");

                            get_batch_details(Res.context);
                        }
                    }
                    else {
                        kendoAlert(Res.ApplicationException.errorDescription);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function get_batch_details(res) {
        debugger;
        try {
            $("#bottom_menus").hide();
            $("#hide_div").hide();
            $("#btnSave").hide();
            var formval = form_Serialize("NewBatchCreation_form");
            var obj_val = JSON.parse(formval);
            obj_val.In_batch_no = res.Out_batch_no;

            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.header = obj_val;
            var Context = data.context;

            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, In_batch_no: Context.header.In_batch_no }),
                url: "/PAWHSNewBatchCreation/BatchCreationfetch",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_batchcreation_header(response.context);
                        generate_batchcreation_Transport(response.context.Header);
                        generate_BatchCreation_BatchList(response.context.BatchList);
                        generate_batchcreation_OtherList(response.context.OtherList);
                        //Transporttab();
                    }
                    else {
                        console.log("Issue where Dropped");
                    }
                },
                error: function (er) {
                    console.log(er);
                }

            });
            $("#txtMode").val("U");
            viewdisable();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_batchcreation_header(res) {
        debugger;
        try {
            if (res != null) {
                $("#txtMode").val("U");
                $("#DocStat").val("Active");
                $("#txt_BatchNo").val(res.IOU_batch_no);

            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function viewdisable() {
        $("#txt_BatchNo").attr("disabled", true);
        $("#txt_Packing_cost").attr("disabled", true);
        $("#txt_Tran_cost").attr("disabled", true);
        $("#txt_UnPack_cost").attr("disabled", true);
        $("#txt_Locpac_cost").attr("disabled", true);
        $("#txt_Loctran_cost").attr("disabled", true);
        $("#txtMode").attr("disabled", true);

    }

    function generate_BatchCreation_BatchList(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                New_grid_Batch_details(data);
            }
            else {

                New_grid_Batch_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_batchcreation_Transport(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                New_grid_Transport_details(data);
            }
            else {
                New_grid_Transport_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_batchcreation_OtherList(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                New_grid_Other_details(data);
            }
            else {
                New_grid_Other_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

