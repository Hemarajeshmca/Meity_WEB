@{
    ViewBag.Form = "PAWHSPayment Details Update";
    ViewBag.helpName = "PAWHSPaymentdetailsupdate.html";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";
}

<form id="frm_paymentdetails" class="form-horizontal">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="cmb_advice" class="col-sm-4 control-label required"> Payment Status</label>
                        <div class="col-sm-6">
                            <input id="cmb_payment_status" name="payment_status" data-role="filtercombo" style="width:100%" />
                        </div>

                    </div>
                </div>


                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtValidity" class=" col-md-4 control-label">Payment Date</label>
                        <div class=" col-sm-4">
                            <input class="cusDate" data-role='datepicker' id="txtValidity" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="valid_until" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                            <input type="checkbox" id="apply_all" style="margin:10px 5px 0px 0px"> Apply to all
                        </div>
                        <button title="" data-placement="top" data-toggle="tooltip" class="btn btn-info" type="button" data-original-title="Refresh" onclick="listLoad()"> <span class="glyphicon glyphicon-refresh"></span></button>
                    </div>
                </div>

            </div>

            <div class="col-xs-12">
                <div id="grid_Drop_list">
                </div>
            </div>
        </div>
    </div>

</form>
<script src="~/API_Scripts/PAWHS_PaymentStatusUpdate_PAWHS_getPaymentUpdate_APIClient.js"></script>
<script src="~/API_Scripts/PAWHS_PaymentStatusUpdate_PAWHS_savePaymentUpdate_APIClient.js"></script>
<script src="~/API_Scripts/PAWHS_savePaymentUpdate_Model.js"></script>
<script src="~/API_Scripts/PAWHS_getPaymentUpdate_Model.js"></script>
<script src="~/API_Scripts/PAWHSPaymentStatusUpdate.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>


<script>
    $(document).ready(function () {
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#frm_paymentdetails");
        kendo.init(container);
        container.kendoValidator({
        });
        var org_id = getlocalStorage('org_id');
        $('#aggrorgn_code').val(org_id);
        Screen_Id = "PAYSTAUPD";
        master_userRoleNew2();
        load_master_code();

        var dtmap_paymentstatus = "";
        $("#cmb_payment_status").empty();
        dtmap_paymentstatus = grid_comboScreen_mastercodes("QCD_STAT_PYMT");
        filter_combobox("cmb_payment_status", dtmap_paymentstatus);

        $("#txtValidity").kendoDatePicker({
            max: new Date(),// sets max date to Jan 1st, 2013
            format: "dd/MM/yyyy",
            value: new Date(),

        });

        var data = [];
        gridFilter(data);
    });
</script>
<script>
    function load_master_code() {
        try {
            debugger;
            var data = {};
            var context = WebAPIProxy.getContext();
            data.userId = context.userId
            data.orgnId = context.orgnId
            data.locnId = context.locnId
            data.localeId = context.localeId
            data.screen_Id = "PAYSTAUPD";
            var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>
<script>
    //var data = [];
    function gridFilter(data) {
        try {
            $("#grid_Drop_list").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                In_receipt_id: { type: "string", editable: false },
                                In_farmer_name: { type: "string", editable: false },
                                In_payment_amount: { type: "string", editable: false },
                                net_pay: { type: "string" },
                                In_payment_date: { type: "date" },
                                In_payment_mode: { type: "string" },
                                In_bank_ref_no: { type: "string" },
                                In_payment_status: { type: "string" },
                                In_payment_remark: { type: "string" },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },

                height: 400,
                groupable: false,
                sortable: true,
                selectable: true,
                navigatable: true,
                save: function (data) {
                },
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: "In_paymentdtl_rowid",
                        title: "Row Id",
                        width: 1,
                        hidden: true,
                    },
                      {
                          field: "In_payment_advice_no",
                          title: "Payment Advice ID",
                          width: 100,
                      },

                 {
                     field: "In_receipt_id",
                     title: " Receipt ID",
                     width: 100

                 },

    {
        field: "In_farmer_name",
        title: "Farmer Name",
        width: 100

    },
    {
        field: "In_payment_amount",
        title: "Amount (Rs)",
        width: 100

    },
    {
        field: "In_payment_date",
        title: "Payment Date",
       // title: "End",
       // template: '#= kendo.toString(new Date(parseInt(EndDateTime.replace(/[A-Za-z$--/]/g, ""))),"MM-dd-yyyy mm:ss tt") #',
        width: 100,
        format: "{0:dd/MM/yyyy}"

    },


     {
         field: "In_payment_mode",
         title: "payment_mode",
         width: 1,
         hidden: true,
     },
    {
        field: "In_payment_mode_desc",
        title: "Paymode Method",
        editor: function (container, options) {
            combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_payment_mode", "grid_Drop_list")
        },
        width: 100

    },
    {
        field: "In_bank_ref_no",
        title: "Bank Reference No",
        width: 150,


    },
     {
         field: "In_payment_status",
         title: "payment_status",
         width: 1,
         hidden: true,
     },
    {
        field: "In_payment_status_desc",
        title: "Payment Status",
        editor: function (container, options) {
            combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_payment_status", "grid_Drop_list")
        },
        width: 200

    },
    {
        field: "In_payment_remark",
        title: "Remarks",
        width: 100,


    },
     {
         field: "In_row_timestamp",
         title: "RowTimeStamp",
         hidden: true,
         width: 100,


     },
    {
        field: "In_mode_flag",
        title: "Mode",
        hidden: true
    }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function check(acc, tf) {
        if (acc >= tf) {
            acc = "";
        }
    }

    load_master_code();
    In_payment_mode_desc_list = grid_comboScreen_mastercodes("QCD_PAYMENT_MODE");
    In_payment_status_desc_list = grid_comboScreen_mastercodes("QCD_STAT_PYMT");

</script>

<script>

    function listLoad() {
        debugger;

        try {

            var formval = form_Serialize("frm_paymentdetails");
            var obj_val = JSON.parse(formval);
            var c = $('#cmb_payment_status');
            if (c.data('kendoComboBox').value() != "" && c.data('kendoComboBox').value() != undefined) {
                obj_val.payment_status = c.data('kendoComboBox').value();
               
            }
            else {
                obj_val.payment_status = "0";
            }
            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Header = obj_val;
            //Payment fetch start 21-05-2020
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, payment_status: Context.Header.payment_status }),
                url: "/PAWHSPaymentdetailsupdate/fetchpaymentdetailslist",
                dataType: "json",
                contentType: 'application/json; charset-utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_PAWHSPaymentStatusUpdate_detail(response.context.PaymentDtl);
                    }
                    else {
                        gridFilter([]);
                    }
                },
                error: function (er) {
                    alert(er);
                    console.log(er);
                }

            });

            //Payment fetch End 21-05-2020
           // retrieve_PAWHSPaymentStatusUpdate_details(data);
            return false;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_PAWHSPaymentStatusUpdate_detail(res) {
        debugger;
        try {
            if ($("#txtValidity").val() != "") {
                var date = $("#txtValidity").val();
                var code = date.split("/");
                var applydate = code[1] + '/' + code[0] + '/' + code[2];
            }
            if (res != null) {
                debugger
                if ($('#apply_all').is(':checked')) {
                    if (applydate != "" && applydate != undefined) {
                        var result = changedataType(res);
                        $.each(result, function (index, value) {

                            var date = kendo.parseDate(applydate);
                            value = kendo.toString(date, "MM/dd/yyyy");
                            result[index].In_payment_date = value;
                        });
                        if (result.length == 0) {
                            var data = changedataType(res);
                            gridFilter(data);
                        }
                        else {
                            gridFilter(result);
                        }
                    }

                    else {

                        var data = changedataType(res);
                        $.each(data, function (index, value) {
                            debugger;
                            var d1 = value.In_payment_date;
                            var date = kendo.parseDate(d1);
                            value = kendo.toString(date, "MM/dd/yyyy");
                            data[index].In_payment_date = value;
                        });
                        gridFilter(data);
                    }

                }
                else {

                    var data = changedataType(res);
                    $.each(data, function (index, value) {
                        debugger;
                        var d = value.In_payment_date;
                        var date = kendo.parseDate(d);
                        value = kendo.toString(date, "MM/dd/yyyy");
                        data[index].In_payment_date = value;
                    });
                    gridFilter(data);
                }
            }
            else {
                gridFilter([]);
            }
        } catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>
<script>
    function save() {
        debugger;
        try {
            var grid_val = JSON.stringify($("#grid_Drop_list").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            $.each(result, function (index, value) {
                debugger;
                var d = value.In_payment_date;
                var date = kendo.parseDate(d);
                value = kendo.toString(date, "MM/dd/yyyy");
                result[index].In_payment_date = value;

                var payadvicedtl_rowid = result[index].In_paymentdtl_rowid;
                if (payadvicedtl_rowid == undefined || payadvicedtl_rowid == "") {
                    debugger;
                    result[index].In_paymentdtl_rowid = "0";
                }
                var mmode = result[index].In_mode_flag;
                if (mmode == "S") {
                    result[index].In_mode_flag = "U";
                }
            });
            var obj_val = result;
            var data_save = {};
            data_save.context = WebAPIProxy.getContext();
            data_save.context.PaymentDtl = obj_val;
         
            //Payment Status Update Start 21-05-2020

            var Context = data_save.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, PaymentDtl: Context.PaymentDtl }),
                url: "/PAWHSPaymentdetailsupdate/PaymentDetailsUpdate",
                dataType: "json",
                contentType: 'application/json; charset-utf-8',
                success: function (response) {
                    debugger;
                    var res = JSON.parse(response);
                    var mode = $("#txtMode").val();
                    if (mode == "I") {
                        kendoAlert("PAWHSPayment Status saved successfully");
                        get_PAWHSPaymentStatusUpdate_details();
                    }
                    else if (mode == "D") {
                        kendoAlert("PAWHSPayment Status inactivate successfully");
                        get_PAWHSPaymentStatusUpdate_details();
                    }
                    else {
                        kendoAlert("PAWHSPayment Status saved successfully");
                        get_PAWHSPaymentStatusUpdate_details();
                    }
                },
                error: function (er) {
                    alert(er);
                    console.log(er);
                }
            });

            //Payment Status Update End  21-05-2020

            //save_PAWHSPaymentStatusUpdate_details(data_save);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function get_PAWHSPaymentStatusUpdate_details() {
        try {
            var formval = form_Serialize("frm_paymentdetails");
            var obj_val = JSON.parse(formval);
            var c = $('#cmb_payment_status');
            obj_val.payment_status = c.data('kendoComboBox').value();
            var data_save = {};
            data_save.context = WebAPIProxy.getContext();
            data_save.context.Header = obj_val;
            //Payment fetch start 21-05-2020
            var Context = data_save.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, payment_status: Context.Header.payment_status }),
                url: "/PAWHSPaymentdetailsupdate/fetchpaymentdetailslist",
                dataType: "json",
                contentType: 'application/json; charset-utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_PAWHSPaymentStatusUpdate_detail(response.context.PaymentDtl);
                    }
                    else {
                        gridFilter([]);
                    }
                },
                error: function (er) {
                    alert(er);
                    console.log(er);
                }

            });

            //Payment fetch End 21-05-2020
           // retrieve_PAWHSPaymentStatusUpdate_details(data_save);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>
