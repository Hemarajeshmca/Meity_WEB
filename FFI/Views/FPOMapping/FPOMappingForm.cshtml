@{
    ViewBag.Form = "FPO Farmer Map";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";
}
<form id="FPOMap_DNew" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtorgn_code_desc" class="col-sm-4 control-label">FPO Code:</label>
                        <div class="col-sm-6">
                            <input id="txtorgn_code_desc" type="text" class="form-control" name="fpoorgn_code" style="width: 100%" readonly>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="txtorgn_type_desc" class="col-sm-2 control-label">FPO Name:</label>
                        <div class="col-sm-8">
                            <input id="txtorgn_type_desc" type="text" class="form-control" style="width: 100%" readonly>
                        </div>
                    </div>
                </div>
                <div class="col-sm-5">
                    <div class="form-group">
                        <label for="txtVillage" class="col-sm-3 control-label"> FPO Village:</label>
                        <div class="col-sm-6">
                            <input id="txtFPO_Village" type="text" class="form-control" name="FPO_VIllage" style="width: 100%" readonly>
                            <input type="hidden" id="txtFPO_Village_Code" name="agg_code">
                        </div>
                        <div id="pay_help">
                            <a class="HelpWindow fa fa-search fa-lg" role="button" id="pay_help1" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Village Search" searchid="S118" data-target="#HelpModal" onclick=transfer(this,"form","","form_control"); title="Search" style="font-size: 19px; margin-left: 0px; margin-top: 10px;"></a>
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtRoleDesc" class="col-sm-4 control-label"></label>
                        <div class="col-sm-8">
                        </div>
                    </div>
                </div>
            </div>

            @*<div class="row" style="padding-top:10px; padding-bottom:15px">
                    <label for="" class="col-sm-5 ">Farmers not Mapped </label>
                    <div class="col-xs-12">
                        <div id="FPOGridMap">
                        </div>
                    </div>
                </div>
                <div class="row" style="padding-top:10px; padding-bottom:15px " style="display:none;">
                    <div class="col-xs-12">
                        <button type="button" class="btn btn-info" onclick="map()">
                            <span class="fa fa-arrow-circle-down">Map</span>
                        </button>
                    </div>
                </div>

                <div class="row" style="padding-top:10px; padding-bottom:15px">
                    @*<label for="" class="col-sm-5">Farmer Members </label>*@
            @*<label for="" class="col-sm-5">Farmer Mapped</label>
                    <div class="col-xs-12">
                        <div id="gd_fpomap_list">
                            <div id="FPOGrid">
                            </div>
                        </div>
                    </div>
                </div>*@
            <div class="row">
                <section class="col-md-12">
                    <div id="tab_list" class="col-md-12">
                        <ul class="nav nav-tabs">
                            <li class="active">
                                <a href="#" role="tab" data-toggle="tab">
                                    Farmers not mapped
                                </a>
                            </li>
                            <div id="divDown" style="left:870px" class="col-sm-10">
                                <input id="btnMap" type="button" class="btn btn-info" data-toggle="tooltip" value="Map" title="Click Here to map the Rows" onclick="map()"> </input>
                            </div>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane fade active in" id="">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="FPOGridMap">
                                        </div>
                                        <div id="fpocount">
                                            <label id="lblfpocount" style="color: red; padding-left: 1009px; padding-top: 10px;">Total No of Records : 0</label>
                                            <input id="txtaggrorgn_code" name="fpoorgn_code" type="hidden" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>

            <div class="row">
                <section class="col-md-12">
                    <div id="tab_list" class="col-md-12">
                        <ul class="nav nav-tabs">
                            <li class="active">
                                <a href="#" role="tab" data-toggle="tab">
                                    Farmers mapped
                                </a>
                            </li>
                            <div id="divDown" class="col-sm-4" style="left:870px" position:relative">
                                @*<button id="btnunmap" class="btn btn-info" data-toggle="tooltip" name="UnMap" onclick="ValidateUnMapGrid()" title=""> <span class="glyphicon glyphicon-edit"></span> Un Map </button>*@
                                <input id="btnUnMap" type="button" class="btn btn-info" data-toggle=" tooltip" value="UnMap" onclick="ValidateUnMapGrid()" title="Click Here to Unmap the Rows"> </input>
                            </div>
                        </ul>

                        <div class="tab-content">
                            <div class="tab-pane fade active in" id="">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="gd_fpomap_list">
                                            <div id="FPOGrid">
                                            </div>
                                            @*<div id="fpomapcount">
            <label id="lblfpomapcount" style="color: red; padding-left: 1009px; padding-top: 10px;">Total No of Records : 0</label>
        </div>*@
                                            <div id="fpomapcount">
                                                <label id="lblfpomapcount" style="float:right;color: red;"></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</form>


@*<script>
        click_act_name = "home";
        click_ctrl_name = "home";
        form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
    </script>*@
<script src="~/API_Scripts/FPOFarmersMap_retrieveFpoFarmerlist_APIClient.js"></script>
<script src="~/API_Scripts/FPOFarmersMap_retrieveFpoFarmerMap_APIClient.js"></script>
<script src="~/API_Scripts/FPOFarmersMap_saveFPOFarmerMap_APIClient.js"></script>
<script src="~/API_Scripts/FPOMapping.js"></script>
<script src="~/API_Scripts/retrieveFpoFarmerMap_Model.js"></script>
<script src="~/API_Scripts/retrieveFpoFarmerlist_Model.js"></script>
<script src="~/API_Scripts/saveFPOFarmerMap_Model.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>

<script>
    var menuId = "";
    var permission = "";
    var FinalResultSet = [];
    $(document).ready(function () {
        debugger;
        master_Fpomap();
        FPOGrid_details([]);
        FPOGrid_map_details([]);
        $(".file_attach").attr("hdrtitle", "FPO Farmer Map");
        $(".notes").attr("hdrtitle", "FPO Farmer Map");
        $("#lblForm_menuid").text("FPO_MAP");

        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#FPOMap_DNew");
        kendo.init(container);
        container.kendoValidator({
        });

        Screen_Id = "FPOFMAP";
        permission = sec_Permission(Screen_Id);
        $('#HelpModal').on('hide.bs.modal', function (e) {
            if ($("#txtFPO_Village").val() != undefined && $("#txtFPO_Village").val() != "") {
                fetch_name();
            }
        });
        $("#hide_div").hide();
        //load_master_code();
        var org_id = getlocalStorage('org_id');
        var org_type = getlocalStorage('org_type');
        var orgtname = getlocalStorage('orgtname');
        var org = getlocalStorage('org');
        $('#txtaggrorgn_code').val(org_id);
        $('#txtorgn_code_desc').val(org_id);
        $('#txtorgn_type_desc').val(org);
        //$('#txtorgn_code').val(org_id);
        //$('#txtorgn_type').val(org_type);

        //page_load_list_permission(permission);
        setlocalStorage("ls_pageList", "");
        setlocalStorage("status", "Active");
        //get_FpoMap_details();

        /*  Prema added for fpo based abd ri user base loading*/
        var role = getlocalStorage("orgn_level");
        if (role == "ORG_FO") {
            debugger;
            $("#RIform").show();
            $("#FPOform").show();
            filter_combobox("cmb_RIBelongform", getlocalStorage("rilist"));
            filter_combobox("cmb_FPOBelongform", getlocalStorage("fpolist"));
            var cmb_riform3 = $("#cmb_RIBelongform").data("kendoComboBox");
            cmb_riform3.value(getlocalStorage("org_id"));
            $("#cmb_RIBelongform").data("kendoComboBox").enable(false);
            $("#cmb_FPOBelongform").data("kendoComboBox").value("All");
            $("#cmb_FPOBelongform").data("kendoComboBox").enable(true);
            //var cmap_inselform = $("#cmb_FPOBelongform").data("kendoComboBox");
            //cmap_inselform.value(getlocalStorage("org"));
        }
        if (role == "ORG_PF") {
            debugger;
            $("#RIform").show();
            $("#FPOform").show();
            filter_combobox("cmb_RIBelongform", getlocalStorage("rilist"));
            filter_combobox("cmb_FPOBelongform", getlocalStorage("fpolist"));
            $("#cmb_RIBelongform").data("kendoComboBox").value("All");
            $("#cmb_FPOBelongform").data("kendoComboBox").value("All");
            $("#cmb_RIBelongform").data("kendoComboBox").enable(true);
            $("#cmb_FPOBelongform").data("kendoComboBox").enable(true);

        }
        if (role == "ORG_FPO") {
            debugger;
            $("#RIform").show();
            $("#FPOform").show();
            filter_combobox("cmb_RIBelongform", getlocalStorage("rilist"));
            filter_combobox("cmb_FPOBelongform", getlocalStorage("fpolist"));
            var cmb_riform3 = $("#cmb_RIBelongform").data("kendoComboBox");
            cmb_riform3.value(getlocalStorage("parent_code"));
            $("#cmb_RIBelongform").data("kendoComboBox").enable(false);
            $("#cmb_FPOBelongform").data("kendoComboBox").enable(false);
            var cmap_inselform = $("#cmb_FPOBelongform").data("kendoComboBox");
            cmap_inselform.value(getlocalStorage("org_code"));
        }
        /*  prema ended*/

        var formval = form_Serialize("FPOMap_DNew");
        var obj_val = JSON.parse(formval);
        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Header = obj_val;
        singlefetch_retrieve_FpoMap_details();
        //fetch_name();
    });


    function singlefetch_retrieve_FpoMap_details() {
        debugger;
        try {
            var formval = form_Serialize("FPOMap_DNew");
            var obj_val = JSON.parse(formval);
            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Filter = obj_val;
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, Filter: Context.Filter }),
                url: "/FPOMapping/SingleFetchList",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_FpoMap_Map(response)
                    }
                    else {
                        FPOGrid_details([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });


        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err.message);
        }
    }

    function fetch_name() {
        try {
            debugger;
            //var formval = form_Serialize("FPOMap_DNew");
            //var obj_val = JSON.parse(formval);
            //if (obj_val != undefined) {
            //    var org_id = getlocalStorage('org_id');
            //    obj_val.fpoorgn_code = org_id;
            //    obj_val.shareapp_rowid = "0";
            //    var data = {};
            var formval = form_Serialize("FPOMap_DNew");
            var obj_val = JSON.parse(formval);
            if ($("#txtFPO_Village_Code").val() != "") {
                obj_val.FilterBy_Option = "VILLAGE";
            } else {
                obj_val.FilterBy_Option = "ALL";
            }           
            $("#txtFPO_Village_Code").removeAttr("readonly");
            var filterCode = $("#txtFPO_Village_Code").val();
            obj_val.FilterBy_Code = filterCode != "" ? filterCode : '.';
            $("#txtFPO_Village_Code").attr("readonly", true);
            obj_val.fpoorgn_code = $("#txtorgn_code_desc").val();
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
                obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_Fromvalue = ".";
            }
            obj_val.FilterBy_Tovalue = ".";
            
            var data_list = {};
            data_list.context = WebAPIProxy.getContext();
            data_list.context.Filter = obj_val;
            var Context = data_list.context;
            //retrieve_FpoMap_list(data_list);
            setlocalStorage('flt_condition', "");


            $.ajax({
                type: "POST",
                data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, Filter: Context.Filter }),
                url: "/FPOMapping/GetAllFPOFarmerList",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_FPOMap_list(response)
                        //listgrid(response.context.List);
                        //SetPager(response.context.Filter.out_record_count)
                    }
                    else {
                        FPOGrid_map_details([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });



        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var status_Priority = [];
    function FPOGrid_map_details(data) {
        try {
            $.each(data, function (index, value) {
                var flag = false;
                $.each(status_Priority, function (sindex, svalue) {
                    if (svalue == value.status_desc) {
                        flag = true;
                    }
                });
                if (flag == false) {
                    status_Priority.push(value.status_desc);
                }
            });
            gridRowID = -1;
            data = addRandomNum(data);
            $("#FPOGridMap").kendoGrid({
                dataSource: {
                    data: data,
                    // pageSize: 20,
                },

                height: 300,
                sortable: true,
                selectable: true,
                selectable: "singl",   //  Grid Row Selection
                //pageable: {
                //    refresh: false,
                //    pageSizes: 20,
                //    buttonCount: 5
                //},
                //change: selectRow,
                navigatable: true,
                groupable: false,
                change: function (e) {
                    $('tr').find('[type=checkbox]').prop('checked', false);
                    $('tr.k-state-selected').find('[type=checkbox]').prop('checked', true);
                },
                columns: [
                    {
                        title: "Select All",
                        headerTemplate: "<input type='checkbox'  id='selectall' class='k-checkbox header-checkbox' ><label class='k-checkbox-label' for='selectall'> Select All</label>",
                        // headerTemplate: "<label class='k-checkbox-label' for='selectall'><input type='checkbox'  id='selectall' class='k-checkbox header-checkbox' > Select All</label>",
                        template: "<input type='checkbox' name='id' class='checkbox' />",
                        width: 80,

                    },
                    //{
                    //    field: "fpomember_rowid",
                    //    title: "milkman_rowid",
                    //    hidden: true,
                    //},


                    {
                        field: "In_farmer_code",
                        title: "Farmer ID",

                    },
                    //{
                    //    field: "fpomember_code",
                    //    title: "Member ID",
                    //    hidden: true
                    //},
                    {
                        field: "In_farmer_name",
                        title: "Given Name",

                    },

                    {
                        field: "In_sur_name",
                        title: "Surname",

                    },
                    {
                        field: "In_farmer_dob",
                        title: "DOB",

                    },
                    {
                        field: "In_gender_flag",
                        title: "gender_flag",
                        hidden: true,
                    },

                    {
                        field: "In_gender_flag_desc",
                        title: "Gender",

                    },


                    //{
                    //    field: "fig_name",
                    //    title: "FIG Name",
                    //    hidden: true
                    //},

                    {
                        field: "In_reg_mobile_no",
                        title: "Regd Mobile No",

                    },
                    {
                        field: "In_status_code",
                        title: "Status",
                        hidden: true,
                    },
                    {
                        field: "In_status_desc",
                        title: "Status",

                    },
                    {
                        field: "In_village",
                        title: "Village",

                    }
                ]

            });
            //$("#pager").kendoPager({
            //    autoBind: false,
            //    dataSource: data,
            //    pageSizes: true
            //});
            $("#selectall").click(function (ev) {
                var checked = ev.target.checked;
                //alert(checked);
                if (checked) {
                    $('.checkbox').prop('checked', true);
                    //selectRow();
                } else {
                    $('.checkbox').prop('checked', false);
                }
            });
            $(".k-dropdown-operator").css('display', 'none');
            $("#FPOGridMap .k-input").attr('disabled', 'false');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var gridRowID = 1;
    function sel_checkbox() {
        gridRowID++;
        return '<input id="chk_sel_' + gridRowID + '" class="checkbox" type="checkbox" />';
    }

    function selectRow() {
        try {
            var grid = $("#FPOGridMap").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            setlocalStorage("ls_List", selectedItem);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function listpageloadfetch() {

        var formval = form_Serialize("FPOMap_DNew");
        var obj_val = JSON.parse(formval);
        obj_val.FilterBy_Option = "ALL";
        obj_val.FilterBy_Code = ".";
        $("#txtFPO_Village_Code").removeAttr("readonly");
        obj_val.fpoorgn_code = $("#txtFPO_Village_Code").val();
        if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
            obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
        }
        else {
            obj_val.FilterBy_Fromvalue = ".";
        }
        obj_val.FilterBy_Tovalue = ".";

        var data_list = {};
        data_list.context = WebAPIProxy.getContext();
        data_list.context.Filter = obj_val;
        //retrieve_FpoMap_list(data_list);
        fetch_name();
        $("#txtFPO_Village_Code").attr("readonly", true);
        setlocalStorage('flt_condition', "");
    }

    function grid_control() {
        try {
            var control_Name = [];
            return control_Name;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function form_control() {
        var control_Name = [
            { "dataCol": "member_village", "controlId": "txtFPO_Village", "type": "Text" },
            { "dataCol": "fig_village_covered", "controlId": "txtFPO_Village_Code", "type": "Text" }

        ];
        return control_Name;

    }
    function controlName() {
        try {
            var control_Name = [
            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function trans_input_data() {
        try {
            var trans_coll = [
                { "trasfer": "Yes", "dataCol": "orgn_code", "controlId": "txtaggrorgn_code", "grid_id": "", "grid_row_col": "" },
                { "trasfer": "Yes", "dataCol": "member_village", "controlId": "txtFPO_Village", "grid_id": "", "grid_row_col": "member_village" },
            ]
            return trans_coll;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function FPOGrid_details(data) {
        debugger;
        try {
            $("#FPOGrid").kendoGrid({
                dataSource: {
                    data: data,
                    //pageSize: 20,
                    change: function (e) {
                        setTimeout(function () {
                            var gd = $("#FPOGrid").data("kendoGrid");
                            filter_row(gd);
                            $('.k-i-close').css('display', 'none');
                            $('button.k-button-icon').css('display', 'none');
                            $('#FPOGrid .k-input').prop('disabled', false);
                            $('#FPOGrid .k-input').prop('readonly', true);
                        }, 1);
                    },
                },
                toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
                excelExport: function (e) {
                    var gd = $("#FPOGrid").data("kendoGrid");
                    var len = gd.dataSource._data.length;
                    var chkall = $('#chkall').is(':checked');
                    var chkfilter = $('#chkfilter').is(':checked');
                    var chktemp = $('#chktemp').is(':checked');
                    var twokendobox = true;
                    gd.dataSource.pageSize(len);
                    if (e.sender.dataSource._data.length == len) {
                        twokendobox = false;
                        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    }
                    else {
                        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    }
                    gd.dataSource.pageSize('10');
                    return false;
                },
                //filterable: {
                //    enabled: true,
                //    delay: 1500,
                //    mode: "menu, row",
                //    height: 200,
                //    click: function (e) {
                //        var gd = $("#FPOGrid").data("kendoGrid");
                //        filter_row(gd);
                //    }
                //},
                filterable: true,
                resizable: true, 
                filterMenuInit: function (e) {
                    var gd = $("#FPOGrid").data("kendoGrid");
                    filter_row(gd);
                },
                //change: selectRow,
                height: 300,
                sortable: true,
                selectable: true,
                selectable: "singl",   //  Grid Row Selection
                //pageable: {
                //    refresh: false,
                //    pageSizes: true,
                //    buttonCount: 5
                //},
                navigatable: false,
                groupable: false,
                //dataBound: function () {
                //    this.content.scrollTop(this.tbody.height())
                //},
                change: function (e) {
                    $('tr').find('[type=checkbox]').prop('checked', false);
                    $('tr.k-state-selected').find('[type=checkbox]').prop('checked', true);
                },
                columns: [
                    //        {
                    //        command: [
                    //{
                    //    name: "Delete",
                    //    id: "Delete",
                    //    imageClass: "fa fa-close",
                    //    click: function (e) {
                    //        var grid = $("#FPOGrid").data("kendoGrid");
                    //        var dataItem = $("#FPOGrid").data("kendoGrid").dataItem($(e.target).closest("tr"));
                    //        DeleteWindowEvent(e, dataItem, grid);
                    //        e.stopImmediatePropagation();
                    //    }
                    //},
                    //        ], title: "Action", width: "55px",
                    //    },
                    {
                        title: "Select All", width: 80,
                        headerTemplate: "<input type='checkbox'  id='UnMapselectall' class='k-checkbox header-checkbox' ><label class='k-checkbox-label' for='UnMapselectall'> Select All</label>",
                        template: "<input type='checkbox' id='id1' class='checkbox1' />"
                    },
                    {
                        field: "In_fpomember_rowid",
                        title: "milkman_rowid",
                        hidden: true,
                    },
                    {
                        field: "In_farmer_code",
                        title: "Farmer ID",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Contains"
                                }
                            }
                        },
                        width: 200
                    },
                    {
                        field: "In_fpomember_code",
                        title: "Member ID",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Contains"
                                }
                            }
                        },
                        width: 150
                    },
                    {
                        field: "In_member_name",
                        title: "Given Name",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Contains"
                                }
                            }
                        },
                        width: 150
                    },
                    {
                        field: "In_member_sur_name",
                        title: "Surname",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Contains"
                                }
                            }
                        },
                        width: 150
                    },
                    {
                        field: "In_member_dob",
                        title: "DOB",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Contains"
                                }
                            }
                        },
                        width: 150
                    },
                    {
                        field: "In_member_gender_flag",
                        title: "member_gender_flag",
                        hidden: true
                    },
                    {
                        field: "In_member_gender_flag_desc",
                        title: "Gender",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Contains"
                                }
                            }
                        },
                        width: 150
                    },
                    //{
                    //    field: "fig_name",
                    //    title: "FIG Name",
                    //    hidden: true
                    //},
                    {
                        field: "In_member_reg_mob_no",
                        title: "Regd Mobile No",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Contains"
                                }
                            }
                        },
                        width: 150
                    },
                    {
                        field: "In_status_code",
                        title: "Status",
                        hidden: true,
                    },
                    {
                        field: "In_status_desc",
                        title: "Status",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: "Contains"
                                }
                            }
                        },
                        width: 150
                    },
                    {
                        field: "In_row_timestamp",
                        title: "row_timestamp",
                        hidden: true,
                    },
                    {
                        field: "In_mode_flag",
                        title: "mode_flag",
                        hidden: true,
                    },
                    {
                        field: "In_village",
                        title: "Village",
                        
                    }
                ]
            });

            $("#UnMapselectall").click(function (ev) {
                var checked = ev.target.checked;
                if (checked) {
                    $('.checkbox1').prop('checked', true);
                } else {
                    $('.checkbox1').prop('checked', false);
                }
            });

            $(".k-dropdown-operator").css('display', 'none');
            $("#FPOGrid .k-input").attr('disabled', 'false');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    var gridRowID = 1;
    function sel_checkbox() {
        gridRowID++;
        return '<input id="chk_sel_' + gridRowID + '" class="checkbox" type="checkbox" />';
    }

    //function selectRow() {

    //    try {
    //        var grid = $("#FPOGrid").data("kendoGrid");
    //        var selectedItem = grid.dataItem(grid.select());
    //        setlocalStorage("ls_List", selectedItem);
    //    }
    //    catch (err) {
    //        javascript_log4j_root(arguments.callee.name, err);
    //    }
    //}

    function map() {
        debugger;
        //try {
        //    var items = getlocalStorage("ls_List");
        //    if (items == undefined || items == '') {
        //        kendoAlert("Please select records");
        //    }
        //    else {
        //        PopulateItemGrid();
        //    }
        //}
        //catch (err) {
        //    javascript_log4j_root(arguments.callee.name, err);
        //}

        try {
            //var items = getlocalStorage("ls_List");

            var grid = $("#FPOGridMap").data("kendoGrid");
            var selected = [];
            grid.tbody.find("input:checked").closest("tr").each(function (index) {
                selected.push(grid.dataItem(this));
            });

            var result = selected;
            if (result.length == 0) {
                kendoAlert("Please select records");
            }

            else {
                if (FinalResultSet == "") {
                    FinalResultSet = selected;
                } else {
                    len = result.length;
                    for (var i = 0; i < len; i++) {
                        FinalResultSet.push(selected[i]);
                    }
                }
                var itemGrid = $("#FPOGridMap").data("kendoGrid");
                var testdata = itemGrid.dataSource.data();
                PopulateItemGrid(testdata);
            }
            $('#selectall').prop('checked', false);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function PopulateItemGrid() {
        debugger;
        try {
            var productBookGrid = $("#FPOGridMap").data("kendoGrid");
            var itemGrid = $("#FPOGrid").data("kendoGrid");
            //For check Dupliacte
            var data = getlocalStorage("ls_List");
            var currentFarmerName = data.farmer_name;
            var currentFarmerCode = data.farmer_code;
            var griddata = itemGrid.dataSource.data();
            for (item in griddata) {
                if (griddata[item].farmer_code == currentFarmerCode &&
                    griddata[item].member_name == currentFarmerName) {
                    kendoAlert("Already exists in Farmer Members");
                    return false;
                }
            }
            //End
            productBookGrid.select().each(function () {
                var dataItem = productBookGrid.dataItem($(this));
                var ds = { farmer_code: dataItem.farmer_code, member_name: dataItem.farmer_name, member_sur_name: dataItem.sur_name, member_dob: dataItem.farmer_dob, member_gender_flag: dataItem.gender_flag, member_gender_flag_desc: dataItem.gender_flag_desc, member_reg_mob_no: dataItem.reg_mobile_no, status_code: dataItem.status_code, status_desc: dataItem.status_desc, mode_flag: 'I' };
                itemGrid.dataSource.add(ds);
            });
            itemGrid.refresh();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function PopulateItemGrid(testdata) {
        debugger;
        try {
            var productBookGrid = $("#FPOGridMap").data("kendoGrid");
            var itemGrid = $("#FPOGrid").data("kendoGrid");

            var selected = [];
            productBookGrid.tbody.find("input:checked").closest("tr").each(function (index) {
                debugger;
                selected.push(productBookGrid.dataItem(this));
            });
            var result = selected;
            // var griddata = testdata;//itemGrid.dataSource.data();
            var recordExist = false;


            $.each(result, function (index, value) {
                var isRecordAvl = false;
                debugger;
                //var griddata = testdata;
                var griddata = itemGrid.dataSource.data();
                var currentFarmerid = value.In_farmer_code;

                var farmer_id;
                var given_name;


                if (griddata.length > 0 || griddata.length != null) {
                    for (var item = 0; item < griddata.length; item++) {
                        farmer_id = griddata[item].In_farmer_code;

                        if (farmer_id == currentFarmerid) {
                            recordExist = true;
                            //return false;
                            isRecordAvl = true;
                            break;
                        }
                        else {
                            isRecordAvl = false;
                        }
                    }
                }
                else {
                    isRecordAvl = false;
                }
                if (!isRecordAvl) {
                    debugger;
                    //isRecordAvl = false;
                    var ds = { In_farmer_code: value.In_farmer_code, In_member_name: value.In_farmer_name, In_member_sur_name: value.In_sur_name, In_member_dob: value.In_farmer_dob, In_member_gender_flag_desc: value.In_gender_flag_desc, In_member_reg_mob_no: value.In_reg_mobile_no, In_village: value.In_village, In_status_code: value.In_status_code, In_status_desc: value.In_status_desc, In_village: value.In_village ,In_mode_flag: 'I' };
                    itemGrid.dataSource.add(ds);
                    griddata = '';
                    // break;
                }
            });
            if (recordExist) {
                kendoAlert(" One or some farmer(s) are already exists in Mapped Farmers ");
            }

            //End
            //productBookGrid.select().each(function () {
            //$.each(result, function (index, value) {
            //    debugger;
            //    var dataItem = productBookGrid.dataItem($(this));
            //    var ds = { farmer_id: value.farmer_id, given_name: value.given_name, sur_name: value.sur_name, dob: value.dob, gender: value.gender, regd_mobile_no: value.regd_mobile_no, village_name: value.village_name, status_code: value.status_code, status_desc: value.status_desc, mode_flag: 'I' };
            //    itemGrid.dataSource.add(ds);
            //});
            //Commented BY Sheeba
            itemGrid.refresh();
            var grid = $("#FPOGridMap").data("kendoGrid");
            $("#FPOGridMap").find("input:checked").each(function () {
                if (!$(this).parents('th').length) {
                    grid.removeRow($(this).closest('tr'));
                }
            })
            $('#FPOGridMap').data('kendoGrid').refresh();
            grid.refresh();
            //End
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function ValidateUnMapGrid() {
        debugger;
        try {
            var grid = $("#FPOGrid").data("kendoGrid");
            var selected = [];
            grid.tbody.find("input:checked").closest("tr").each(function (index) {
                selected.push(grid.dataItem(this));
            });

            var result = selected;
            if (result.length == 0) {
                kendoAlert("Please select records");
            }
            else {
                if (FinalResultSet == "") {
                    FinalResultSet = selected;
                } else {
                    len = result.length;
                    for (var i = 0; i < len; i++) {
                        FinalResultSet.push(selected[i]);
                    }
                }
              
                var itemGrid = $("#FPOGrid").data("kendoGrid");
                var testdata_unmap = itemGrid.dataSource.data();
                
                PopulateUnmapItemGrid(testdata_unmap);
            }
            $('#UnMapselectall').prop('checked', false);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function PopulateUnmapItemGrid(testdata_unmap) {
        debugger;
        try {
            var productUnmapBookGrid = $("#FPOGrid").data("kendoGrid");
            var itemGrid_Map = $("#FPOGridMap").data("kendoGrid");

            var selected = [];
            productUnmapBookGrid.tbody.find("input:checked").closest("tr").each(function (index) {
                selected.push(productUnmapBookGrid.dataItem(this));
            });

            var result = selected;

            // var griddata = testdata;//itemGrid.dataSource.data();
            var recordExist = false;
            $.each(result, function (index, value) {
                var isRecordAvl = false;

                //var griddata = testdata_unmap;
                var griddata = itemGrid_Map.dataSource.data();
                var currentFarmerid = value.In_farmer_code;
                var currentFarmerCode = value.In_member_name;
                //var griddata = itemGrid.dataSource.data();
                var farmer_id;
                var given_name;
                //for (item in griddata)
                if (griddata.length > 0) {
                    for (var item = 0; item < griddata.length; item++) {
                        farmer_id = griddata[item].In_farmer_code;
                        given_name = griddata[item].In_farmer_name
                        if (farmer_id == currentFarmerid) {
                            recordExist = true;
                            //return false;
                            isRecordAvl = true;
                            break;
                        }
                        else {
                            isRecordAvl = false;
                        }
                    }
                }
                else {
                    isRecordAvl = false;
                }
                if (!isRecordAvl) {
                    //isRecordAvl = false;
                    var ds = { In_farmer_code: value.In_farmer_code, In_farmer_name: value.In_member_name, In_sur_name: value.In_member_sur_name, In_farmer_dob: value.In_member_dob, In_gender_flag_desc: value.In_member_gender_flag_desc, In_reg_mobile_no: value.In_member_reg_mob_no, In_village: value.In_village, In_status_code: value.In_status_code, In_status_desc: value.In_status_desc, mode_flag: 'I' };
                    itemGrid_Map.dataSource.add(ds);
                    griddata = '';
                    // break;
                }
            });
            if (recordExist) {
                kendoAlert(" One or some farmer(s) are already exists in Mapped Farmers ");
            }

            //End
            //productBookGrid.select().each(function () {
            //$.each(result, function (index, value) {
            //    debugger;
            //    var dataItem = productBookGrid.dataItem($(this));
            //    var ds = { farmer_id: value.farmer_id, given_name: value.given_name, sur_name: value.sur_name, dob: value.dob, gender: value.gender, regd_mobile_no: value.regd_mobile_no, village_name: value.village_name, status_code: value.status_code, status_desc: value.status_desc, mode_flag: 'I' };
            //    itemGrid.dataSource.add(ds);
            //});
            itemGrid_Map.refresh();
            var grid = $("#FPOGrid").data("kendoGrid");
            $("#FPOGrid").find("input:checked").each(function () {
                if (!$(this).parents('th').length) {
                    grid.removeRow($(this).closest('tr'));
                }
            })
            grid.refresh();

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function save() {
        debugger;
        try {
            var formval = form_Serialize("FPOMap_DNew");
            var obj_val = JSON.parse(formval);
            obj_val.In_fpoorgn_code = $("#txtorgn_code_desc").val();

            //var grid_val1 = JSON.stringify($("#FPOGrid").data().kendoGrid._data);
            //var grid_val1 = JSON.stringify($("#FPOGrid").data("kendoGrid").dataSource._data);
            //var Bind1 = {};
            //Bind1 = grid_val1;
            //var result1 = JSON.parse(Bind1);
            var result1 = FinalResultSet;
            if (result1.length > 0) {
                $.each(result1, function (index, value) {
                    var fpomember_rowid = value.In_fpomember_rowid;
                    if (fpomember_rowid == undefined) {
                        result1[index].In_fpomember_rowid = "0";
                    }
                    var mode = result1[index].In_mode_flag;
                    var status = result1[index].In_status_code;
                    if (mode == "S") {
                        result1[index].In_mode_flag = "U";
                    }
                    if (mode == "" || mode == undefined) {
                        result1[index].In_mode_flag = "I";
                    }
                    if (mode == "S" && status=='A') {
                        result1[index].In_mode_flag = "D";
                    }
                    var fpomember_code = result1[index].In_fpomember_code;
                    if (fpomember_code == "" || fpomember_code == undefined) {
                        result1[index].In_fpomember_code = "0";
                    }

                    var rowstamp = result1[index].In_row_timestamp;
                    if (rowstamp == "" || rowstamp == undefined) {
                        result1[index].In_row_timestamp = " ";
                    }
                });
                var obj_grid_val1 = result1;
                var data_save = {};
                data_save.context = WebAPIProxy.getContext();
                data_save.context.Header = obj_val;
                data_save.context.Map = obj_grid_val1;
                var Context = data_save.context;
                //save_FpoMap_details(data_save);

                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, Header: Context.Header, Map: Context.Map }),
                    url: "/FPOMapping/SaveFarmerMap",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        if (response != null) {
                            //generate_FpoMap_Map(response)
                            kendoAlert("FPO Farmer Mapping Details Saved Successfully");
                            fetch_name();
                            singlefetch_retrieve_FpoMap_details();
                        }
                        else {
                            fetch_name();
                            singlefetch_retrieve_FpoMap_details();
                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });
                clear();
            }
            else {
                kendoAlert("No Farmer Mapped.Please Map Atleast One Farmer");
                return;
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function clear() {
        try {
            setlocalStorage("ls_List", '');
            $('#cmb_cc').data("kendoComboBox").value('');
            MilkMap_grid_details([]);
            FPOGrid_details([]);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_FpoMap_header(res) {
        try {
            $("#lblvillage").val(res.village_covered);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_FpoMap_Map(res) {
        try {
            debugger;
            if (res.context.Map != null) {
                var data = changedataType(res.context.Map);
                $("#FPOGrid").empty();
                FPOGrid_details(data);
                document.getElementById('lblfpomapcount').innerHTML
                    = 'Total No of Records : ' + res.context.Map.length;
                //$("#gd_fpomap_list").append("<div id='FPOGrid'></div>");
                //$("#FPOGrid").append("<div id='FPOGrid'></div>");
            }
            else {
                FPOGrid_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_FPOMap_list(res) {
        try {
            if (res.context.List != null) {
                var data = changedataType(res.context.List);
                FPOGrid_map_details(data);
                document.getElementById('lblfpocount').innerHTML
                    = 'Total No of Records : ' + res.context.List.length;
            }
            else {

                FPOGrid_map_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function get_FpoMap_details() {
        try {
            debugger;
            //listpageloadfetch();
            fetch_name();
            //var formval = form_Serialize("FPOMap_DNew");
            //var obj_val = JSON.parse(formval);
            //var data = {};
            //data.context = WebAPIProxy.getContext();
            //data.context.Header = obj_val;
            //retrieve_FpoMap_details(data);
            singlefetch_retrieve_FpoMap_details()
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script language="javascript" type="text/javascript">
    function popitup(url) {
        newwindow = window.open(url, 'name', 'height=650,width=850');
        if (window.focus) { newwindow.focus() }
        return false;

    }
</script>
<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>
