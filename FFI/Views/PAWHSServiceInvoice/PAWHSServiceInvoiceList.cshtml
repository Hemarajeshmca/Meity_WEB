@{
    ViewBag.List = "Service Invoice";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}
<form id="Service_Invoice" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="row">
        <div class="col-xs-12">
            <div id="gd_ServInvoice">
                <div id="ServiceInvoice_grid"></div>
            </div>
        </div>
    </div>
</form>
<script src="~/API_Scripts/PAWHS_getServiceInvoice_Model.js"></script>
<script src="~/API_Scripts/PAWHS_getServiceInvoiceList_Model.js"></script>
<script src="~/API_Scripts/PAWHS_saveServiceInvoice_Model.js"></script>
<script src="~/API_Scripts/Service_Invoice_PAWHS_getServiceInvoice_APIClient.js"></script>
<script src="~/API_Scripts/Service_Invoice_PAWHS_getServiceInvoiceList_APIClient.js"></script>
<script src="~/API_Scripts/Service_Invoice_PAWHS_saveServiceInvoice_APIClient.js"></script>
<script src="~/API_Scripts/PAWHSServiceInvoice.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>

<script>
    $(document).ready(function () {
        var menuId = "";
        var permission = "";
        $(document).ready(function () {
            $(".adv_filter").attr("hdrtitle", "Service Invoice List");
            $(".adv_filter").attr("fltid", "ServiceInvoice");
            $(".Export").attr("hdrtitle", "Service Invoice");
            $(".Export").attr("SubTreeId", "SERVCINV");
            list_grid_id = "ServiceInvoice_grid";

            listpageloadfetch();
          
            Screen_Id = "SERVCINV";
            permission = sec_Permission(Screen_Id);
            page_load_list_permission(permission);
            setlocalStorage("ls_pageList", "");
            filterhover();
            $("#btn_Edit").hide();
        });
    });
</script>
<script>
    function listpageloadfetch() {
        debugger;
        try {
            var formval = form_Serialize("Service_Invoice");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = "ALL";
            obj_val.FilterBy_Code = ".";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
                obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_FromValue = ".";
            }
            obj_val.FilterBy_ToValue = ".";

            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Filter = obj_val;
           // retrieve_ServiceInvoice_list(data);           
            var Context = data.context;
            $.ajax({
                type: "POST",
                url: '/PAWHSServiceInvoice/PAWHSServiceInvoiceListfetch',
                dataType: 'json',
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, FilterBy_Option: Context.Filter.FilterBy_Option, FilterBy_Code: Context.Filter.FilterBy_Code, FilterBy_Fromvalue: Context.Filter.FilterBy_FromValue, FilterBy_ToValue: Context.Filter.FilterBy_ToValue }),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    //var list = JSON.parse(response);
                    if (response.context.List != null) {
                        generate_ServiceInvoice_list(response.context.List);
                    }
                    else {
                        ServiceInvoice([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var status_Priority = [];
    function ServiceInvoice(data) {
        try {
            $.each(data, function (index, value) {
                var flag = false;
                $.each(status_Priority, function (sindex, svalue) {
                    if (svalue == value.status_desc) {
                        flag = true;
                    }
                });
                if (flag == false) {
                    status_Priority.push(value.status_desc);
                }
            });
            $("#ServiceInvoice_grid").kendoGrid({
                dataSource: {
                data: data,
                pageSize: 20,
                change: function (e) {
                    setTimeout(function () {
                        var gd = $("#ServiceInvoice_grid").data("kendoGrid");
                        filter_row(gd);
                        $('.k-i-close').css('display', 'none');
                        $('button.k-button-icon').css('display', 'none');
                        $('#ServiceInvoice_grid .k-input').prop('disabled', false);
                        $('#ServiceInvoice_grid .k-input').prop('readonly', true);

                    }, 1);
                },
                 },
            toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
            excelExport: function (e) {
                var gd = $("#ServiceInvoice_grid").data("kendoGrid");
                var len = gd.dataSource._data.length;
                var chkall = $('#chkall').is(':checked');
                var chkfilter = $('#chkfilter').is(':checked');
                var chktemp = $('#chktemp').is(':checked');
                var twokendobox = true;
                gd.dataSource.pageSize(len);
                if (e.sender.dataSource._data.length == len) {
                    twokendobox = false;
                    exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                }
                else {
                    exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                }
                gd.dataSource.pageSize('10');
                return false;
            },

            filterable: {
                    enabled: true,
                    delay: 1500,
                    mode: "menu, row",
                    height: 200,
                    click: function (e) {
                        var gd = $("#ServiceInvoice_grid").data("kendoGrid");
                        filter_row(gd);
                    }
            },
            filterMenuInit: function (e) {
                var gd = $("#ServiceInvoice_grid").data("kendoGrid");
                filter_row(gd);
            },
            change: selectRow,
            height: 450,
            sortable: true,
            selectable: true,
            selectable: "singl",   //  Grid Row Selection
            pageable: {
                refresh: false,
                pageSizes: true,
                buttonCount: 5
            },
            navigatable: true,
            groupable: false,

                        columns: [

                              {
                                  field: "Out_invoce_rowid",
                                  title: "Service invoce rowid",
                                  width: 1,
                                  hidden: true,
                              },
                           {
                               field: "Out_invoice_no",
                               title: "Service Invoice No.",
                               width: 200,
                               filterable: {
                                   cell: {
                                       operator: "contains",
                                       inputWidth: 1500
                                   }
                               }
                           },
                             {
                                 field: "Out_invoice_date",
                                 title: "Service Invoice Date",
                                 width: 200,
                                 filterable: {
                                     cell: {
                                         operator: "contains",
                                         inputWidth: 1500
                                     }
                                 }
                             },

                            {
                                field: "Out_customer_name",
                                title: "Customer Name",
                                width: 200,
                                filterable: {
                                    cell: {
                                        operator: "contains",
                                        inputWidth: 1500
                                    }
                                }
                            },
                             {
                                 field: "Out_status_code",
                                 title: "Status",
                                 width: 1,
                                 hidden: true,                                
                             },
                              {
                                  field: "Out_status_desc",
                                  title: "Status",
                                  width: 1,
                                  hidden: true,
                              },
                              {
                                  field: "Out_row_timestamp",
                                  title: "Status",
                                  width: 1,
                                  hidden: true,
                              },
                        ]

            });
            $(".k-dropdown-operator").css('display', 'none');
            $("#ServiceInvoice_grid .k-input").attr('disabled', 'false');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: "--Select Value--"
        });
    }

    function selectRow() {
        try {
            var grid = $("#ServiceInvoice_grid").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            setlocalStorage("ls_pageList", selectedItem);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>
<script>
    $("#btn_Edit").bind("click", function () {
        btn_onClick('Edit');
        location.href = "../PAWHSServiceInvoice/ServiceInvoiceForm";
    });

    $("#btn_View").bind("click", function () {
        btn_onClick('View');
        location.href = "../PAWHSServiceInvoice/ServiceInvoiceForm";
    });

    $("#btn_new").bind("click", function () {
        btn_onClick('Create');
        location.href = "../PAWHSServiceInvoice/ServiceInvoiceForm";
    });
    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage("ls_pageList") != undefined) {
                var items = getlocalStorage("ls_pageList");
                if (items.length == 0) {
                    kendoAlert("Please select records");
                }

                else {
                    if (mode == "edit") {
                        btn_onClick('Edit');
                        location.href = "../PAWHSServiceInvoice/ServiceInvoiceForm";

                    }
                    else if (mode == "view") {
                        btn_onClick('View');
                        location.href = "../PAWHSServiceInvoice/ServiceInvoiceForm";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>


<script>
    function generate_ServiceInvoice_list(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                $("#gd_ServInvoice").empty();
                $("#gd_ServInvoice").append("<div id='ServiceInvoice_grid'></div>");
                ServiceInvoice(data);

            }
            else {
                ServiceInvoice([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function listRefresh() {
        try {
            setlocalStorage('flt_condition', "");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>



