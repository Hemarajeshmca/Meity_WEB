@{
    ViewBag.List = "ESP Registration";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}
<form id="frm_esp_reg" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="row">
        <div class="col-xs-12">
            <div class="col-xs-12">
                <div id="gd_esp">
                    <div id="esp_grid"></div>
                </div>
            </div>
        </div>
    </div>
</form>
<script src="~/API_Scripts/ESP_retrieveESPReg_APIClient.js"></script>
<script src="~/API_Scripts/ESP_retrieveESPRegList_APIClient.js"></script>
<script src="~/API_Scripts/ESP_saveESPReg_APIClient.js"></script>
<script src="~/API_Scripts/ESP_Registration.js"></script>
<script src="~/API_Scripts/retrieveESPReg_Model.js"></script>
<script src="~/API_Scripts/retrieveESPRegList_Model.js"></script>
<script src="~/API_Scripts/saveESPReg_Model.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script>

    var menuId = "";
    var permission = "";

    $(document).ready(function () {
        $(".adv_filter").attr("hdrtitle", "ESP List Record");
        $(".adv_filter").attr("fltid", "espreg");
        $(".Export").attr("hdrtitle", "ESP Registration List");
        $(".Export").attr("SubTreeId", "esp_grid");
        list_grid_id = "esp_grid";

        //listpageloadfetch();

        Screen_Id = "FALREG";
        permission = sec_Permission(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage("ls_pageList", "");
        filterhover();

    });
</script>
<script>
    function listpageloadfetch() {
        try{
            var formval = form_Serialize("frm_esp_reg");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = "ALL";
            obj_val.FilterBy_Code = ".";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
                obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_FromValue = ".";
            }
            obj_val.FilterBy_ToValue = ".";

            obj_val.from_index = "0"
            obj_val.to_index = "0"
            obj_val.record_count = "0"

            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Filter = obj_val;        
            retrieve_ESP_list(data);          
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var status_Priority = [];
    function ESPgrid(data) {
        try{
            $.each(data, function (index, value) {
                var flag = false;
                $.each(status_Priority, function (sindex, svalue) {
                    if (svalue == value.status_desc) {
                        flag = true;
                    }
                });
                if (flag == false) {
                    status_Priority.push(value.status_desc);
                }
            });
    $("#esp_grid").kendoGrid(
        {
            dataSource: {
                data: data,
                pageSize: 20,
                change: function (e) {
                    setTimeout(function () {
                        var gd = $("#esp_grid").data("kendoGrid");
                        filter_row(gd);
                        $('.k-i-close').css('display', 'none');
                        $('button.k-button-icon').css('display', 'none');
                        $('#esp_grid .k-input').prop('disabled', false);
                        $('#esp_grid .k-input').prop('readonly', true);

                    }, 1);
                },
            },
            toolbar: "<button type= 'button' id = 'Exportclick' class = 'k-grid-excel' style = 'display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
            excelExport: function (e) {
                var gd = $("#esp_grid").data("kendoGrid");
                var len = gd.dataSource._data.length;
                var chkall = $('#chkall').is(':checked');
                var chkfilter = $('#chkfilter').is(':checked');
                var chktemp = $('#chktemp').is(':checked');
                var twokendobox = true;
                gd.dataSource.pageSize(len);
                if (e.sender.dataSource._data.length == len) {
                    twokendobox = false;
                    exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                }
                else {
                    exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                }
                gd.dataSource.pageSize('10');
                return false;
            },
            filterable: {
                enabled: true,
                delay: 1500,
                mode: "menu, row",
                height: 200,
                click: function (e) {
                    var gd = $("#esp_grid").data("kendoGrid");
                    filter_row(gd);
                }
            },
            filterMenuInit: function (e) {
                var gd = $("#esp_grid").data("kendoGrid");
                filter_row(gd);
            },
            height: 450,
            sortable: true,
            selectable: true,
            change: selectRow,
            selectable: "singl",   //  Grid Row Selection
            pageable: {
                refresh: false,
                pageSizes: true,
                buttonCount: 5
            },
            navigatable: true,
            groupable: false,
            columns: [
        {
            field: "orgn_rowid",
            title: "orgn Row Id",
            width: 1,
            hidden: true,
        },
      {
          field: "orgn_code",
          title: "ESP Code",
          filterable: {
              cell: {
                  operator: "contains",
                  inputWidth: 1500
              }
          }
      },
      {
          field: "version_no",
          title: "version_no",
          width: 1,
          hidden: true,
      },
      {
          field: "orgn_cin",
          title: "orgn_cin",
          width: 1,
          hidden: true,
      },
       {
           field: "primary_lang_code",
           title: "primary_lang_code",
           width: 1,
           hidden: true,
       },
       {
           field: "parent_code",
           title: "Facilitator Org",
           filterable: {
               cell: {
                   operator: "contains",
                   inputWidth: 1500
               }
           }
       },
       {
           field: "orgn_name",
           title: "ESP Name",
           filterable: {
               cell: {
                   operator: "contains",
                   inputWidth: 1500
               }
           }
       },
       {
           field: "orgn_ll_name",
           title: "orgn_ll_name",
           width: 1,
           hidden: true,
       },
        {
            field: "orgn_level",
            title: "orgn_level",
            width: 1,
            hidden: true,
        },
        {
            field: "orgn_level_desc",
            title: "Address",
            hidden: true,
            filterable: {
                cell: {
                    operator: "contains",
                    inputWidth: 1500
                }
            }
        },
      {
          field: "orgn_type_desc",
          title: "orgn_type",
          width: 1,
          hidden: true,
      },
        {
            field: "orgn_type",
            title: "ESP Type",
            filterable: {
                cell: {
                    operator: "contains",
                    inputWidth: 1500
                }
            }
        },
       {
           field: "orgn_logo",
           title: "FPO/Largefarmer",
           filterable: {
               cell: {
                   operator: "contains",
                   inputWidth: 1500
               }
           }
         
       },
       {
           field: "orgn_subtype_desc",
           title: "orgn_subtype_desc",
           width: 1,
           hidden: true,
       },
       {
           field: "secondary_lang_code",
           title: "secondary_lang_code",
           width: 1,
           hidden: true,
       },
       {
           field: "orgn_logo",
           title: "orgn_subtype",
           width: 1,
           hidden: true,
       },
        {
            field: "orgn_auth_sign",
            title: "orgn_auth_sign",
            width: 1,
            hidden: true,
        },
        {
            field: "status_code",
            title: "status_code",
            width: 1,
            hidden: true,
        },
        {
            field: "status_desc",
            title: "Status",
            filterable: {
                cell: {
                    operator: "contains",
                    inputWidth: 1500
                }
            }
        },
       {
           field: "row_timestamp",
           title: "row_timestamp",
           width: 1,
           hidden: true,
       },
        ]

        });
    $(".k-dropdown-operator").css('display', 'none');
    $("#esp_grid .k-input").attr('disabled', 'false');
}
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
}

function statusFilter(element) {    // Dropdown list functionality
    element.kendoDropDownList({
        dataSource: status_Priority,
        optionLabel: "--Select Value--"
    });
}

function selectRow() {
    try {
        var grid = $("#esp_grid").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        setlocalStorage("ls_pageList", selectedItem);
    }
    catch (err) {
        javascript_log4j_root(arguments.callee.name, err);
    }
}
</script>
<script>
    $("#btn_Edit").bind("click", function () {
        getSerializedSelectedRows('edit');
    });

    $("#btn_View").bind("click", function () {
        getSerializedSelectedRows('view');
    });

    $("#btn_new").bind("click", function () {
        btn_onClick('Create');
        location.href = "../FarmReg/FarmRegForm";
    });
    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage("ls_pageList") != undefined) {
                var items = getlocalStorage("ls_pageList");
                if (items.length == 0) {
                    kendoAlert("Please select records");
                }

                else {
                    if (mode == "edit") {
                        btn_onClick('Edit');
                        location.href = "../FarmReg/FarmRegForm";
                    }
                    else if (mode == "view") {
                        btn_onClick('View');
                        location.href = "../FarmReg/FarmRegForm";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<script>
    function generate_ESP_list(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                $("#gd_esp").empty();
                $("#gd_esp").append("<div id='esp_grid'></div>");
                ESPgrid(data);
            }
            else {
                ESPgrid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function listRefresh() {
        try {
            setlocalStorage('flt_condition', "");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

