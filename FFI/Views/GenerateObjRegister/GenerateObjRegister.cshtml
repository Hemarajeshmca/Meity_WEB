@{
    ViewBag.List = "Objection Register";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
}


<form id="Objection_Register" class="form-horizontal" data-role="validator" novalidate="novalidate">

    <div class="row">
        <div class="col-xs-12">
            <div id="gd_ObjReg">
                <div id="ObjReg_grid"></div>
            </div>
        </div>
    </div>
</form>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/API_Scripts/ObjectionRegister.js"></script>
<script>
    var menuId = "";
    var permission = "";
    $(document).ready(function () {

        kendodate_format();
        $(".adv_filter").attr("hdrtitle", "Objection Register");
        $(".adv_filter").attr("fltid", "register");
        $(".Export").attr("hdrtitle", "Objection Register List");      
        $(".Export").attr("SubTreeId", "SRVOBJ");
        Screen_Id = "SRVOBJ";
        permission = sec_Permission(Screen_Id);
        //page_load_list_permission(permission);
        setlocalStorage("ls_pageList", "");
        $("#RI").hide();
        $("#FPO").hide();
        listpageloadfetch();
    });
</script>
<script>
    function listpageloadfetch() {
        debugger;
        var formval = form_Serialize("Objection_Register");
        var obj_val = JSON.parse(formval);
        obj_val.FilterBy_Option = "QCD_SHA_OBJ_REG";
        obj_val.FilterBy_Code = ".";
        if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != "") {
            obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
        }
        else {
            obj_val.FilterBy_Fromvalue = ".";
        }
        obj_val.FilterBy_Tovalue = ".";


        var data = {};
        data.context = WebAPIProxy.getContext();;
        data.context.Filter = obj_val;
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, filterby_option: Context.Filter.FilterBy_Option, filterby_code: Context.Filter.FilterBy_Code, filterby_fromvalue: Context.Filter.FilterBy_Fromvalue, filterby_tovalue: Context.Filter.FilterBy_Tovalue }),
            url: "/GenerateObjRegister/AllServiceList",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_ObjectionRegister_list(response.context.List)
                    //listgrid(response.context.List);
                    //SetPager(response.context.Filter.out_record_count)
                }
                else {
                    listgrid([]);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });
        //retrieve_ObjectionRegister_list(data);
        //setlocalStorage('flt_condition', "");
    }

    var status_Priority = [];
    function ObjRegGrid(data) {
        $.each(data, function (index, value) {
            var flag = false;
            $.each(status_Priority, function (sindex, svalue) {
                if (svalue == value.status_desc) {
                    flag = true;
                }
            });
            if (flag == false) {
                status_Priority.push(value.status_desc);
            }
        });
        $("#ObjReg_grid").kendoGrid(
            {
                dataSource: {
                    data: data,
                    pageSize: 20,
                    change: function (e) {
                        setTimeout(function () {
                            var gd = $("#ObjReg_grid").data("kendoGrid");
                            filter_row(gd);
                            $('.k-i-close').css('display', 'none');
                            $('button.k-button-icon').css('display', 'none');
                            $('#ObjReg_grid .k-input').prop('disabled', false);
                            $('#ObjReg_grid .k-input').prop('readonly', true);
                        }, 1);
                    },
                },
                toolbar: "<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>",
                excelExport: function (e) {
                    var gd = $("#ObjReg_grid").data("kendoGrid");
                    var len = gd.dataSource._data.length;
                    var chkall = $('#chkall').is(':checked');
                    var chkfilter = $('#chkfilter').is(':checked');
                    var chktemp = $('#chktemp').is(':checked');
                    var twokendobox = true;
                    gd.dataSource.pageSize(len);
                    if (e.sender.dataSource._data.length == len) {
                        twokendobox = false;
                        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    }
                    else {
                        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    }
                    gd.dataSource.pageSize('10');
                    return false;
                },
                //filterable: {
                //    enabled: true,
                //    delay: 1500,
                //    mode: "menu, row",
                //    height: 200,
                //    click: function (e) {
                //        var gd = $("#ObjReg_grid").data("kendoGrid");
                //        filter_row(gd);
                //    }
                //},

                filterable: true,
                resizable: true, 
                filterMenuInit: function (e) {
                    var gd = $("#ObjReg_grid").data("kendoGrid");
                    filter_row(gd);
                },
                change: selectRow,
                height: 450,
                sortable: true,
                selectable: true,
                selectable: "singl",   //  Grid Row Selection
                pageable: {
                    refresh: false,
                    pageSizes: true,
                    buttonCount: 5
                },
                navigatable: true,
                groupable: false,
                columns: [
                     {
                        field: "Out_register_rowid",
                         title: "register_rowid",                         
                         hidden: true,
                     },
                     {
                         field: "Out_fpoorgn_code",
                         title: "fpoorgn_code",                        
                         hidden: true,
                     },
                {
                    field: "Out_register_no",
                    title: "Report ID",
                    filterable: {
                        extra: false,
                        operators: {
                            string: {
                                contains: "Contains"
                            }
                        }
                    }, 
                    width: 150

                },
                {
                    field: "Out_register_type_code",
                    title: "register_type_desc",                     
                    hidden: true,
                },
                {
                    field: "Out_register_type_desc",
                    title: "Report Name",
                    filterable: {
                        extra: false,
                        operators: {
                            string: {
                                contains: "Contains"
                            }
                        }
                    }, 
                    width: 150

                },
                {
                    field: "Out_register_date",
                    title: "Report Date",
                    filterable: {
                        extra: false,
                        operators: {
                            string: {
                                contains: "Contains"
                            }
                        }
                    }, 
                    width: 150

                },
                 {
                     field: "Out_status_code",
                     title: "STATUS Id",                     
                     hidden: true,
                 },
                {
                    field: "Out_status_desc",
                    title: "Status",
                    filterable: {
                        extra: false,
                        operators: {
                            string: {
                                contains: "Contains"
                            }
                        }
                    }, 
                    width: 150

                }
                ],
                editable: false
            });
        $(".k-dropdown-operator").css('display', 'none');
        $("#ObjReg_grid .k-input").attr('disabled', 'false');
    }

    function selectRow() {
        var grid = $("#ObjReg_grid").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());
        setlocalStorage("ls_pageList", selectedItem);
    }

    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: "--Select Value--"
        });
    }
</script>
<script>
    $("#btn_Edit").bind("click", function () {
        getSerializedSelectedRows('edit');
    });

    $("#btn_View").bind("click", function () {
        getSerializedSelectedRows('view');
    });

    $("#btn_new").bind("click", function () {
        btn_onClick('Create');
        location.href = "../GenerateObjRegister/GenerateObjRegisterForm";
    });
    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage("ls_pageList") != undefined) {
                var items = getlocalStorage("ls_pageList");
                if (items.length == 0) {
                    kendoAlert("Please select records");
                }
                else {
                    if (mode == "edit") {
                        btn_onClick('Edit');
                        location.href = "../GenerateObjRegister/GenerateObjRegisterForm";
                    }
                    else if (mode == "view") {
                        btn_onClick('View');
                        location.href = "../GenerateObjRegister/GenerateObjRegisterForm";
                    }
                }
            }
        }
        catch (err) {
        }
    }
</script>
<script>
    function generate_ObjectionRegister_list(res) {
        if (res != null) {
            var data = changedataType(res);
            $("#gd_ObjReg").empty();
            $("#gd_ObjReg").append("<div id='ObjReg_grid'></div>");
            ObjRegGrid(data);


        }
        else {
            ObjRegGrid([]);
        }
    }

    function listRefresh() {
        setlocalStorage('flt_condition', "");
        listpageloadfetch();
    }
</script>


