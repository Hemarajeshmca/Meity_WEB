@{
    ViewBag.Form = "Stock Adjustment";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}
<form id="productadj_form" class="form-horizontal">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:2px;padding-bottom:20px">
            <div class="row" style="padding-bottom:15px">
                <div class="col-xs-4" style="display:none">
                    <div class=" form-group">
                        <label for="txtic_name" class=" col-sm-5 control-label">Input Centre Name</label>
                        <div class=" col-sm-6">
                            <input type="text" id="ic_desc" name="In_ic_desc" class=" form-control" maxlength="50" disabled>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txt_mobile" class=" col-sm-5 control-label required">IC Name</label>
                        <div class=" col-sm-6">
                            <input id="cmb_filter" name="orgid" style="width: 100%" data-role="filtercombo">
                            <input id="txtagg_code" type="hidden" />
                            <input id="txtic_code" type="hidden" />
                        </div>

                    </div>
                </div>
                <div class="col-xs-4">
                    <div class=" form-group">
                        <label for="adjustment_no" class=" col-sm-5 control-label">Adjustment No</label>
                        <div class=" col-sm-6">
                            <input type="text" id="adjustment_no" name="In_adjustment_no" class="form-control" maxlength="50" disabled>
                        </div>
                    </div>
                </div>

                <div class="col-xs-4">
                    <div class=" form-group">
                        <label for="txtValidity" class=" col-sm-5 control-label">Adjustment Date</label>
                        <div class=" col-sm-6">
                            <input class="cusDate" data-role='datepicker' id="txtValidity" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="In_adjustment_date" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                        <input type="hidden" id="adjustment_rowid" name="IOU_adjustment_rowid" />
                        <input type="hidden" id="ic_code" name="In_ic_code" />
                        <input type="hidden" id="orgn_code" name="In_orgn_code" />
                        <input type="hidden" id="status_code" name="In_status_code" />
                        <input type="hidden" id="process_status" name="In_process_status" />
                        <input type="hidden" id="txtMode" name="In_mode_flag" value="I" />
                    </div>
                </div>
            </div>
            <div class="row" style="padding-bottom:15px">
                <div class="col-xs-12">
                    <div id="grid_prodc_adj">
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    click_act_name = "ProductAdjustmentList";
    click_ctrl_name = "ProductAdj";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script src="~/API_Scripts/StockAdjustment.js"></script>
<script src="~/API_Scripts/stockAdjustment_master_getStockAdjustment_APIClient.js"></script>
<script src="~/API_Scripts/stockAdjustment_master_getStockAdjustmentList_APIClient.js"></script>
<script src="~/API_Scripts/stockAdjustment_master_saveStockAdjustment_APIClient.js"></script>
<script src="~/API_Scripts/getStockAdjustment_Model.js"></script>
<script src="~/API_Scripts/getStockAdjustmentList_Model.js"></script>
<script src="~/API_Scripts/saveStockAdjustment_Model.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>

<script>
    $(document).ready(function () {

        kendodate_format();

        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#productadj_form");
        kendo.init(container);
        container.kendoValidator({
            rules: {
                checkdate: function (input) {
                    if (input.attr("data-role") == "datepicker") {
                        var res = isDate(input.val());
                        return res;
                    }
                    else {
                        return true;
                    }
                }
            }
        });

        Screen_Id = "ICDPROADJ";
        permission = sec_Permission(Screen_Id);

        $(".file_attach").attr("hdrtitle", "Stock Adjustment");
        $(".notes").attr("hdrtitle", "Stock Adjustment");
        $("#lblForm_menuid").text("ICDPROADJ");

        var org_type = getlocalStorage('org_type');
        setlocalStorage("status", "Active");
        setlocalStorage('status_code', "A");
        $("#hide_div").hide();
        $("#modevalue").hide();
        GridProcAdj([]);

        load_master_code();

        $("#txtValidity").kendoDatePicker({
            max: new Date(),// sets max date
            format: "dd/MM/yyyy",
            value: new Date()
        });
        $('#txtValidity').data('kendoDatePicker').enable(false);
        $("#bottom_menus").hide();

        if (getlocalStorage('btn_clk_val') == "Create") {
            $('#divCreate #review').hide();
            $("#txtMode").val("I");
            $("#bottom_menus").hide();

        }
        if (getlocalStorage('btn_clk_val') == "View" || getlocalStorage('btn_clk_val') == "Edit") {
            debugger;
            $('#divEdit #reviewEd').hide();
            $("#divEdit #deactivate").hide();
            if (getlocalStorage("ls_pageList") != undefined) {
                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("productadj_form");
                var obj_val = JSON.parse(formval);
                obj_val.adjustment_rowid = data.Out_adjustment_rowid;

                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                //Stock Adjustment Fetch start 22-05-2020

                var Context = data.context;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, adjustment_rowid: Context.Header.adjustment_rowid }),
                    url: "/ProductAdj/stockadjustmentfetch",
                    dataType: "json",
                    contentType: 'application/json; charset-utf-8;',
                    success: function (response) {
                        debugger;
                        if (response.context != null) {
                            debugger;
                            generate_StockAdjustment_header(response.context.Header);
                            generate_StockAdjustment_detail(response.context.Detail);
                        }
                    },
                    error: function (er) {
                        alert(er);
                        console.log(er);
                    }
                });


                //Stock Adjustment Fetch End

              //  retrieve_StockAdjustment_details(data);
                $("#txtMode").val("U");
            }
        }
        //$("#btnClose").click(function () {
        //    $('#HelpModal').modal('toggle');
        //    $('#HelpModal').hide();
        //    $.modal.close();

        //});
        var org = getlocalStorage('org_id');
        $('#txtagg_code').val(org);
     var In_agg_code = $("#txtagg_code").val();
        var data = { In_agg_code: In_agg_code, module: "ICD" };
        $.ajax({
          url: '@Url.Action("lcdcenter_search", "Product")',
         type: "post",
        contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response) {
                debugger;
                if (response != null) {
                    debugger;
                    var itemArr = [];
                    for (var i = 0; i < response.length; i++) {
                        var list = {};
                        list.id = response[i].Out_orgn_rowid
                        list.code = response[i].Out_orgn_code;
                        list.desc = response[i].Out_orgn_desc;
                        itemArr.push(list);
                    }
                    filter_combobox("cmb_filter", itemArr);

                }
                else {
                    $("#cmb_filter").empty();
                }
            },
            error: function (er) {
                alert(er);
                console.log(er);
            }
        });

    });
</script>
<script>

    function load_master_code() {
        var data = {};
        data.screen_Id = "ICDPROADJ";
        var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
    }
</script>
<script>
    function GridProcAdj(data) {
        try {
            $("#grid_prodc_adj").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_adjustmentdtl_rowid: { type: "string" },
                                In_adjustment_no: { type: "string" },
                                In_receipt_ref_doc_no: { type: "string" },
                                current_qty: { type: "string", editable: false },
                                In_ref_doc_date: { type: "string" },
                                In_adjustment_type: { type: "string" },
                                In_adjustment_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_adjustment_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Adjustment Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                In_product_catg_code: { type: "string" },
                                In_product_catg_desc: { type: "string" },
                                In_product_subcatg_code: { type: "string" },
                                In_product_subcatg_desc: { type: "string", editable: false },
                                In_product_code: { type: "string", validation: { required: { message: "Product Code cannot be blank" } } },
                                In_product_desc: { type: "string", editable: false },
                                In_adjustment_qty: { type: "string", validation: { required: { message: "adjustment qty cannot be blank" } } },
                                In_uom_type: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='In_remarks']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Uom Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                In_remarks: { type: "string" },
                                In_status_code: { type: "string", editable: false },
                                In_status_desc: { type: "string", editable: false },
                                In_mode_flag: { type: "string", editable: false },
                                qty: { type: "string", editable: false },
                                In_out_qty: { type: "string", defaultValue: "0" },
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 300,
                groupable: false,
                dataBinding: setDefaultValues,

                edit: function (e) {
                    debugger;
                    setDefaultValues(e);
                    var rowindex = this.table.length;
                    var columnIndex = this.cellIndex(e.container);
                    var fieldName = this.thead.find("th").eq(columnIndex).data("field");
                    if (fieldName == "In_receipt_ref_doc_no") {
                        if (e.model.In_adjustment_type != 'QCD_ICD_PURCHASERETURN' && e.model.In_adjustment_type != 'QCD_ICD_SALERETURN') {
                            this.closeCell(); // prevent editing
                            var theCell = $('#grid_prodc_adj tbody td:eq(11)');//sample selector for a cell
                            $('#grid_prodc_adj').data('kendoGrid').editCell(theCell);//ask the Grid to put that cell in edit mode

                        }
                    }
                    var grid_validate_msg = "";
                    grid_validate_msg = "Given quantity is greater than stock";
                    e.container.find("input[name='In_adjustment_qty']").focusout(function () {

                        if (e.model.In_adjustment_type == 'QCD_ICD_OPENINGBALANCE' && parseFloat(e.model.qty) > 0) {

                            // e.model.adjustment_qty = 0;adjustment_type

                        }
                        if (e.model.In_adjustment_type == "QCD_ICD_OPENINGBALANCE") {

                        }
                        else if (e.model.In_adjustment_type == "QCD_ICD_PICCTYPEINC" || e.model.In_adjustment_type == "QCD_ICD_PICCTYPEDEC") { }
                        else {

                            if (parseFloat($(this).val()) > parseFloat(e.model.qty)) {
                                //e.model.qty = 0;

                                e.model.In_adjustment_qty = 0;
                                var invgrid = $("#grid_prodc_adj").data("kendoGrid");
                                invgrid.dataSource.sync();
                                kendoAlert(grid_validate_msg);
                                return false;
                            }
                            else if (parseFloat($(this).val()) > parseFloat(e.model.current_qty)) {
                                e.model.In_adjustment_qty = 0;
                                var invgrid = $("#grid_prodc_adj").data("kendoGrid");
                                invgrid.dataSource.sync();
                                kendoAlert(grid_validate_msg);
                                return false;

                            }

                        }


                    })

                    if (fieldName = "In_product_code") {
                        var currentproduct_code = e.model.In_product_code;
                        var currefDocno = e.model.In_receipt_ref_doc_no;
                        var grid_val = JSON.stringify($("#grid_prodc_adj").data().kendoGrid._data);
                        var Bind = {};
                        Bind = grid_val;
                        var result = JSON.parse(Bind);
                        var count = 0;
                        $.each(result, function (index, value) {
                            var product_code = result[index].In_product_code;
                            var refDocno = result[index].In_receipt_ref_doc_no;
                            if (currentproduct_code == product_code && product_code != '' && product_code != undefined
                                && currefDocno == refDocno && currefDocno != '' && currefDocno != undefined
                            ) {
                                count = count + 1;
                                if (count > 1) {
                                    kendoAlert("Product code already exists");
                                    e.model.In_product_code = "";
                                    var entityGrid = $("#grid_prodc_adj").data("kendoGrid");
                                    var rows = entityGrid.select();
                                    rows.each(function (index, row) {
                                        var selectedItem = entityGrid.dataItem(row);
                                        entityGrid.dataSource.remove(selectedItem);
                                    });
                                }
                            }
                        });
                    }
                    var boolean = true;
                    var icname = $('#cmb_filter').val();
                    if (icname == "" || icname == null) {
                        $("#grid_prodc_adj").data('kendoGrid').dataSource.data([]);
                        kendoAlert("Please fill IC Name");
                        return false;
                    }
                },
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        command: [
                            {
                                name: "Delete",
                                id: "Delete",
                                imageClass: "fa fa-close",
                                click: function (e) {
                                    // e.preventDefault();
                                    var grid = $("#grid_prodc_adj").data("kendoGrid");
                                    var dataItem = $("#grid_prodc_adj").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                    DeleteWindowEvent(e, dataItem, grid);
                                    e.stopImmediatePropagation()
                                }
                            },
                        ], title: "", width: "35px",

                    },
                    {
                        field: "In_adjustmentdtl_rowid",
                        title: "adjustmentdtl_rowid",
                        width: 100,
                        hidden: true,
                    },

                    {
                        field: "In_adjustment_no",
                        title: "adjustment_no",
                        width: 100,
                        hidden: true,
                    },
                    {
                        field: "In_adjustment_type",
                        title: "adjustment_type",
                        width: 100,
                        hidden: true,
                    },
                    {
                        field: "In_adjustment_desc",
                        title: "Adjustment Type",
                        editor: function (container, options) {
                            debugger;
                            combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "In_adjustment_type", "grid_prodc_adj");
                        },
                        width: 100,
                    },
                    {
                        field: "In_receipt_ref_doc_no",
                        title: "GRN/Invoice No",
                        editor: Getinvoice,
                        //editor: '<div class="input-group input-group-sm"><input type="text" readonly name="product_category" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:hsn_code"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Details" searchid="S03" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>',
                        width: 100,
                    },
                    {
                        field: "In_ref_doc_date",
                        title: "ref_doc_date",
                        width: 100,
                        hidden: true,
                    },
                    {
                        field: "In_product_catg_code",
                        title: "product_catg_code",
                        width: 100,
                        hidden: true,
                    },
                    {
                        field: "In_product_catg_desc",
                        title: "Product Category",
                        // editor: '<div class="input-group input-group-sm"><input type="text" readonly name="product_catg_desc" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:product_catg_desc"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Details" searchid="S24" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>',
                        editor: Getproduct,
                        width: 100,
                        hidden: true
                    },
                    {
                        field: "In_product_subcatg_code",
                        title: "product_subcatg_code",
                        width: 100,
                        hidden: true,
                    },
                    {
                        field: "In_product_subcatg_desc",
                        title: "Product Sub-Category",
                        width: 100,
                        hidden: true


                    },

                    {
                        field: "In_product_code",
                        title: "Product Code",
                        editor: Getproduct,
                        width: 100,

                    },

                    {
                        field: "In_product_desc",
                        title: "Product Name",
                        width: 100,

                    },
                    {
                        field: "In_uom_type",
                        title: "Uom Type",
                        editor: function (container, options) {
                            combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "", "grid_prodc_adj");
                        },
                        width: 100,
                    },
                    {
                        field: "qty",
                        title: "Inward/Outward Qty",
                        attributes: { style: "text-align:right;" },
                        width: 100,


                    },
                    {
                        field: "In_adjustment_qty",
                        title: "Adjusted Qty",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },
                    },

                    {
                        field: "current_qty",
                        title: "Current Qty",
                        width: 100,
                        hidden: true,

                    },
                    {
                        field: "In_remarks",
                        title: "Remarks",
                        width: 100,
                    },
                    {
                        field: "In_status_code",
                        title: "status_code",
                        hidden: true
                    },
                    {
                        field: "In_status_desc",
                        title: "status_desc",
                        width: 100,
                        hidden: true
                    },

                    {
                        field: "In_mode_flag",
                        title: "Mode",
                        hidden: true
                    },

                    {
                        field: "In_out_qty",
                        title: "In/Out Qty",
                        width: 100,
                        hidden: true,

                    }
                ],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }
    load_master_code();
    In_adjustment_desc_list = grid_comboScreen_mastercodes("QCD_ICD_AdjType");
    In_uom_type_list = grid_comboScreen_mastercodes("QCD_UOM_TYPE");



    function setGridFocus(gridID, rowIndex, colIndex) {
        var grid = $('#' + gridID).data('kendoGrid');

        var cell = $('#' + gridID).find('tbody tr:eq(' + rowIndex + ') td:eq(' + colIndex + ')');

        grid.editCell(cell);
        var editTextCell = cell.find('input');
        editTextCell.focus();

    }

    function Getproduct(container, options) {
        debugger;
        var gridDataArray = $('#grid_prodc_adj').data('kendoGrid')._data;
        if (gridDataArray[0].In_adjustment_type == "QCD_ICD_OPENINGBALANCE") {
            $('<div class="input-group input-group-sm"><input type="text" readonly name="product_code" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:product_code"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Openingbalance Adjustment" searchid="S56" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>').appendTo(container);
        }
        else if (gridDataArray[0].In_adjustment_type == "QCD_ICD_PICCTYPEINC") {
            $('<div class="input-group input-group-sm"><input type="text" readonly name="product_code" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:product_code"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Product Add Adjustment" searchid="S57" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>').appendTo(container);
        }
        else if (gridDataArray[0].In_adjustment_type == "QCD_ICD_PICCTYPEDEC") {
            $('<div class="input-group input-group-sm"><input type="text" readonly name="product_code" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:product_code"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Product Add Adjustment" searchid="S57" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>').appendTo(container);
        }
        else if (gridDataArray[0].In_adjustment_type == "QCD_ICD_PICCTYPENEG") {
            $('<div class="input-group input-group-sm"><input type="text" readonly name="product_code" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:product_code"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Product Minus Adjustment" searchid="S57" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>').appendTo(container);
        }
        else if (gridDataArray[0].In_adjustment_type == "QCD_ICD_PURCHASERETURN") {
            $('<div class="input-group input-group-sm"><input type="text" readonly name="product_code" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:product_code"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Purchase Return Adjustment" searchid="58" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>').appendTo(container);
        }
        else if (gridDataArray[0].In_adjustment_type == "QCD_ICD_SALERETURN") {
            $('<div class="input-group input-group-sm"><input type="text" readonly name="product_code" maxlength="10" style="width:100px;color:black" onkeypress="return speical_char(event)" data-bind="value:product_code"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Sales Return Adjustment" searchid="59" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>').appendTo(container);
        }
        else {
            $('<div class="input-group input-group-sm"><input type="text" readonly name="In_receipt_ref_doc_no" maxlength="10" style="width:100px;color:black" onkeypress="return speical_char(event)" data-bind="value:receipt_ref_doc_no"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Details" searchid="S36" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>').appendTo(container);
        }
    }
    function Getinvoice(container, options) {
        debugger;
        var gridDataArray = $('#grid_prodc_adj').data('kendoGrid')._data;

        if (gridDataArray[0].In_adjustment_type == "QCD_ICD_PURCHASERETURN") {
            $('<div class="input-group input-group-sm"><input type="text" readonly name="In_receipt_ref_doc_no" maxlength="10" style="width:100px;color:black" onkeypress="return speical_char(event)" data-bind="value:In_receipt_ref_doc_no"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Purchase Return Adjustment" searchid="S22" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>').appendTo(container);
        }
        else if (gridDataArray[0].In_adjustment_type == "QCD_ICD_SALERETURN") {
            $('<div class="input-group input-group-sm"><input type="text" readonly name="In_receipt_ref_doc_no" maxlength="10" style="width:100px;color:black" onkeypress="return speical_char(event)" data-bind="value:In_receipt_ref_doc_no"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Sales Return Adjustment" searchid="S23" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>').appendTo(container);
        }
        else {
            $('<div class="input-group input-group-sm"><input type="text" readonly name="In_receipt_ref_doc_no" maxlength="10" style="width:100px;color:black" onkeypress="return speical_char(event)" data-bind="value:In_receipt_ref_doc_no"/><span class="input-group-btn" style="padding-right: 90px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Details" searchid="S03" data-target="#HelpModal" onclick=transfer(this,"grid","grid_prodc_adj","GridProcAdj") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>').appendTo(container);
        }
    }
</script>

<script>
    function save() {
        debugger;
        try {

            var mandatory_check = true;
            if ($("#txtMode").val() == "S") {
                $("#txtMode").val('U');
            }
            if ($("#adjustment_rowid").val() == "") {
                $("#adjustment_rowid").val('0');
            }
            if ($("#status_code").val() == "") {
                $("#status_code").val('A');
            }
            if ($("#process_status").val() == "") {
                $("#process_status").val('o');
            }
            $('#ic_desc').prop("disabled", false);
            $('#adjustment_no').prop("disabled", false);
            $('#txtValidity').data('kendoDatePicker').enable(true);
            var formval = form_Serialize("productadj_form");
            var obj_val = JSON.parse(formval);
            $('#ic_desc').prop("disabled", true);
            $('#txtValidity').data('kendoDatePicker').enable(false);
            //$('#adjustment_no').prop("disabled", true);
            if (obj_val.hasOwnProperty('In_adjustment_date')) {
                if (obj_val.In_adjustment_date != '')
                    obj_val.In_adjustment_date = getFormated_StringDate(obj_val.In_adjustment_date);
            }
            var rowtime_date = new Date();

            if (obj_val.In_row_timestamp == undefined || obj_val.In_row_timestamp == "") {
                obj_val.In_row_timestamp = rowtime_date;
            }
            var grid = $("#grid_prodc_adj").data("kendoGrid");
            var gridData = grid.dataSource.view();
            var grid_val = JSON.stringify($("#grid_prodc_adj").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);

            var grid_validate_msg = "";

            if (result.length == 0) {
                kendoAlert("Atleast one record needs to be entered");
                mandatory_check = false;
                return false;
            }
            $.each(result, function (key, value) {
                debugger;
                if (value.In_adjustment_qty == "") {
                    debugger;
                    grid_validate_msg += "Adjustment qty cannot be blank <br>";
                    mandatory_check = false;
                }
                if (value.In_adjustment_qty == "0" || value.In_adjustment_qty == "0.00") {
                    debugger;
                    grid_validate_msg += "Adjustment qty cannot be Zero <br>";
                    mandatory_check = false;
                }
                if (value.In_adjustment_type == "QCD_ICD_SALERETURN" || value.In_adjustment_type == "QCD_ICD_PURCHASERETURN") {
                    debugger;
                    if (value.In_receipt_ref_doc_no == "") {
                        grid_validate_msg += "GRN no. cannot be blank <br>";
                        mandatory_check = false;
                    }
                }

                if (value.In_remarks == "") {
                    debugger;
                    grid_validate_msg += "remarks cannot be blank <br>";
                    mandatory_check = false;
                }
                if (value.In_product_code == "") {
                    debugger;
                    grid_validate_msg += "Product Code cannot be blank <br>";
                    mandatory_check = false;
                }

                if (mandatory_check == false) {
                    kendoAlert(grid_validate_msg);
                    return false;
                }
            });

            if (mandatory_check == true) {
                $.each(result, function (index, value) {
                    debugger;
                    var row_id = value.In_adjustmentdtl_rowid;

                    if (row_id == undefined || row_id == "") {
                        debugger;
                        result[index].In_adjustmentdtl_rowid = 0;
                    }
                    var remarks = value.In_remarks;
                    if (remarks == undefined) {
                        result[index].In_remarks = "N/A";
                    }
                    var mode = value.In_mode_flag;
                    console.log(getlocalStorage('btn_clk_val'));
                    if (getlocalStorage('btn_clk_val') == "Edit") {
                        console.log()
                        if (mode == "S") {
                            debugger
                            result[index].In_mode_flag = "U";
                        }
                        //else {
                        //    result[index].In_mode_flag = "I";
                        //}
                    }
                    else {
                        if (mode == "") {
                            debugger;
                            result[index].In_mode_flag = "I";
                        }
                        if (mode == "S") {
                            result[index].In_mode_flag = "U";
                        }
                    }

                    var status = value.In_status_code;
                    if (status == "") {
                        result[index].In_status_code = "A";
                    }
                    var statusdes = value.In_status_desc;
                    if (statusdes == "" || statusdes == null) {
                        result[index].In_status_desc = "A";
                    }
                    var inoutqty = value.In_out_qty;
                    if (inoutqty == "" || inoutqty == null || inoutqty == "0") {
                        debugger;
                        result[index].In_out_qty = result[index].qty;
                    }


                });

                var obj_grid_val = result;
                var data = {};
                data.context = getContext();


                data.context.Header = obj_val;
                data.context.Detail = obj_grid_val;
                if (getlocalStorage('btn_clk_val') == "Create") {
                    data.context.Header.In_ic_code = $("#txtic_code").val();
                }
                else {
                    data.context.Header.In_ic_code = $("#ic_code").val();
                }
                //stock adjustment Save start 22-05-2020
                var Context = data.context;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
                    url: "/ProductAdj/stockadjustmentsave",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        var res = JSON.parse(response);
     if (res.applicationException.errorDescription == null) {
                        var mode = $("#txtMode").val();
                        if (mode == "I") {
                            kendoAlert("StockAdjustment Details saved successfully");
                            get_StockAdjustment_details(res.context.header);
                            //get_attribute_group_details(responseJSON.context.Header.entitygrp_rowid);
                        }
                        else if (mode == "D") {
                            kendoAlert("StockAdjustment Details inactivate successfully");
                            get_StockAdjustment_details(res.context.header);
                        }
                        else {
                            kendoAlert("StockAdjustment Details saved successfully");
                            get_StockAdjustment_details(res.context.header);
                        }  
     }
                    else {
                        kendoAlert(res.applicationException.errorDescription);
                    }
                    }

                });
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_StockAdjustment_header(res) {
        try {
            $("#adjustment_no").val(res.In_adjustment_no);
            $("#txtValidity").val(res.In_adjustment_date);
            $("#cmb_filter").val(res.In_ic_desc);
            $("#cmb_filter").attr("readonly", "");
            $("#ic_code").val(res.In_ic_code);
            $("#adjustment_rowid").val(res.IOU_adjustment_rowid);
            $("#DocStat").val(res.In_process_status);
            $("#txtMode").val(res.In_mode_flag);
            $('#adjustment_no').prop("disabled", true);
        } catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_StockAdjustment_detail(res) {
        debugger;
        try {
            if (res != null) {

                var data = changedataType(res);
                setlocalStorage("invoice_data", data);
                for (var i = 0; i < data.length; i++) {
                    data[i].In_adjustment_qty = (parseFloat(data[i].In_adjustment_qty)).toFixed(2);
                    data[i].qty = (parseFloat(data[i].In_out_qty)).toFixed(2);
                }
                GridProcAdj(data);
            }
            else {
                GridProcAdj([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function get_StockAdjustment_details(res) {

        var formval = form_Serialize("productadj_form");
        var obj_val = JSON.parse(formval);
        //obj_val.orgn_code = res.In_ic_code;
        obj_val.adjustment_rowid = res.ioU_adjustment_rowid;

        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Header = obj_val;

        //Stock Adjustment Fetch start 22-05-2020

        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, adjustment_rowid: Context.Header.adjustment_rowid }),
            url: "/ProductAdj/stockadjustmentfetch",
            dataType: "json",
            contentType: 'application/json; charset-utf-8;',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    debugger;
                    generate_StockAdjustment_header(response.context.Header);
                    generate_StockAdjustment_detail(response.context.Detail);
                }
            },
            error: function (er) {
                alert(er);
                console.log(er);
            }
        });


        //Stock Adjustment Fetch End

    }
</script>

<script>
    function grid_control() {
        try {
            var control_Name = [
                { "dataCol": "", "grid_row_col": "In_adjustmentdtl_rowid" },
                { "dataCol": "", "grid_row_col": "In_adjustment_no" },
                { "dataCol": "", "grid_row_col": "In_adjustment_type" },
                { "dataCol": "", "grid_row_col": "In_adjustment_desc" },
                { "dataCol": "grn_no", "grid_row_col": "In_receipt_ref_doc_no" },
                { "dataCol": "", "grid_row_col": "In_ref_doc_date" },
                { "dataCol": "product_catg_code", "grid_row_col": "In_product_catg_code" },
                { "dataCol": "ProductCategory", "grid_row_col": "In_product_catg_desc" },
                { "dataCol": "product_subcatg_code", "grid_row_col": "In_product_subcatg_code" },
                { "dataCol": "ProductSubCategory", "grid_row_col": "In_product_subcatg_desc" },
                { "dataCol": "ProductCode", "grid_row_col": "In_product_code" },
                { "dataCol": "ProductName", "grid_row_col": "In_product_desc" },
                { "dataCol": "", "grid_row_col": "In_adjustment_qty" },
                { "dataCol": "", "grid_row_col": "In_adjustment_type" },
                { "dataCol": "", "grid_row_col": "In_status_code" },
                { "dataCol": "", "grid_row_col": "In_mode_flag" },
                { "dataCol": "", "grid_row_col": "In_adjustment_desc" },
                { "dataCol": "qty", "grid_row_col": "qty" },
                { "dataCol": "uom_desc", "grid_row_col": "In_uom_type" },
                { "dataCol": "", "grid_row_col": "In_uom_type" },
                { "dataCol": "", "grid_row_col": "In_remarks" },
                { "dataCol": "current_qty", "grid_row_col": "current_qty" },
                { "dataCol": "", "grid_row_col": "uid" }
            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function controlName() {
        try {
            var control_Name = [
            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function trans_input_data() {
        try {
            var org = ""
            if ($("#ic_code").val() != "") {
                org = $("#ic_code").val();
                $("#txtic_code").val(org);
            } else {
                org = $("#cmb_filter").val();
                $("#txtic_code").val(org);
            }
            var trans_coll = [

                { "trasfer": "NO", "dataCol": "", "controlId": "", "grid_id": "", "grid_row_col": "" },
                { "trasfer": "Yes", "dataCol": "ic_code", "controlId": "txtic_code", "grid_id": "grid_inward", "grid_row_col": "" },
                //  { "trasfer": "Yes", "dataCol": "In_receipt_ref_doc_no", "controlId": "In_receipt_ref_doc_no", "grid_id": "grid_prodc_adj", "grid_row_col": "" },
                { "trasfer": "Yes", "dataCol": "product_catg_desc", "controlId": "", "grid_id": "grid_prodc_adj", "grid_row_col": "" },
                { "trasfer": "Yes", "dataCol": "adjustment_desc", "controlId": "", "grid_id": "grid_prodc_adj", "grid_row_col": "" },
                { "trasfer": "Yes", "dataCol": "adjustment_desc", "controlId": "", "grid_id": "grid_prodc_adj", "grid_row_col": "" },
                { "trasfer": "Yes", "dataCol": "In_receipt_ref_doc_no", "controlId": "", "grid_id": "grid_prodc_adj", "grid_row_col": "" },
                { "trasfer": "Yes", "dataCol": "product_code", "controlId": "", "grid_id": "grid_prodc_adj", "grid_row_col": "" },
                { "trasfer": "Yes", "dataCol": "product_desc", "controlId": "", "grid_id": "grid_prodc_adj", "grid_row_col": "" },
                { "trasfer": "Yes", "dataCol": "uom_desc", "controlId": "", "grid_id": "grid_prodc_adj", "grid_row_col": "" }
            ];
            return trans_coll;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


</script>

