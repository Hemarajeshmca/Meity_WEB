@{
    ViewBag.Form = "CC-CP Map";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";
}

<form id="CCMAp" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="Text1" class="col-sm-5 control-label">Aggregator Org Name</label>
                        <div class="col-sm-6">
                            <input id="aggrorgn_code_desc" name="aggrorgn_code_desc" class="form-control" style="width: 100%" disabled>
                            <input type="hidden" name="aggrorgn_code" id="aggrorgn_code" value="">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="Text2" class="col-sm-5 control-label">Aggregator Org Type </label>
                        <div class="col-sm-6">
                            <input id="txtaggrorgn_type_desc" name="txtaggrorgn_type_desc" class="form-control" value="" style="width: 100%" disabled>
                            <input type="hidden" name="aggrorgn_type" id="aggrorgn_type" value="">
                            <input type="hidden" name="cc_aggrloc_code" id="cc_aggrloc_code" value="">
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group" style="display:none;">
                    <label for="txtMode" class="col-sm-5 control-label">Mode</label>
                    <div class="col-sm-4">
                        <input type="text" id="txtMode" name="mode_flag" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <section class="col-md-12">
                <div id="tab_list" class="col-md-12">
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a href="#CollectionCentre" role="tab" data-toggle="tab">
                                Collection Centre
                            </a>
                        </li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane fade active in" id="CollectionCentre">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div id="grid"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>

        <hr />
        <div class="row" style="padding-bottom:15px">
            <div class="col-sm-5">
                <div class="form-group">
                    <div class="col-sm-9">
                        <input id="Text3" type="text" name="ccName" class="form-control" style="border:none;font-weight:bold;">
                    </div>
                </div>
            </div>
        </div>
        <div class="row" style="padding-bottom:15px">
            <div class="col-xs-6">
                <label>Villages Covered</label>
                <div id="grid_Villages">
                </div>
            </div>
            <div class="col-xs-6">
                <label>Mapped Chilling Plants</label>
                <div id="grid_CP">
                </div>
            </div>
        </div>
    </div>
</form>

<script>
    click_act_name = "AggregatorLocationsListCC";
    click_ctrl_name = "AggregatorLocations";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script src="~/API_Scripts/CP_CC_retrieve_CP_CC_List_APIClient.js"></script>
<script src="~/API_Scripts/CP_CC_retrieveCP_CC_APIClient.js"></script>
<script src="~/API_Scripts/CP_CC_saveCP_CC_APIClient.js"></script>
<script src="~/API_Scripts/retrieveCP_CC_List_Model.js"></script>
<script src="~/API_Scripts/retrieveCP_CC_Model.js"></script>
<script src="~/API_Scripts/saveCP_CC_Model.js"></script>
<script src="~/API_Scripts/CP_CC.js"></script>
<script src="~/API_Scripts/CCMap.js"></script>
<script src="~/API_Scripts/CCMap_retrieveCCMap_APIClient.js"></script>
<script src="~/API_Scripts/CCMap_saveCCMap_APIClient.js"></script>
<script src="~/API_Scripts/retrieveCCMap_Model.js"></script>
<script src="~/API_Scripts/saveCCMap_Model.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>

<script>
    var permission = "";
    $(document).ready(function () {
        master_milkmap();
        var data = [];
        grid(data);
        gridVillages([]);
        gridCP([]);

        var org_id = getlocalStorage('org_id');
        var org_type = getlocalStorage('org_type');
        var orgtname = getlocalStorage('orgtname');
        var org = getlocalStorage('org');
        $('#aggrorgn_code_desc').val(org);
        $('#txtaggrorgn_type_desc').val(orgtname);
        $('#aggrorgn_code').val(org_id);
        $('#aggrorgn_type').val(org_type);

        var formval = form_Serialize("Checklist_DNew");
        var obj_val = JSON.parse(formval);

        obj_val.aggrorgn_code = $('#aggrorgn_code').val();
        obj_val.aggrorgn_type = $('#aggrorgn_type').val();

        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Header = obj_val;
        retrieve__Cpccactivity_details(data);

        setlocalStorage("status", "Active");

        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#CCMAp");
        kendo.init(container);
        container.kendoValidator({
        });

        $(".file_attach").attr("hdrtitle", "Collection Centre");
        $(".notes").attr("hdrtitle", "Collection Centre");
        $("#lblForm_menuid").text("CCMAP");

        Screen_Id = "MAPCCMAP";
        permission = sec_Master_Permission(Screen_Id);
    });
</script>

<script>
    function load_master_code() {
        try {
            debugger;
            var data = {};
            var context = WebAPIProxy.getContext();
            data.userId = context.userId
            data.orgnId = context.orgnId
            data.locnId = context.locnId
            data.localeId = context.localeId
            data.screen_Id = "MAPCCMAP";
            var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<script>

    function grid(data) {
        try {
            $("#grid").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                status_code: { type: "string", defaultValue: "A" },
                                status_desc: { type: "string", defaultValue: getlocalStorage('status'), editable: false },
                                row_timestamp: { type: "date" },
                                aggrloc_type: { type: "string", defaultValue: "AGG_LOC_CC" },
                                aggrloc_code: { type: "string", editable: false },
                                aggrloc_shortdesc: { editable: false },
                                aggrloc_name: { editable: false },
                                mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },

                height: 250,
                groupable: false,
                change: onChangeSelection,
                //dataBound:onDataBound,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                 {
                     field: "aggrloc_code",
                     title: "Collection Center ID ",
                     width: 100,

                 },
                 {
                     field: "aggrloc_shortdesc",
                     title: "Collection Center Short Desc",

                     width: 100,

                 },
                 {
                     field: "aggrloc_name",
                     title: "Collection Center Name",
                     width: 100,

                 },
                 {
                     field: "status_code",
                     title: "status_code",
                     hidden: true
                 },
                 {
                     field: "status_desc",
                     title: "Status",
                     width: 100,

                 },
                {
                    field: "row_timestamp",
                    title: "row_timestamp",
                    hidden: true
                },
                {
                    field: "mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }
    function onChangeSelection() {
        try {
            var grid = $("#grid").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            var formval = form_Serialize("CCMAp");
            var obj_val = JSON.parse(formval);
            obj_val.cc_aggrloc_code = selectedItem.aggrloc_code;

            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            retrieve_CCMap_details(data);

            var ccName = "Collection Centre: " + selectedItem.aggrloc_name;
            $("#Text3").val(ccName);
            $("#cc_aggrloc_code").val(selectedItem.aggrloc_code);
         
            function combo_dependent_man(container, cmbid, datasource, datafield, code_datafield, grid_id, options) { }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<script>
    var status_desc_list = "";
    function gridVillages(data) {
        try {
            $("#grid_Villages").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                village_code: { type: "string" },
                                status_code: { type: "string", defaultValue: "A" },
                                status_desc: { type: "string", defaultValue: getlocalStorage('status'), editable: false },
                                row_timestamp: { type: "date" },
                                mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 250,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_Villages').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                edit: OnEdit,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                {
                    name: "Delete",
                    id: "Delete",
                    imageClass: "fa fa-close",
                    click: function (e) {                       
                        var grid = $("#grid_Villages").data("kendoGrid");
                        var dataItem = $("#grid_Villages").data("kendoGrid").dataItem($(e.target).closest("tr"));
                        DeleteWindowEvent(e, dataItem, grid);
                        e.stopImmediatePropagation()
                    }
                },
                    ], title: "Action", width: "50px",
                },
                {
                    field: "ccvillage_rowid",
                    title: "ccvillage_rowid",
                    hidden: true
                },
                 {
                     field: "village_code",
                     title: "Villages Covered",
                     hidden: true
                 },
                 {
                     field: "village_desc",
                     title: "Villages Covered",
                     editor: function (container, options) {
                         combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "village_code", "grid_Villages")
                     },
                     width: 100,

                 },
                 {
                     field: "status_code",
                     title: "status_code",
                     hidden: true
                 },
                 {
                     field: "status_desc",
                     title: "Status",
                     editor: function (container, options) {
                         combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "", "grid")
                     },
                     width: 100,

                 },
                {
                    field: "row_timestamp",
                    title: "row_timestamp",
                    hidden: true
                },
                {
                    field: "mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }
    function OnEdit(e) {
        setDefaultValues(e);

        e.container.find("input[name='village_code']").each(function () {
            if ($(this).val() != "" && e.model.mode_flag != "I") {
                $(this).attr("disabled", "disabled");
            }
        });

    }
    load_master_code();
    village_desc_list = grid_comboScreen_mastercodes("QCD_UN_VILLAGE");
    status_desc_list = grid_comboScreen_mastercodes("ORG_AGG");
</script>
<script>

    var cp_aggrloc_desc_list = "";
    var final_aggr_desc_list = "";
    function gridCP(data) {
        try {
            $("#grid_CP").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                cp_aggrloc_code: { editable: false },
                                status_code: { type: "string", defaultValue: "A" },
                                status_desc: { type: "string", defaultValue: getlocalStorage('status'), editable: false },
                                row_timestamp: { type: "date" },
                                mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 250,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_CP').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },            
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                {
                    name: "Delete",
                    id: "Delete",
                    imageClass: "fa fa-close",
                    click: function (e) {                       
                        var grid = $("#grid_CP").data("kendoGrid");
                        var dataItem = $("#grid_CP").data("kendoGrid").dataItem($(e.target).closest("tr"));
                        DeleteWindowEvent(e, dataItem, grid);
                        e.stopImmediatePropagation()
                    }
                },
                    ], title: "Action", width: "50px",
                },
                 {
                     field: "cccp_rowid",
                     title: "cccp_rowid",
                     hidden: true
                 },
                {
                    field: "cp_aggrloc_code",
                    title: "Mapped Chilling Plant",
                    hidden: true
                },
                 {
                     field: "cp_aggrloc_desc",
                     title: "Mapped Chilling Plant",
                     editor: function (container, options) {
                         combo_dependent_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "cp_aggrloc_code", "grid_CP", options)
                     },
                     width: 100,
                 },
                 {                    
                     field: "final_aggr_code",
                     title: "Final dependent",
                     hidden: true
                 },
                 {
                     field: "final_aggr_desc",
                     title: "Final Aggregator",
                     editor: function (container, options) {
                         combo_dependent_man1(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "final_aggr_code", "grid_CP")
                     },
                     width: 100,
                 },
                 {
                     field: "status_code",
                     title: "status_code",
                     hidden: true
                 },
                 {
                     field: "status_desc",
                     title: "Status",
                     editor: function (container, options) {
                         combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "status_code", "grid")
                     },
                     width: 100,

                 },
                {
                    field: "row_timestamp",
                    title: "row_timestamp",
                    hidden: true
                },
                {
                    field: "mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }

    cp_aggrloc_desc_list = grid_comboScreen_mastercodes("CHILLING_PLANT");
    final_aggr_desc_list = grid_comboScreen_mastercodes("ORGCODE");
</script>
<script>
    function save() {
        try {
            if ($("#txtMode").val() == "S") {
                $("#txtMode").val('U');
            }
            var formval = form_Serialize("CCMAp");
            var obj_val = JSON.parse(formval);
            var grid_val = JSON.stringify($("#grid_Villages").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            //result.version_no = "0";
            $.each(result, function (index, value) {
                var row_id = value.ccvillage_rowid;
                if (row_id == undefined) {
                    result[index].ccvillage_rowid = "0";
                }
                var mode = result[index].mode_flag;
                if (mode == "S") {
                    result[index].mode_flag = "U";
                }
            });
            var obj_grid_val = result;

            var grid_val1 = JSON.stringify($("#grid_CP").data().kendoGrid._data);
            var Bind1 = {};
            Bind1 = grid_val1;
            var result1 = JSON.parse(Bind1);
            //result.orgn_rowid = "0";
            $.each(result1, function (index, value) {
                var cccp_rowid = value.cccp_rowid;
                if (cccp_rowid == undefined) {
                    result1[index].cccp_rowid = "0";
                }
                var mode = result1[index].mode_flag;
                if (mode == "S") {
                    result1[index].mode_flag = "U";
                }
            });
            var obj_grid_val1 = result1;
            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            data.context.CCVillage = obj_grid_val;
            data.context.CCCP = obj_grid_val1;
            save_CCMap_details(data);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function DeleteDetails() {
        try {
            $("#txtMode").val('D');
            save();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_CpccActivity_header(res) {

    }

    function generate_CpccActivity_detail(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid(data);

            }
            else {

                grid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_CCMap_CCVillage(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                gridVillages(data);
            }
            else {

                gridVillages([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_CCMap_CCCP(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                gridCP(data);
            }
            else {

                gridCP([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function combo_dependent_man(container, cmbid, datasource, datafield, code_datafield, grid_id, options) {
        try {
            var data = datasource;
            $('<input  id="' + cmbid + '" data-text-field="desc" data-value-field="desc" data-bind="value:' + datafield + '" name ="' + datafield + '"/>').appendTo(container).kendoComboBox({
                autoBind: false,
                filter: "contains",
                dataSource: data,
                change: function (e) {
                    var cmb_value = this.value();
                    if (cmb_value && this.selectedIndex == -1) {
                        this.value("");
                    }
                    var cmb_var = $("#" + grid_id).data("kendoGrid");
                    var selectedItem = cmb_var.dataItem(cmb_var.select());
                    var combobox_data = $("#" + cmbid).data("kendoComboBox");
                    if (combobox_data != undefined && combobox_data.selectedIndex == -1) {
                        selectedItem[datafield] = "";
                        selectedItem[code_datafield] = "";
                    }
                    else {
                        selectedItem[datafield] = combobox_data.dataItem(combobox_data.selectedIndex).desc;
                        selectedItem[code_datafield] = combobox_data.dataItem(combobox_data.selectedIndex).code;
                        selectedItem["final_aggr_code"] = combobox_data.dataItem(combobox_data.selectedIndex).dependent;
                    }

                    var model = options.model;
                    model.set("final_aggr_desc", model.final_aggr_code);
                    model.set("final_agg", model.final_aggr_code);

                }
            });

            $("<span class='k-invalid-msg' data-for='" + datafield + "'></span>").appendTo(container);

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }



    function combo_dependent_man1(container, cmbid, datasource, datafield, code_datafield, grid_id) {
        try {
            var cus_arr = [];
            var grid = $("#grid_CP").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            $.each(datasource, function (key, val) {
                if (datasource[key].code == selectedItem.final_aggr_code) {
                    cus_arr.push(datasource[key]);
                }
            });

            var data = cus_arr;

            $('<input  id="' + cmbid + '" data-text-field="desc" data-value-field="desc" data-bind="value:' + datafield + '" name ="' + datafield + '"/>').appendTo(container).kendoComboBox({
                autoBind: false,
                filter: "contains",
                dataSource: data,
                change: function (e) {
                    var cmb_value = this.value();
                    if (cmb_value && this.selectedIndex == -1) {
                        this.value("");
                    }
                    var cmb_var = $("#" + grid_id).data("kendoGrid");
                    var selectedItem = cmb_var.dataItem(cmb_var.select());
                    var combobox_data = $("#cmb_final_aggr_desc").data("kendoComboBox");
                    if (combobox_data != undefined && combobox_data.selectedIndex == -1) {
                        selectedItem[datafield] = "";
                        selectedItem[code_datafield] = "";
                    }
                    else {
                        selectedItem[datafield] = combobox_data.dataItem(combobox_data.selectedIndex).desc;
                        selectedItem[code_datafield] = combobox_data.dataItem(combobox_data.selectedIndex).code;
                    }
                }
            });
            $("<span class='k-invalid-msg' data-for='" + datafield + "'></span>").appendTo(container);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>


