@{
    ViewBag.Form = "FPO Registration";
    //ViewBag.helpName ="FarmerRegistration.html";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}
<script src="~/CommonScripts/common.js"></script>
<script src="~/CommonScripts/tamil.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>


<form id="FPO_profile" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="txtFpo_code" class="col-sm-5 control-label  required">FPO Code </label>
                        <div class="col-sm-7">
                            <input type="text" id="txtFpo_code" name="inout_orgn_code"  class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="txt_orgn_cin" class="col-sm-5 control-label ">FPO CIN</label>
                        <div class="col-sm-7">
                            <input type="text" id="txt_orgn_cin" name="in_orgn_cin" class="form-control" maxlength="50">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_Orgn_rowid" class="col-sm-5 control-label ">Orgn row id</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_Orgn_rowid" name="inout_orgn_rowid" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="txtFarmer_nameEng" class="col-sm-5 control-label required">FPO Name </label>
                        <div class="col-sm-7">
                            <input type="text" id="txtFarmer_nameEng" name="in_orgn_name"  class="form-control" data-toggle="tooltip"   data-placement="bottom" placeholder="" maxlength="100">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label id="txtFponame" class="col-sm-5 control-label">FPO பெயர் </label>
                        <div class="col-sm-7">
                            <input type="text" id="txtFarmer_nameTn" name="in_orgn_ll_name" class="form-control" data-toggle="tooltip" data-placement="bottom" placeholder=""maxlength="150">
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="Cmborgtype" class="col-sm-5 control-label required">FPO Type </label>
                        <div class="col-sm-7">
                            <input id="Cmborgtype" name="in_orgn_type"   style="width: 100%" data-role="filtercombo">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label id="cmbfpotype" class="col-sm-5 control-label">அமைப்பு வகை </label>
                        <div class="col-sm-7">
                            <input id="CmborgtypeTn" name="" style="width: 100%" data-role="filtercombo" readonly>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="facilitorg" class="col-sm-5 control-label">Facilitator Organization </label>
                        <div class="col-sm-7">
                            <input id="facilitorg" name="in_parent_code" style="width: 100%" data-role="filtercombo" value="">

                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label id="facilitorgIntest" class="col-sm-5 control-label">ஒருங்கமைப்பாளர் அமைப்பு </label>
                        <div class="col-sm-7">
                            <input id="facilitorgIn" name="" style="width: 100%" data-role="filtercombo" value="" readonly>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="padding-bottom:10px">
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_version_no" class="col-sm-5 control-label">version_no</label>
                        <div class="col-sm-4">
                            <input type="number" id="txt_version_no" name="inout_version_no" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_orgn_level" class="col-sm-5 control-label">orgn_level</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_orgn_level" name="in_orgn_level" class="form-control" maxlength="10" value="ORG_FPO">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_orgn_subtype" class="col-sm-5 control-label">orgn_subtype</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_orgn_subtype" name="in_orgn_subtype" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_primary_lang_code" class="col-sm-5 control-label">primary_lang_code</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_primary_lang_code" value="en_US" name="in_primary_lang_code" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_secondary_lang_code" class="col-sm-5 control-label">secondary_lang_code</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_secondary_lang_code" value="ta_IN" name="in_secondary_lang_code" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="status_code" class="col-sm-5 control-label">Status_code</label>
                        <div class="col-sm-4">
                            <input type="text" value="A" id="txt_status_code" name="in_status_code" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txtMode" class="col-sm-5 control-label">Mode</label>
                        <div class="col-sm-4">
                            <input type="text" id="txtMode" name="in_mode_flag" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="row_timestamp" class="col-sm-5 control-label">Timestamp:</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_row_timestamp" name="in_row_timestamp" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="file" class=" col-sm-5 control-label">FPO Logo</label>
                        <img id="orgn_logo" src="~/images/logofpo.png" class="col-sm-2 img-responsive profileImg" alt="User Image" height="60" width="60" />
                        <input type="file" name="file" id="farmerphoto" src="~/images/logofpo.png" style="width: 120px;" class=" col-sm-4 control-label" accept="image/x-png, image/gif, image/jpeg" />
                        @*<button title="" data-placement="top" class="col-sm-1 btn btn-info" type="submit" data-original-title="Capture Signature"> <span class="glyphicon glyphicon-camera"></span></button>*@
                        <input type="hidden" id="txtImageHiddenphoto" name="in_orgn_logo" />
                    </div>

                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="file" class="col-sm-5 control-label ">Authorized Signatory</label>                        
                            <img id="orgn_auth_sign" src="~/images/logofpo.png" class="col-sm-2 img-responsive profileImg1" alt="User Image" height="60" width="100" />
                            <input type="file" name="file" id="farmersig" src="" style="width: 120px;" class=" col-sm-4 control-label" accept="image/x-png, image/gif, image/jpeg" />
                            <input type="hidden" id="txtImageHidden" name="in_orgn_auth_sign" />
                            @* <img id="in_orgn_auth_sign" src="~/images/logofpo.png" class="col-sm-12 img-bordered-sm profileImg" alt="User Image" height="40" width="100" />*@
                            @*<img id="orgn_auth_sign" src="~/images/logofpo.png" class="col-sm-12 img-bordered-sm profileImg" alt="User Image" height="40" width="100" />*@
                        </div>
                    </div>
                </div>
                @*<div class="col-sm-1">
                    <div class="form-group">
                        <div class="col-sm-2">*@
                            @* <input type="file" name="orgn_signature" id="farmersig" src="~/images/logofpo.png" style="width: 120px;" class=" col-sm-4 control-label" accept="image/x-png, image/gif, image/jpeg" />*@
                            @*<input type="file" name="in_orgn_signature" id="farmersig" src="" style="width: 120px;" class=" col-sm-4 control-label" accept="image/x-png, image/gif, image/jpeg" />
                            <input type="hidden" id="txtImageHidden" name="in_orgn_auth_sign" />
                        </div>
                    </div>
                </div>*@

                @*<div class="col-sm-6">
                        <div class="form-group">
                            <label for="txtRoleDesc" class="col-sm-5 control-label ">Authorized Signatory</label>
                            <div class="col-sm-4">
                                <img id="orgn_auth_sign" src="~/images/1.JPG" class="col-sm-6 img-bordered-sm profileImg" alt="User Image" height="40" width="100" />
                                <input type="file" name="file" id="farmerfile" src="~/images/1.JPG style=" width 120px;" class=" col-sm-6 control-label" accept="image/x-png, image/gif, image/jpeg" />

                                <button title="" data-placement="top" data-toggle="tooltip" class="btn btn-info" type="submit" data-original-title="Capture Signature"> <span class="glyphicon glyphicon-camera"></span><sup><span class="glyphicon glyphicon-pencil"></span></sup></button>
                                <input type="hidden" id="txtImageHiddenphoto" name="photo_farmer" />
                            </div>
                        </div>
                    </div>*@
            </div>
            <div class="row">
                <section class="col-md-12">
                    <div id="tab_list" class="col-md-12">
                        <ul class="nav nav-tabs">

                            <li>
                                <a href="#Address" onclick="Address1()" role="tab" data-toggle="tab">
                                    Address
                                </a>
                            </li>

                            <li>
                                <a href="#FIGFarmerClub" onclick="FIGFarmerClub1()" role="tab" data-toggle="tab">
                                    FIG(s)/Farmer Club(s)
                                </a>
                            </li>

                            <li>
                                <a href="#OfficeBearers" onclick="OfficeBearers1()" role="tab" data-toggle="tab">
                                    Office Bearers
                                </a>
                            </li>
                            <li>
                                <a href="#BankDetails" onclick="BankDetails1()" role="tab" data-toggle="tab">
                                    Bank Details
                                </a>
                            </li>
                            <li>
                                <a href="#Users" onclick="Users1()" role="tab" data-toggle="tab">
                                    Users
                                </a>
                            </li>
                            <li>
                                <a href="#tax" onclick="tax1()" role="tab" data-toggle="tab">
                                    Tax
                                </a>
                            </li>
                        </ul>

                        <div class="tab-content">
                            <div class="tab-pane fade active in" id="Address">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_Address"></div>

                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade active in" id="FIGFarmerClub">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_FarmerClub"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade active in" id="OfficeBearers">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_OfficeBearers"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade active in" id="BankDetails">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_Bank"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade active in" id="Users">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_User"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade active in" id="tax">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid_tax"></div>
                                    </div>
                                </div>
                            </div>


                        </div>
                    </div>
                </section>
            </div>
        </div>
</form>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script>
    click_act_name = "FPOListMaker";
    click_ctrl_name = "FPOListMaker";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>
<script>
    $(document).ready(function () {
        debugger;
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#FPO_profile");
        kendo.init(container);
        container.kendoValidator({
        });

        grid_Address_details([]);
        grid_Bank_Detail([]);
        grid_User([]);
        gridFarmerClub([]);
        gridOfficeBearers([]);
        grid_taxdetail([]);
        $(".file_attach").attr("hdrtitle", "FPO Registration");
        $(".notes").attr("hdrtitle", "FPO Registration");
        $("#lblForm_menuid").text("FPOREG");
        $("#hide_div").hide();
        translate();
        Screen_Id = "FPOREG";
        permission = sec_Permission(Screen_Id);

        $("div#FIGFarmerClub").hide();
        $("div#OfficeBearers").hide();
        $("div#BankDetails").hide();
        $("div#Users").hide();
        $("div#tax").hide();

        var ORG_TYPE = "";
        $("#Cmborgtype").empty();
        ORG_TYPE = grid_comboScreen_mastercodes("QCD_FPO_TYPE");
        filter_combobox("Cmborgtype", ORG_TYPE);
        var map_in3 = "";
        $("#CmborgtypeTn").empty();
        map_in3 = grid_comboScreen_tamil("QCD_FPO_TYPE");
        filter_combobox("CmborgtypeTn", map_in3);
        setlocalStorage("status", "Active");
        setlocalStorage('status_code', "A");


        setlocalStorage("status", "Active");
        setlocalStorage('status_code', "A");

        //This Code Introduced BY venkat 08-06-2020  [IssUe No:93]

        //$('#txtFpo_code').keypress(function (e) {
        //    //var regex = new RegExp(/^[a-zA-Z\s]+$/);
        //   // var regex = /^[A-Za-z0-9]+$/;
        //    var regex = /^[]+$/;
        //    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        //    if (regex.test(str)) {
        //        return true;
        //    }
        //    else {
        //        e.preventDefault();
        //        return false;
        //    }
        //});

        //$('#txtFarmer_nameEng').keypress(function (e) {
        //   // var regex = new RegExp(/^[a-zA-Z\s]+$/);
        //    var regex = /^[A-Za-z0-9]+$/;
        //    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        //    if (regex.test(str)) {
        //        return true;
        //    }
        //    else {
        //        e.preventDefault();
        //        return false;
        //    }
        //});


        //end

        //facilitor organ
        var ORGFO = "";
        $("#facilitorg").empty();
        ORGFO = grid_comboScreen_mastercodes("ORGFO");
        filter_combobox("facilitorg", ORGFO);

        //facilitor organ Tamil
        var map_in1 = "";
        $("#facilitorgIn").empty();
        map_in1 = grid_comboScreen_tamil("ORGFO");
        filter_combobox("facilitorgIn", map_in1);

        // Indrouced by Venkat 09-06-2020 [ISSUE NO:95]

        if (getlocalStorage("Db_type") == "Ta") {
            debugger;
            $('#txtFponame').html("FPO பெயர்");
            $('#cmbfpotype').html("அமைப்பு வகை");
            $('#facilitorgIn').html("ஒருங்கமைப்பாளர் அமைப்பு");
            $('#facilitorgIntest').html("ஒருங்கமைப்பாளர் அமைப்பு");
        }
        else {
            $('#txtFponame').html("FPO नाम");
            $('#cmbfpotype').html("संघ प्रकार");
            $('#facilitorgIn').html("प्रशिक्षक संस्था");
            $('#facilitorgIntest').html("प्रशिक्षक संस्था");
        }

        //END


        if (getlocalStorage('btn_clk_val') == "Create") {
            $('#divCreate #review').hide();
            $("#txtMode").val("I");
            $("#bottom_menus").hide();
            $("#DocStat").val("New");
            load_master_code();
        }
        else if (getlocalStorage('btn_clk_val') == "View" || getlocalStorage('btn_clk_val') == "Edit") {
            $('#divEdit #reviewEd').hide();
            $('#divEdit #deactivate').hide();
            if (getlocalStorage("ls_pageList") != undefined) {
                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("Aggregator_profile");
                var obj_val = JSON.parse(formval);
                obj_val.inout_orgn_code = data.out_orgn_code;
                obj_val.inout_orgn_rowid = data.out_orgn_rowid;
                obj_val.inout_version_no = data.out_version_no;
                $("#txtFpo_code").val(obj_val.inout_orgn_code);
                $("#txt_Orgn_rowid").val(obj_val.inout_orgn_rowid);
                $("#txt_version_no").val(obj_val.inout_version_no);

                setlocalStorage('doc_no', $("#txtFpo_code").val());
                setlocalStorage('doc_row_id', $("#txt_Orgn_rowid").val());
                setlocalStorage('doc_ver_no', $("#txt_version_no").val());
                var data = {};
                debugger;
                data.context = WebAPIProxy.getContext();;
                data.context.header = obj_val;
                //retrieve_FPORegistration_details(data);
                var Context = data.context;

                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, header: Context.header }),
                    url: "/FPOListMaker/GetFPO",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        if (response.context != null) {
                            generate_FPORegistration_header(response.context.Header);
                            if (response.context.Header.Address != null) {
                                generate_FPORegistration_Address(response.context.Header.Address);
                            } else { generate_FPORegistration_Address([]); }
                            if (response.context.Header.Bank != null) {
                                generate_FPORegistration_Bank(response.context.Header.Bank);
                            } else { generate_FPORegistration_Bank([]); }
                            if (response.context.Header.User != null) {
                                generate_FPORegistration_User(response.context.Header.User);
                            } else { generate_FPORegistration_User([]); }
                            if (response.context.Header.Tax != null) {
                                generate_FPORegistration_tax(response.context.Header.Tax);
                            } else { generate_FPORegistration_tax([]); }
                            if (response.context.Header.Fig != null) {
                                generate_FPORegistration_Fig(response.context.Header.Fig);
                            } else { generate_FPORegistration_Fig([]); }
                            if (response.context.Header.Bearers != null) {
                                generate_FPORegistration_Bearers(response.context.Header.Bearers);
                            } else { generate_FPORegistration_Bearers([]); }
                        }
                        else {
                            console.log("Issue where Dropped");
                        }
                    },
                    error: function (er) {
                        console.log(er);
                    }

                });
                $("#txtMode").val("U");


            }
        }
    });

    function clear_val() {
    }
    function get_FPORegistration_details(res) {
        try {
            var formval = form_Serialize("FPO_profile");
            var obj_val = JSON.parse(formval);
            obj_val.inout_orgn_code = res.inout_orgn_code;
            obj_val.inout_orgn_rowid = res.inout_orgn_rowid;
            obj_val.inout_version_no = res.inout_version_no;
            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.header = obj_val;
            //retrieve_FPORegistration_details(data);
            var Context = data.context;

            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, header: Context.header }),
                url: "/FPOListMaker/GetFPO",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    if (response.context != null) {
                        generate_FPORegistration_header(response.context.Header);
                        if (response.context.Header.Address != null) {
                            generate_FPORegistration_Address(response.context.Header.Address);
                        } else { generate_FPORegistration_Address([]); }
                        if (response.context.Header.Bank != null) {
                            generate_FPORegistration_Bank(response.context.Header.Bank);
                        } else { generate_FPORegistration_Bank([]); }
                        if (response.context.Header.User != null) {
                            generate_FPORegistration_User(response.context.Header.User);
                        } else { generate_FPORegistration_User([]); }
                        if (response.context.Header.Tax != null) {
                            generate_FPORegistration_tax(response.context.Header.Tax);
                        } else { generate_FPORegistration_tax([]); }
                        if (response.context.Header.Fig != null) {
                            generate_FPORegistration_Fig(response.context.Header.Fig);
                        } else { generate_FPORegistration_Fig([]); }
                        if (response.context.Header.Bearers != null) {
                            generate_FPORegistration_Bearers(response.context.Header.Bearers);
                        } else { generate_FPORegistration_Bearers([]); }
                    }
                    else {
                        console.log("Issue where Dropped");
                    }
                },
                error: function (er) {
                    console.log(er);
                }

            });




            $("#txtFpo_code").val(res.inout_orgn_code);
            $("#txt_Orgn_rowid").val(res.inout_orgn_rowid);
            $("#txt_version_no").val(res.inout_version_no);
            $("#txtMode").val("U");
            setlocalStorage('doc_no', $("#txtFpo_code").val());
            setlocalStorage('doc_row_id', $("#txt_Orgn_rowid").val());
            setlocalStorage('doc_ver_no', $("#txt_version_no").val());
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<script>
    function Address1() {
        try {
            $("div#Address").toggleClass('tab-pane fade active in');
            $("div#FIGFarmerClub").hide();
            $("div#OfficeBearers").hide();
            $("div#BankDetails").hide();
            $("div#Users").hide();
            $("div#Address").show();
            var itemGrid = $("#grid_Address").data("kendoGrid");
            itemGrid.refresh();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function FIGFarmerClub1() {
        try {
            $("div#FIGFarmerClub").toggleClass('tab-pane fade active in');
            $("div#Address").hide();
            $("div#OfficeBearers").hide();
            $("div#BankDetails").hide();
            $("div#Users").hide();
            $("div#FIGFarmerClub").show();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function OfficeBearers1() {
        try {
            $("div#OfficeBearers").toggleClass('tab-pane fade active in');
            $("div#OfficeBearers").show();
            $("div#Address").hide();
            $("div#BankDetails").hide();
            $("div#Users").hide();
            $("div#FIGFarmerClub").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function BankDetails1() {
        try {
            $("div#BankDetails").toggleClass('tab-pane fade active in');
            $("div#BankDetails").show();
            $("div#Address").hide();
            $("div#OfficeBearers").hide();
            $("div#Users").hide();
            $("div#FIGFarmerClub").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }

    }
    function Users1() {
        try {
            $("div#Users").toggleClass('tab-pane fade active in');
            $("div#Users").show();
            $("div#Address").hide();
            $("div#OfficeBearers").hide();
            $("div#BankDetails").hide();
            $("div#FIGFarmerClub").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function tax1() {

        $("div#tax").toggleClass('tab-pane fade active in');
        $("div#tax").show();
        $("div#Users").hide();
        $("div#Address").hide();
        $("div#OfficeBearers").hide();
        $("div#BankDetails").hide();
        $("div#FIGFarmerClub").hide();

    }
</script>
<script>
    function load_master_code() {
        try {
            debugger;
            var data = {};
            var context = WebAPIProxy.getContext();
            data.userId = context.userId
            data.orgnId = context.orgnId
            data.locnId = context.locnId
            data.localeId = context.localeId
            data.screen_Id = "FPOREG";
            var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }



    $("#Cmborgtype").change(function () {
        var c = $('#Cmborgtype');
        var formval = c.data('kendoComboBox').value();
        $("#CmborgtypeTn").data("kendoComboBox").value(formval);
    });
    $("#facilitorg").change(function () {
        var c = $('#facilitorg');
        var formval = c.data('kendoComboBox').value();
        $("#facilitorgIn").data("kendoComboBox").value(formval);
    });

</script>
<script>
    var addr_type_desc_list = "";
    var orgn_state_desc_list = "";
    var orgn_village_desc_list = "";
    var orgn_dist_desc_list = "";
    var orgn_taluk_desc_list = "";
    var orgn_panchayat_desc_list = "";
    var status_desc_list = "";
    function grid_Address_details(data) {
        try {
            $("#grid_Address").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                in_orgn_pincode: { type: "string", validation: { required: { message: "Pincode cannot be blank" } } },
                                //----
                                in_addr_type: { type: "string", required: true },
                                addr_type_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='addr_type_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Address Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                in_state: { type: "string", required: true },
                                orgn_state_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='orgn_state_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "State Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                in_orgn_dist: { type: "string", required: true },
                                orgn_dist_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='orgn_dist_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "District Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },
                                //----
                                in_orgn_panchayat: { type: "string", required: true },
                                orgn_panchayat_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='orgn_panchayat_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Grama panchayat Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },

                                in_orgn_taluk: { type: "string", required: true },
                                orgn_taluk_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='orgn_taluk_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Taluk Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },

                                in_orgn_village: { type: "string", required: true },
                                orgn_village_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='orgn_village_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Village Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                in_orgn_add1: {
                                    validation: {
                                        required: { message: "Addr1 cannot be blank" },
                                        maxlength:
                                            function (input) {
                                                if (input.val().length > 50) {
                                                    input.attr("data-maxlength-msg", "Max length is 50");
                                                    return false;
                                                }
                                                return true;
                                            }
                                    }
                                },
                                in_orgn_addr2: {
                                    validation: {
                                        required: { message: "Addr2 cannot be blank" },
                                        maxlength:
                                            function (input) {
                                                if (input.val().length > 50) {
                                                    input.attr("data-maxlength-msg", "Max length is 50");
                                                    return false;
                                                }
                                                return true;
                                            }
                                    }
                                },

                                orgn_country_desc: { type: "string", required: true },
                                status_desc: {
                                    defaultValue: "Active", editable: false,
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='status_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Status Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },



                                in_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_Address').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                edit: OnEdit,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {
                                var grid = $("#grid_Address").data("kendoGrid");
                                var dataItem = $("#grid_Address").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ], title: "Action", width: "50px",
                },
                {
                    field: "in_orgnaddr_rowid",
                    title: "orgnaddr_rowid",
                    hidden: true,

                },
                {
                    field: "in_addr_type",
                    title: "addr_type",
                    hidden: true,

                },
                {
                    field: "addr_type_desc",
                    title: "Addr Type",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_addr_type", "grid_Address")
                    },
                    width: 100,

                },
                {
                    field: "orgn_country_desc",
                    title: "Country",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_orgn_country", "grid_Address")
                    },
                    width: 100,
                },
                {
                    field: "in_orgn_state",
                    title: "orgn_state",
                    hidden: true,
                },
                {
                    field: "orgn_state_desc",
                    title: "State",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_orgn_state", "grid_Address")
                    },
                    width: 100,

                },
                {
                    field: "in_orgn_village",
                    title: "orgn_village",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "orgn_village_desc",
                    title: "Village",
                    editor: '<div class="input-group input-group-sm"><input type="text" readonly name="orgn_village_desc" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:orgn_village_desc"/><span class="input-group-btn" style="padding-right: 150px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Details" searchid="S02" data-target="#HelpModal" onclick=transfer(this,"grid","grid_Address","grid_Address_details") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>',
                    width: 150,

                },
                {
                    field: "in_orgn_dist",
                    title: "orgn_dist",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "orgn_dist_desc",
                    title: "District",
                    width: 100,

                },
                {
                    field: "in_orgn_taluk",
                    title: "orgn_taluk",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "orgn_taluk_desc",
                    title: "Taluk",
                    width: 100,
                },

                {
                    field: "in_orgn_panchayat",
                    title: "orgn_panchayat",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "orgn_panchayat_desc",
                    title: "Gram Panchayat",
                    width: 100,
                },

                {
                    field: "in_orgn_add1",
                    title: "Addr Line 1",
                    width: 100,

                },
                {
                    field: "in_orgn_addr2",
                    title: "Addr Line 2",
                    width: 100
                },
                {
                    field: "in_orgn_pincode_desc",
                    title: "Pin Code",
                    hidden: true,
                },
                {
                    field: "in_orgn_pincode",
                    title: "PinCode",
                    width: 100,
                    editor: function (container, options) {
                        numeric_editor(container, options.field, '6', '0');
                    },

                },
                {
                    field: "in_orgn_country",
                    title: "Country",
                    hidden: true,
                },

                {
                    field: "in_status_code",
                    title: "status_code",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_status_code", "grid_Address")
                    },
                    width: 100,
                },
                {
                    field: "in_mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    load_master_code();
    addr_type_desc_list = grid_comboScreen_mastercodes("QCD_ADDRTYPE");
    orgn_state_desc_list = grid_comboScreen_mastercodes("QCD_UN_STATE");

    orgn_panchayat_desc_list = grid_comboScreen_mastercodes("QCD_UN_GRAMPAN");
    orgn_country_desc_list = grid_comboScreen_mastercodes("QCD_COUNTRY");
    status_desc_list = grid_comboScreen_mastercodes("FPO_STATUS");
</script>

<script>

    var fig_type_list = "";
    var fig_village_covered_desc_list = "";
    function gridFarmerClub(data) {
        try {
            $("#grid_FarmerClub").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                in_fig_type: { type: "string" },
                                //fig_type_desc: { type: "string" },
                                short_des: { type: "string" },
                                in_fig_namename: { type: "string" },
                                fig_village_covered_desc: { type: "string" },
                                in_president: { type: "string" },
                                in_treasurer: { type: "string" },
                                in_secretary: { type: "string" },
                                in_contact_person: { type: "string" },
                                in_status_code: { type: "string", required: true },
                                status_desc: {
                                    defaultValue: "Active", editable: false,
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='status_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Status Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                in_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_FarmerClub').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {
                                var grid = $("#grid_FarmerClub").data("kendoGrid");
                                var dataItem = $("#grid_FarmerClub").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ], title: "&nbsp;", width: "50px",
                },
                {
                    field: "in_orgnfig_rowid",
                    title: "orgnfig_rowid",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "in_fig_type",
                    title: "Type",
                    width: 100,
                    hidden: true,
                    //editor: function (container, options) {
                    //    combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_fig_type", "grid_FarmerClub")
                    //},
                },
                {
                    field: "fig_type_desc",
                    title: "Type Desc",
                    width: 100,
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_fig_type", "grid_FarmerClub")
                    },
                },


                {
                    field: "in_fig_short_name",
                    title: "Short Description",
                    width: 100,

                },
                {
                    field: "in_fig_name",
                    title: "FIG Name",
                    width: 100,

                },
                {
                    field: "in_fig_village_covered",
                    title: "fig_village_covered",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "fig_village_covered_desc",
                    title: "Village Covered",
                    width: 100,
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_fig_village_covered", "grid_FarmerClub")
                    },
                },
                {
                    field: "in_fig_president",
                    title: "President",
                    width: 100,

                },
                {
                    field: "in_fig_treasurer",
                    title: "Treasurer",
                    width: 100,

                },
                {
                    field: "in_fig_secretary",
                    title: "Secretary",
                    width: 100,

                },
                {
                    field: "in_fig_contact_person",
                    title: "Contact Person",
                    width: 100,

                },
                {
                    field: "in_status_code",
                    title: "status_code",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_status_code", "grid_FarmerClub")
                    },
                    width: 100,
                },
                {
                    field: "in_mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    load_master_code();
    fig_type_desc_list = grid_comboScreen_mastercodes("QCD_FIGTYPE");
    fig_village_covered_desc_list = grid_comboScreen_mastercodes("QCD_UN_VILLAGE");
    status_desc_list = grid_comboScreen_mastercodes("FPO_STATUS");
</script>

<script>
    var officebearer_role_desc_list = "";
    function gridOfficeBearers(data) {
        try {
            $("#grid_OfficeBearers").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                in_officebearer_role_desc: { type: "string" },
                                in_officebearer_name: { type: "string" },
                                in_officebearer_contact_no: { type: "string", validation: { required: { message: "Contact no cannot be blank" } } },
                                in_status_code: { type: "string" },
                                status_desc: { type: "string" },
                                in_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_OfficeBearers').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {
                                var grid = $("#grid_OfficeBearers").data("kendoGrid");
                                var dataItem = $("#grid_OfficeBearers").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ], title: "Action", width: "50px",
                },
                {
                    field: "in_orgnofficebearers_rowid",
                    title: "orgnofficebearers_rowid",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "in_officebearer_role",
                    title: "officebearer_role",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "officebearer_role_desc",
                    title: "Role",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_officebearer_role", "grid_OfficeBearers")
                    },
                    width: 100,

                },
                {
                    field: "in_officebearer_name",
                    title: "Name",
                    width: 100,

                },
                {
                    field: "in_officebearer_contact_no",
                    title: "Contact No",
                    width: 100,
                    editor: function (container, options) {
                        numeric_editor(container, options.field, '10', '0');
                    }
                },
                {
                    field: "in_status_code",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "", "grid_OfficeBearers")
                    },
                    width: 100,
                },
                {
                    field: "status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_status_code", "grid_OfficeBearers")
                    },
                    hidden: true,

                    width: 100,
                },
                {
                    field: "in_mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    load_master_code();
    officebearer_role_desc_list = grid_comboScreen_mastercodes("QCD_DESIG");
    in_status_code_list = grid_comboScreen_mastercodes("FPO_STATUS");

</script>

<script>
    var bank_acc_type_desc_list = "";
    var bank_desc_list = "";
    var branch_desc_list = "";
    var dflt_cr_acc_desc_list = "";
    var dflt_dr_acc_desc_list = "";
    var bank_acc_purpose_desc_list = "";
    var status_desc_list = "";
    function grid_Bank_Detail(data) {
        try {
            $("#grid_Bank").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                in_bank_acc_no: { type: "string", validation: { required: { message: "Bank Account No. cannot be blank" } } },

                                in_bank_acc_type: { type: "string", required: true },
                                in_bank_acc_type_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='bank_acc_type_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Bank Account cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                in_bank_code: { type: "string", required: true },
                                in_bank_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='bank_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Bank cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                in_branch_code: { type: "string" },
                                in_ifsc_code: { type: "string", validation: { required: { message: "IFSC Code cannot be blank" } }, editable: false },
                                in_account_no: { type: "string" },
                                in_dflt_cr_acc: { type: "string", required: true },
                                in_dflt_cr_acc_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='dflt_cr_acc_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Default Credit cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                in_dflt_dr_acc: { type: "string", required: true },
                                in_dflt_dr_acc_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='dflt_dr_acc_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Default Debit cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                in_bank_acc_purpose: { type: "string", required: true },
                                in_bank_acc_purpose_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='bank_acc_purpose_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Account Purpose cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                //status_code: { type: "string", required: true },
                                //status_desc: { type: "string", defaultValue: getlocalStorage('status'), editable: false },

                                in_status_code: { type: "string", required: true },
                                in_status_desc: {
                                    defaultValue: "Active", editable: false,
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='status_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Status Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                in_mode_flag: { type: "string", defaultValue: "I" },
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_Bank').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                edit: OnEdit,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {
                                // e.preventDefault();
                                var grid = $("#grid_Bank").data("kendoGrid");
                                var dataItem = $("#grid_Bank").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ], title: "Action", width: "50px",
                },
                {
                    field: "in_orgnbank_rowid",
                    title: "orgnbank_rowid",
                    hidden: true
                },
                {
                    field: "in_bank_acc_no",
                    title: "Account No",
                    width: 100,
                    //editor: function (container, options) {
                    //    item_rate(container, options.field, '20', '0');
                    //},
                },
                {
                    field: "in_bank_acc_type",
                    title: "bank_acc_type",
                    hidden: true
                },
                {
                    field: "bank_acc_type_desc",
                    title: "Account Type",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_bank_acc_type", "grid_Bank")
                    },
                    width: 100,
                },
                {
                    field: "in_bank_code",
                    title: "bank_code",
                    hidden: true
                },
                {
                    field: "bank_desc",
                    title: "Bank Name",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_bank_code", "grid_Bank")
                    },
                    width: 200,

                },
                {
                    field: "in_branch_code",
                    title: "Branch",
                    editor: '<div class="input-group input-group-sm"><input type="text" readonly name="branch_code" maxlength="50" style="width:190px;color:black"  onkeypress="return speical_char(event)" data-bind="value:branch_code"/><span class="input-group-btn" style="padding-right: 150px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Bank Details" searchid="S01" data-target="#HelpModal" onclick=transfer(this,"grid","grid_Bank","grid_Bank_Detail") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>',
                    width: 250,
                },
                {
                    field: "in_ifsc_code",
                    title: "IFSC code",
                    width: 100,
                },
                {
                    field: "in_dflt_cr_acc",
                    title: "dflt_cr_acc",
                    hidden: true
                },

                {
                    field: "dflt_cr_acc_desc",
                    title: "Default Credit A/C",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_dflt_cr_acc", "grid_Bank")
                    },
                    width: 100,

                },
                {
                    field: "in_dflt_dr_acc",
                    title: "dflt_dr_acc",
                    hidden: true
                },
                {
                    field: "dflt_dr_acc_desc",
                    title: "Default Debit A/C",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_dflt_dr_acc", "grid_Bank")
                    },
                    width: 100,

                },
                {
                    field: "in_bank_acc_purpose",
                    title: "bank_acc_purpose",
                    hidden: true
                },
                {
                    field: "bank_acc_purpose_desc",
                    title: "Account Purpose",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_bank_acc_purpose", "grid_Bank")
                    },
                    width: 100,

                },
                {
                    field: "in_status_code",
                    title: "status_code",
                    hidden: true
                },
                {
                    field: "status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_status_code", "grid_Bank")
                    },
                    width: 100,
                },
                {
                    field: "in_mode_flag",
                    title: "Mode",
                    width: 100,
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    bank_acc_type_desc_list = grid_comboScreen_mastercodes("QCD_BANKACCTYPE");
    bank_desc_list = grid_comboScreen_mastercodes("BANK");

    dflt_cr_acc_desc_list = grid_comboScreen_mastercodes("QCD_YESNO");
    dflt_dr_acc_desc_list = grid_comboScreen_mastercodes("QCD_YESNO");
    bank_acc_purpose_desc_list = grid_comboScreen_mastercodes("QCD_BANKACCPUR");
    status_desc_list = grid_comboScreen_mastercodes("FPO_STATUS");
    function OnEdit(e) {
        setDefaultValues(e);
        e.container.find("input[name='in_bank_acc_no']").attr('maxlength', '20');
        e.container.find("input[name='in_bank_acc_no']").attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');

        e.container.find("input[name='in_aggrloc_shortdesc']").attr('maxlength', '25');
        e.container.find("input[name='in_aggrloc_name']").attr('maxlength', '100');
    }
    function grid_taxdetail(data) {
        try {
            $("#grid_tax").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                in_tax_rowid: { type: "string" },
                                in_tax_type: { type: "string" },
                                in_tax_reg_no: { type: "string" },
                                in_state_code: { type: "string" },
                                in_status_code: { type: "string" },
                                in_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 300,
                groupable: false,
                dataBinding: setDefaultValues,
                edit: OnEdit,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {
                                // e.preventDefault();
                                var grid = $("#grid_tax").data("kendoGrid");
                                var dataItem = $("#grid_tax").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ], title: "Action", width: "50px",
                },
                {
                    field: "in_tax_rowid",
                    title: "tax_rowid",
                    hidden: true
                },
                {
                    field: "state_desc",
                    title: "State",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_state_code", "grid_tax")
                    },
                    width: 100,
                },
                {
                    field: "in_tax_type",
                    title: "Bussiness Vertical",
                    width: 100,

                },
                {
                    field: "in_tax_reg_no",
                    title: "GST Registration No",
                    width: 100,
                },
                {
                    field: "in_state_code",
                    title: "state",
                    width: 100,
                    hidden: true
                },


                {
                    field: "in_status_code",
                    title: "status_code",
                    hidden: true
                },
                {
                    field: "status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_status_code", "grid_tax")
                    },
                    width: 100,

                },

                {
                    field: "in_mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    state_desc_list = grid_comboScreen_mastercodes("QCD_UN_STATE");
    status_desc_list = grid_comboScreen_mastercodes("FPO_STATUS");
    function OnEdit(e) {
        setDefaultValues(e);
        e.container.find("input[name='in_tax_reg_no']").attr('maxlength', '15');
    }
</script>

<script>
    function grid_User(data) {
        try {
            $("#grid_User").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                in_user_id: { type: "string" },
                                in_user_name: { type: "string" },
                                in_location_code: { type: "string" },
                                in_location_name: { type: "string" },
                                in_email: { type: "string" },
                                in_mobile_no: { type: "string" },
                                in_valid_till: { type: "date" },
                                in_status: { type: "string" },
                                in_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },

                height: 300,
                groupable: false,
                dataBinding: setDefaultValues,

                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: "in_aggrlocuser_rowid",
                        title: "aggrlocuser_rowid",
                        hidden: true
                    },
                    {
                        field: "in_aggrloc_code",
                        title: "Location Code",
                        width: 100,

                    },
                    {
                        field: "in_aggrorgn_code",
                        title: "aggrorgn_code",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: "in_aggrloc_type",
                        title: "Location Name",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: "in_aggrloc_type_desc",
                        title: "Location Name",
                        width: 100,

                    },
                    {
                        field: "in_role_code",
                        title: "User ID",
                        width: 100,

                    },
                    {
                        field: "in_user_code",
                        title: "user_code",
                        width: 100,
                        hidden: true,
                    },
                    {
                        field: "in_user_name",
                        title: "User Name",
                        width: 100,

                    },
                    {
                        field: "in_email_id",
                        title: "Email",
                        width: 100,

                    },
                    {
                        field: "in_contact_no",
                        title: "Mobile No",
                        width: 100
                    }, {
                        field: "in_valid_till",
                        title: "Valid Till",
                        hidden: true
                    },
                    {
                        field: "in_status_code",
                        title: "status_code",
                        hidden: true
                    },
                    {
                        field: "status_desc",
                        title: "Status",
                        width: 100,

                    },

                    {
                        field: "in_mode_flag",
                        title: "Mode",
                        hidden: true
                    }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<script>
    $("#farmerphoto").change(function () {
        readURL(this);
    });

    function readURL(input) {
        try {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#orgn_logo').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);

            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    $("#farmersig").change(function () {
        readURLSign(this);
    });

    function readURLSign(input) {
        try {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#orgn_auth_sign').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);

            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function save_Image() {
        try {

            var xhr = new XMLHttpRequest();
            var fd = new FormData();
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var value = JSON.parse(xhr.responseText);
                    if (value.result != undefined) {
                        $("#txtImageHiddenphoto").val(value.result);
                        save_sign();
                    } else {
                        save_sign();
                    }
                }
            };


            fd.append("file", document.getElementById('farmerphoto').files[0]);
            fd.append("userID", $('#txtUserId').val());
            xhr.open("POST", "/UserDefinition/User/", true);
            xhr.send(fd);
            xhr.addEventListener("load", function (event) {
            }, false);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function save_sign() {
        try {
            var xhr = new XMLHttpRequest();
            var fd = new FormData();
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var value = JSON.parse(xhr.responseText);
                    if (value.result != undefined) {
                        $("#txtImageHidden").val(value.result);
                    }
                    save_fpo()
                }
            };


            fd.append("file", document.getElementById('farmersig').files[0]);
            fd.append("userID", $('#txtUserId').val());
            xhr.open("POST", "/UserDefinition/User/", true);
            xhr.send(fd);
            xhr.addEventListener("load", function (event) {
            }, false);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script>
    function save() {
        debugger;

        save_Image();

    }
    function save_fpo() {
        debugger;
        try {
            debugger;
            if ($("#txt_Orgn_rowid").val() == "") {
                $("#txt_Orgn_rowid").val('0');
            }
            if ($("#txt_version_no").val() == "") {
                $("#txt_version_no").val('1');
            }
            if ($("#in_orgn_subtype").val() == "") {
                $("#in_orgn_subtype").val('0');
            }
            if ($("#txtMode").val() == "S") {
                $("#txtMode").val('U');
            }
            if ($("#in_orgn_auth_sign").val() == "") {
                $("#in_orgn_auth_sign").val('');
            }
            var formval = form_Serialize("FPO_profile");
            var obj_val = JSON.parse(formval);
            if (obj_val.in_row_timestamp == null || obj_val.in_row_timestamp == "" || obj_val.in_row_timestamp == undefined) {
                obj_val.in_row_timestamp = "2000-01-01";
            }
            //address
            var grid_val = JSON.stringify($("#grid_Address").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            $.each(result, function (index, value) {
                var row_id = value.in_orgnaddr_rowid;
                if (row_id == undefined) {
                    result[index].in_orgnaddr_rowid = "0";
                }
                var mmode = result[index].in_mode_flag;
                if (mmode == "S") {
                    result[index].in_mode_flag = "U";
                }

                var Status = result[index].in_status_code;
                if (Status == undefined || Status == "") {
                    result[index].in_status_code = "A";
                }

            });
            var obj_grid_val = result;

            //bank
            var grid_val1 = JSON.stringify($("#grid_Bank").data().kendoGrid._data);
            var Bind1 = {};
            Bind1 = grid_val1;
            var result1 = JSON.parse(Bind1);
            var count = 0;
            var count1 = 0;
            $.each(result1, function (index, value) {
                var bank_rowid = value.in_orgnbank_rowid;
                if (bank_rowid == undefined) {
                    result1[index].in_orgnbank_rowid = "0";
                }
                var mmode = result1[index].in_mode_flag;
                if (mmode == "S") {
                    result1[index].in_mode_flag = "U";
                }

                var crecunt = result1[index].dflt_cr_acc_desc;
                var debcunt = result1[index].dflt_dr_acc_desc;

                if (crecunt == "Yes") {
                    count = count + 1;

                }
                if (debcunt == "Yes") {
                    count1 = count1 + 1;
                }
            });
            if (count > 1 || count1 > 1) {
                kendoAlert("Only one Credit/Debit Account will be the default! ");
                return false;
            }
            var obj_grid_val1 = result1;

            //user
            var grid_val2 = JSON.stringify($("#grid_User").data().kendoGrid._data);
            var Bind2 = {};
            Bind2 = grid_val2;
            var result2 = JSON.parse(Bind2);
            $.each(result2, function (index, value) {

               
                    result2[index].in_aggrlocuser_rowid = "0";
              
                var mmode = result2[index].in_mode_flag;
                if (mmode == "S") {
                    result2[index].in_mode_flag = "U";
                }
            });
            var obj_grid_val2 = result2;

            //fig
            var grid_val3 = JSON.stringify($("#grid_FarmerClub").data().kendoGrid._data);
            var Bind3 = {};
            Bind3 = grid_val3;
            var result3 = JSON.parse(Bind3);
            $.each(result3, function (index, value) {

                var row_width = value.orgnfig_rowid;
                var fig_contact_person = value.in_fig_contact_person;
                var fig_president = value.in_fig_president;
                var fig_treasurer = value.in_fig_treasurer;
                var fig_secretary = value.in_fig_secretary;

                if (row_width == undefined) {
                    result3[index].in_orgnfig_rowid = "0";
                }
                if (fig_contact_person == undefined) {
                    result3[index].in_fig_contact_person = " ";
                }
                if (fig_president == undefined) {
                    result3[index].in_fig_president = " ";
                }
                if (fig_treasurer == undefined) {
                    result3[index].in_fig_treasurer = " ";
                }
                if (fig_secretary == undefined) {
                    result3[index].in_fig_secretary = " ";
                }
                var mmode = result3[index].in_mode_flag;
                if (mmode == "S") {
                    result3[index].in_mode_flag = "U";
                }
            });
            var obj_grid_val3 = result3;

            //office bearer
            var grid_val4 = JSON.stringify($("#grid_OfficeBearers").data().kendoGrid._data);
            var Bind4 = {};
            Bind4 = grid_val4;
            var result4 = JSON.parse(Bind4);
            $.each(result4, function (index, value) {

                var row_width = value.in_orgnofficebearers_rowid;


                if (row_width == undefined) {
                    result4[index].in_orgnofficebearers_rowid = "0";
                }
                var mmode = result4[index].in_mode_flag;
                if (mmode == "S") {
                    result4[index].in_mode_flag = "U";
                }
            });
            var obj_grid_val4 = result4;
            //tax
            var grid_val5 = JSON.stringify($("#grid_tax").data().kendoGrid._data);
            var Bind5 = {};
            Bind5 = grid_val5;
            var result5 = JSON.parse(Bind5);
            $.each(result5, function (index, value) {

                var tax_rowid = value.in_tax_rowid;
                if (tax_rowid == undefined || tax_rowid == '') {
                    result5[index].in_tax_rowid = "0";
                }
                var state_code = value.in_state_code;
                var state_code = result5[index].in_state_code;
                if (state_code == '' || tax_rowid == undefined) {
                    result5[index].state_code = "tn";
                }
                var mmode = result5[index].in_mode_flag;
                if (mmode == "S") {
                    result5[index].in_mode_flag = "U";
                }
            });
            var obj_grid_val5 = result5;

            //var Context = WebAPIProxy.getContext();

            ////var Header = obj_val;
            //var Header = obj_val;
            //var Address = obj_grid_val;
            //var Fig = obj_grid_val3;
            //var Bearers = obj_grid_val4;
            //var Bank = obj_grid_val1;
            //var User = obj_grid_val2;
            //var Tax = obj_grid_val5;
            var data = {};
            debugger;
            data.context = WebAPIProxy.getContext();
            data.context.header = obj_val;
            data.context.header.address = obj_grid_val;
            data.context.header.fig = obj_grid_val3;
            data.context.header.bearers = obj_grid_val4;
            data.context.header.bank = obj_grid_val1;
            data.context.header.tax = obj_grid_val5;
            data.context.header.user = obj_grid_val2;
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({
                    userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, header: Context.header
                }),
                url: "/FPOListMaker/SaveFPOWithMySql",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    console.log(response)
                    var Res = JSON.parse(response);
                    if (Res.context != null) {
                        var mode = $("#txtMode").val();
                        if (mode == "I") {
                            kendoAlert("FPORegistration  Details saved successfully");
                            get_FPORegistration_details(Res.context.header);
                        }
                        else if (mode == "D") {
                            kendoAlert("FPORegistration Details inactivate successfully");
                            get_FPORegistration_details(Res.context.header);

                        }
                        else {
                            kendoAlert("FPORegistrationDetails Updated successfully");
                            get_FPORegistration_details(Res.context.header);
                        }
                    }
                    else {
                        kendoAlert(Res.ApplicationException.errorDescription);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });


            //var data = {};
            //data.context = WebAPIProxy.getContext();
            //data.context.Header = obj_val;
            //data.context.Address = obj_grid_val;
            //data.context.Fig = obj_grid_val3;
            //data.context.Bearers = obj_grid_val4;
            //data.context.Bank = obj_grid_val1;
            //data.context.Tax = obj_grid_val5;
            //data.context.User = obj_grid_val2;
            //save_FPORegistration_details(data);

        }
        catch (err) {
            console.log(err)
        }
    }

    function DeleteDetails() {
        try {
            $("#txtMode").val('D');
            save();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_FPORegistration_header(res) {
        try {
            debugger;
            //$("#txt_orgn_cin").val(res.orgn_cin)
            //$("#txt_Orgn_rowid").val(res.orgn_rowid);
            //$("#txtFpo_code").val(res.orgn_code);
            //$("#txtFpo_code").attr("readonly", "");
            //$("#txt_version_no").val(res.version_no);
            //$("#txtFarmer_nameEng").val(res.orgn_name);
            //$("#txtFarmer_nameTn").val(res.orgn_ll_name);
            //$("#txt_orgn_level").val(res.orgn_level);
            //$('#Cmborgtype').data("kendoComboBox").value(res.orgn_type);
            //$('#CmborgtypeTn').data("kendoComboBox").value(res.orgn_type);
            //$('#facilitorg').data("kendoComboBox").value(res.parent_code);
            //$('#facilitorgIn').data("kendoComboBox").value(res.parent_code);
            //$("#txt_primary_lang_code").val(res.primary_lang_code);
            //$("#txt_secondary_lang_code").val(res.secondary_lang_code);
            //$("#txt_status_code").val(res.status_code);
            //$("#DocStat").val(res.status_desc);
            //$("#txtMode").val(res.mode_flag);
            //$("#txt_row_timestamp").val(res.row_timestamp);
            //$("#txtImageHiddenphoto").val(res.orgn_logo);
            //$("#txtImageHidden").val(res.orgn_auth_sign);
            //var farmerphoto = res.orgn_logo
            //var farmersign = res.orgn_auth_sign
            //if (farmerphoto != "")
            //    document.getElementById("orgn_logo").src = "data:image/png;base64," + farmerphoto;
            //else
            //    document.getElementById("orgn_logo").src = "~/images/noimage.png";
            //if (farmersign != "")
            //    document.getElementById("orgn_auth_sign").src = "data:image/png;base64," + farmersign;
            //else
            //    document.getElementById("orgn_auth_sign").src = "~/images/noimage.png";


            $("#txt_orgn_cin").val(res.out_orgn_cin)
            $("#txt_Orgn_rowid").val(res.out_orgn_rowid);
            $("#txtFpo_code").val(res.out_orgn_code);
            $("#txtFpo_code").attr("readonly", "");
            $("#txt_version_no").val(res.out_version_no);
            $("#txtFarmer_nameEng").val(res.out_orgn_name);
            $("#txtFarmer_nameTn").val(res.out_orgn_ll_name);
            $("#txt_orgn_level").val(res.out_orgn_level);
            $('#Cmborgtype').data("kendoComboBox").value(res.out_orgn_type);
            $('#CmborgtypeTn').data("kendoComboBox").value(res.out_orgn_type);
            $('#facilitorg').data("kendoComboBox").value(res.out_parent_code);
            $('#facilitorgIn').data("kendoComboBox").value(res.out_parent_code);
            $("#txt_primary_lang_code").val(res.out_primary_lang_code);
            $("#txt_secondary_lang_code").val(res.out_secondary_lang_code);
            $("#txt_status_code").val(res.out_status_code);
            $("#DocStat").val(res.out_status_desc);
            $("#txtMode").val(res.out_mode_flag);
            $("#txt_row_timestamp").val(res.out_row_timestamp);
            $("#txtImageHiddenphoto").val(res.out_orgn_logo);
            $("#txtImageHidden").val(res.out_orgn_auth_sign);

            var farmerphoto = res.out_orgn_logo
            var farmersign = res.out_orgn_auth_sign
            if (farmerphoto != "")
                document.getElementById("orgn_logo").src = "data:image/png;base64," + farmerphoto;
            else
                document.getElementById("orgn_logo").src = "~/images/noimage.png";
            if (farmersign != "")
                document.getElementById("orgn_auth_sign").src = "data:image/png;base64," + farmersign;
            else
                document.getElementById("orgn_auth_sign").src = "~/images/noimage.png";

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_FPORegistration_Address(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_Address_details(data);
            }
            else {

                grid_Address_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_FPORegistration_Bank(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_Bank_Detail(data);
            }
            else {

                grid_Bank_Detail([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_FPORegistration_User(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_User(data);
            }
            else {

                grid_User([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_FPORegistration_tax(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_taxdetail(data);
            }
            else {

                grid_taxdetail([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_FPORegistration_Fig(res) {

        if (res != null) {
            var data = changedataType(res);
            gridFarmerClub(data);
        }
        else {

            gridFarmerClub([]);
        }
    }
    function generate_FPORegistration_Bearers(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                gridOfficeBearers(data);
            }
            else {

                gridOfficeBearers([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function grid_control() {
        try {
            var control_Name = [
                { "dataCol": "branch_name", "grid_row_col": "in_branch_code" },
                { "dataCol": "ifsc_code", "grid_row_col": "in_ifsc_code" },
                { "dataCol": "", "grid_row_col": "in_bank_code" },
                { "dataCol": "", "grid_row_col": "bank_desc" },
                { "dataCol": "", "grid_row_col": "in_orgnbank_rowid" },
                { "dataCol": "", "grid_row_col": "in_bank_acc_no" },
                { "dataCol": "", "grid_row_col": "in_bank_acc_type" },
                { "dataCol": "", "grid_row_col": "bank_acc_type_desc" },
                { "dataCol": "", "grid_row_col": "in_dflt_dr_acc" },
                { "dataCol": "", "grid_row_col": "dflt_dr_acc_desc" },
                { "dataCol": "", "grid_row_col": "in_dflt_cr_acc" },
                { "dataCol": "", "grid_row_col": "dflt_cr_acc_desc" },
                { "dataCol": "", "grid_row_col": "in_bank_acc_purpose" },
                { "dataCol": "", "grid_row_col": "bank_acc_purpose_desc" },
                { "dataCol": "", "grid_row_col": "in_status_code" },
                { "dataCol": "", "grid_row_col": "status_desc" },
                { "dataCol": "", "grid_row_col": "in_mode_flag" },
                { "dataCol": "", "grid_row_col": "uid" },

                //{ "dataCol": "orgn_village", "grid_row_col": "orgn_village_desc" },
                { "dataCol": "orgn_state", "grid_row_col": "in_orgn_state" },
                { "dataCol": "orgn_state_desc", "grid_row_col": "orgn_state_desc" },
                { "dataCol": "orgn_village", "grid_row_col": "in_orgn_village" },
                { "dataCol": "orgn_village_desc", "grid_row_col": "orgn_village_desc" },
                { "dataCol": "orgn_dist", "grid_row_col": "in_orgn_dist" },
                { "dataCol": "orgn_dist_desc", "grid_row_col": "orgn_dist_desc" },
                { "dataCol": "orgn_taluk", "grid_row_col": "in_orgn_taluk" },
                { "dataCol": "orgn_taluk_desc", "grid_row_col": "orgn_taluk_desc" },
                { "dataCol": "orgn_grampan", "grid_row_col": "in_orgn_panchayat" },
                { "dataCol": "orgn_grampan_desc", "grid_row_col": "orgn_panchayat_desc" },
                { "dataCol": "", "grid_row_col": "in_status_code" },
                { "dataCol": "", "grid_row_col": "status_desc" },
                { "dataCol": "", "grid_row_col": "in_addr_type" },
                { "dataCol": "", "grid_row_col": "addr_type_desc" },
                { "dataCol": "", "grid_row_col": "orgn_country_desc" },

                { "dataCol": "", "grid_row_col": "in_orgn_add1" },
                { "dataCol": "", "grid_row_col": "in_orgn_addr2" },
                { "dataCol": "", "grid_row_col": "in_orgn_pincode" },
                { "dataCol": "", "grid_row_col": "orgn_pincode_desc" },
                { "dataCol": "", "grid_row_col": "in_orgn_country" },

                { "dataCol": "", "grid_row_col": "in_mode_flag" },
                { "dataCol": "", "grid_row_col": "uid" }


            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function controlName() {
        var control_Name = [
        ];
        return control_Name
    }

    function trans_input_data() {
        var trans_coll = [
            { "trasfer": "NO", "dataCol": "", "controlId": "", "grid_id": "", "grid_row_col": "" },
            { "trasfer": "Yes", "dataCol": "in_bank_code", "controlId": "", "grid_id": "grid_Bank", "grid_row_col": "" },
            { "trasfer": "Yes", "dataCol": "orgn_state_desc", "controlId": "", "grid_id": "grid_Address", "grid_row_col": "" }
        ];
        return trans_coll;
    }
</script>

<script>
    function translate() {
        langTranslate('txtFarmer_nameEng', 'txtFarmer_nameTn');
        $("#txtFarmer_nameTn").on("keypress", function (e) {
            convertThis(e);
        });

        function langTranslate(src, dest) {

            $("#" + src).focusout(function () {
                var id = $('#' + src).val();
                $("#HelpDiv").hide();
                if (id != "") {

                    $.ajax({
                        url: '@Url.Action("Foo", "ListViewMaker")',
                        type: 'GET',
                        dataType: 'json',
                        cache: false,
                        data: { 'id': id },
                        success: function (result) {
                            $('#' + dest).val(decodeEntities(result));
                        },
                        error: function () {
                            alert('Error occured');
                        }
                    });
                }
                else {
                    $('#' + dest).val("");
                    $("#HelpDiv").hide();
                }

            })
            $('#' + dest).focus(function () {
                $("#HelpDiv").html("")
            });

            $("body").click(function () {
                $("#HelpDiv").hide();
            });
            $("tab_list").click(function () {
                $("#HelpDiv").hide();
            });
        }

        function decodeEntities(input) {
            var y = document.createElement('textarea');
            y.innerHTML = input;
            return y.value;
        }

    }
</script>