@{
    ViewBag.Form = "Bill Entries";
    //ViewBag.helpName = "BillEntriesForm.html";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}
<form id="MapMilk_DNew" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="cmb_cc" class="col-sm-5 control-label required">Collection Centre</label>
                        <div class="col-sm-7">
                            <input id="cmb_cc" name="cmb_collection" style="width: 100%" data-role="filtercombo">
                            <input type="hidden" id="mode_flag" name="mode_flag" />
                            <input type="hidden" id="ccbill_rowid" />
                            <input type="hidden" id="valid" />
                            <input type="hidden" id="process_status" name="process_status">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txtValidity" class=" col-sm-5 control-label required">Milk Supplied Between</label>
                        <div class=" col-sm-6">
                            <input class="cusDate" type="date" data-role='' onkeypress="return date_validate(event)" id="txtValidity" data-checkdate-msg="Enter Valid Date" name="period_from" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txtValidity1" class=" col-sm-4 control-label required">To</label>
                        <div class=" col-sm-6">
                            <input class="cusDate" type="date" data-role='' onkeypress="return date_validate(event)" id="txtValidity1" data-checkdate-msg="Enter Valid Date" name="period_to" style="width:100%" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                        <button id="btnFetch" title="" data-placement="top" data-toggle="tooltip" class="btn btn-info" type="button" onclick="mandatory()"> <span class="glyphicon glyphicon-refresh"></span></button>
                    </div>
                </div>
            </div>

            <div class="row">
                <section class="col-md-12">
                    <div id="tab_list" class="col-md-12">
                        <ul class="nav nav-tabs">
                            <li>
                                <a href="#Milktransfer" onclick="mlktran()" role="tab" data-toggle="tab">
                                    Milk Transfers
                                </a>
                            </li>

                            <li>
                                <a href="#RetailSales" onclick="artalsales()" role="tab" data-toggle="tab">
                                    Retail Sales
                                </a>
                            </li>
                            <li>
                                <a href="#Summary" onclick="summ()" role="tab" data-toggle="tab">
                                    Summary
                                </a>
                            </li>
                        </ul>
                        <div class="tab-content">

                            <div class="tab-pane fade active in" id="Milktransfer">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div class="" style="padding-bottom:20px">
                                            <div id="bill_grid"></div>
                                        </div>
                                        <div id="MilkMap_grid">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="RetailSales">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="grid"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade active in" id="Summary">
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div class="col-xs-6">
                                            <label>Transferred Milk Summary</label>
                                            <div id="gridtransfer">
                                            </div>
                                        </div>
                                        <div class="col-xs-6">
                                            <label>Retailed  Milk Summary</label>
                                            <div id="grid_Retailed">
                                            </div>
                                        </div>
                                        <div class="col-sm-6" style="padding-top:10px; padding-bottom:10px">
                                            <div class="form-group">
                                                <label for="txtmilkacc" class="col-sm-5 control-label ">Total Milk Accepted (Lts.)</label>
                                                <div class=" col-sm-4">
                                                    <input type="text" id="txtmilkacc" class="form-control" maxlength="50" name="sum_milk_accept" readonly>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="txtmilkrej" class="col-sm-5 control-label ">Total Amount (Rs.pp)</label>
                                                <div class=" col-sm-4">
                                                    <input type="text" id="txtmilkrej" class="form-control" maxlength="50" name="sum_amount_accept" readonly>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6" style="padding-top:10px; padding-bottom:10px">
                                            <div class="form-group">
                                                <label for="txtmilkrec" class="col-sm-5 control-label ">Total Milk Retailed (Lts.)</label>
                                                <div class=" col-sm-4">
                                                    <input type="text" id="txtmilkrec" class="form-control" maxlength="50" name="sum_milk_retail" readonly>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="txtmilktotal" class="col-sm-5 control-label ">Total Retail Amount (Rs.pp)</label>
                                                <div class=" col-sm-4">
                                                    <input type="text" id="txtmilktotal" class="form-control" maxlength="50" name="sum_amount_retail" readonly>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
</form>


<script>
    click_act_name = "BillEntriesList";
    click_ctrl_name = "BillEntries";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script src="~/API_Scripts/BillEntry.js"></script>
<script src="~/API_Scripts/Bill_Entry_saveBillEntry_APIClient.js"></script>
<script src="~/API_Scripts/Bill_Entry_retrieveBillSessionDtl_APIClient.js"></script>
<script src="~/API_Scripts/Bill_Entry_retrieveBillEntry_APIClient.js"></script>
<script src="~/API_Scripts/Bill_Entry_retretrieveBillEntryList_APIClient.js"></script>
<script src="~/API_Scripts/retretrieveBillEntryList_Model.js"></script>
<script src="~/API_Scripts/retrieveBillEntry_Model.js"></script>
<script src="~/API_Scripts/saveBillEntry_Model.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/API_Scripts/retrieveBillSessionDtl_Model.js"></script>

<script>
    $(document).ready(function () {
        Form_validate_Name = $('form.form-horizontal').attr('id');
        //var container = $("#MapMilk_DNew");
        //kendo.init(container);
        //container.kendoValidator({
        //});
        var container = $("#MapMilk_DNew");
        kendo.init(container);
        container.kendoValidator({
            rules: {
                checkdate: function (input) {
                    if (input.attr("data-role") == "datepicker") {
                        var res = isDate(input.val());
                        return res;
                    }
                    else {
                        return true;
                    }
                }
            }
        });


        $(".file_attach").attr("hdrtitle", "Bill Entries");
        $(".notes").attr("hdrtitle", "Bill Entries");
        $("#lblForm_menuid").text("BILL_ENTRIES");

        Screen_Id = "MLKBILL";
        permission = sec_Permission(Screen_Id);

        kendodate_format();
        gridmilk();
        gridTransfer();
        gridRetailed();
        grid();
        //billgrid();
        $("#common_id").text("Bill ID")
        load_master_code();

        //collection center
        var CC = "";
        $("#cmb_cc").empty();
        CC = grid_comboScreen_mastercodes("CC");
        filter_combobox("cmb_cc", CC);

        billgrid(data);
        $("div#Summary").hide();
        if (getlocalStorage('btn_clk_val') == "Create") {
            $('#divCreate #review').hide();
            $("#bottom_menus").hide();
            $("#status_code").val("A");
            $("#DocStat").val("New");
            $("#mode_flag").val('I');
            //load_master_code();
        }
        else if (getlocalStorage('btn_clk_val') == "View" || getlocalStorage('btn_clk_val') == "Edit") {
            $('#divEdit #reviewEd').hide();
            $('#btnFetch').hide();
            if (getlocalStorage("ls_pageList") != undefined) {
                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("MapMilk_DNew");
                var obj_val = JSON.parse(formval);
                if (data != undefined) {
                    obj_val.ccbill_rowid = data.ccbill_rowid;
                    obj_val.ccbill_no = data.ccbill_no;
                    obj_val.cc_aggrloc_code = data.cc_aggrloc_code;
                    obj_val.period_from = getFormated_StringDate(data.period_from);
                    obj_val.period_to = getFormated_StringDate(data.period_to);
                    $("#txtcommon_id").val(data.ccbill_no);

                    var data = {};
                    data.context = WebAPIProxy.getContext();;
                    data.context.Header = obj_val;
                    retrieve_billentry_details(data);

                    $('#cmb_cc').data("kendoComboBox").enable(false);
                    $("#mode_flag").val("U");
                    setlocalStorage('doc_no', $("#txtcommon_id").val());
                    setlocalStorage('doc_row_id', $("#ccbill_rowid").val());
                }
            }
        }

        if ($("#DocStat").val() == "New") {
            $('#txtValidity').data('kendoDatePicker').enable(true);
            $('#txtValidity1').data('kendoDatePicker').enable(true);
        }
        else {
            $('#txtValidity').data('kendoDatePicker').enable(false);
            $('#txtValidity1').data('kendoDatePicker').enable(false);
        }
        $("#txtValidity").kendoDatePicker({
            max: new Date(),// sets max date
            format: "dd/MM/yyyy"
        });
        $("#txtValidity1").kendoDatePicker({
            max: new Date(),// sets max date
            format: "dd/MM/yyyy"
        });
    });
</script>
<script>
    function artalsales() {
        try{
            $("div#RetailSales").toggleClass('tab-pane fade active in');
            $("div#Milktransfer").hide();
            $("div#RetailSales").show();
            $("div#Summary").hide();
            var itemGrid = $("#grid").data("kendoGrid");
            itemGrid.refresh();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function summ() {
        try{
            $("div#Summary").toggleClass('tab-pane fade active in');
            $("div#Milktransfer").hide();
            $("div#RetailSales").hide();
            $("div#Summary").show();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function mlktran() {
        try{
            $("div#Milktransfer").toggleClass('tab-pane fade active in');
            $("div#Milktransfer").show();
            $("div#RetailSales").hide();
            $("div#Summary").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<script>
    function load_master_code() {
        try{
            debugger;
            var data = {};
            var context = WebAPIProxy.getContext();
            data.userId = context.userId
            data.orgnId = context.orgnId
            data.locnId = context.locnId
            data.localeId = context.localeId
            data.screen_Id = "MLKBILL";
            var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function mandatory() {
        try{
            var mandatory_check = true;

            var grid_validate_msg = "";

            if ($('#cmb_cc').data("kendoComboBox").value() == "") {
                grid_validate_msg += "Collection Center cannot be blank <br>";
                mandatory_check = false;
            }
            if ($("#txtValidity").val() == "") {
                grid_validate_msg += "Milk Supplied From cannot be blank <br>";
                mandatory_check = false;
            }
            if ($("#txtValidity1").val() == "") {
                grid_validate_msg += "Milk Supplied To cannot be blank <br>";
                mandatory_check = false;
            }

            if (mandatory_check == false) {
                kendoAlert(grid_validate_msg);
                return false;
            }
            else {
                return listLoad();
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<script>
    function gridmilk(data) {
        try {
            $("#MilkMap_grid").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                milksession_code: { type: "string", editable: false },
                                transferred_to_cp: { type: "string", editable: false },
                                transferred_to_cp_desc: { type: "string", editable: false },
                                milk_from: { type: "string", editable: false },
                                milk_depatched: { type: "string" },
                                fat: { type: "string" },
                                snf: { type: "string" },
                                awm: { type: "string" },
                                milk_accepted: { type: "string" },
                                rate: { type: "string" },
                                retailed_milk: { type: "string" },
                                retailed_rate: { type: "string" },
                                retailed_amount: { type: "string" },
                                cp_aggrloc_code: { type: "string" },
                                milk_date: { type: "string", editable: false },
                                status_desc: { type: "string", editable: false },
                                transferred_qty: { type: "string", editable: false },
                                mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },

                height: 300,
                groupable: false,
                //change: onChangeSelection,
                sortable: true,
                edit: OnEdit,
                dataBound: function (e) {
                    var grid = $("#MilkMap_grid").data("kendoGrid");
                    var gridData = grid.dataSource.view();
                    var accp_qty = 0;
                    for (var i = 0; i < gridData.length; i++) {
                        if (gridData[i].accepted_qty != '') {
                            accp_qty += gridData[i].accepted_qty != undefined ? parseFloat(gridData[i].accepted_qty) : parseFloat(0);
                        }
                    }
                    $('#txtmilkacc').val(accp_qty);
                },
                save: function (data) {

                    //if (data.values.accepted_qty) {
                    //    data.model.set("milk_amount", (parseInt(data.values.accepted_qty) * parseFloat(data.model.milk_rate)).toFixed(2));
                    //}
                    //else {
                    //    data.model.set("milk_amount", (parseInt(data.model.accepted_qty) * parseFloat(data.values.milk_rate)).toFixed(2));
                    //}

                    if (data.values.accepted_qty) {
                        data.model.set("milk_amount", (parseFloat(data.values.accepted_qty).toFixed(2) * parseFloat(data.model.milk_rate)).toFixed(2));
                    }
                    else {
                        data.model.set("milk_amount", (parseFloat(data.model.accepted_qty).toFixed(2) * parseFloat(data.values.milk_rate)).toFixed(2));
                    }
                },
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: "ccbillsessiondtl_rowid",
                        title: "ccbillsessiondtl_rowid ID",
                        hidden: true
                    },
                     {
                         field: "ccbill_no",
                         title: "ccbill_no",
                         hidden: true
                     },
                    {
                        field: "milksession_code",
                        title: "Session ID",
                        width: 140,

                    },
                 {
                     field: "milk_date",
                     title: "Date",
                     width: 140,

                 },
                {
                    field: "cp_aggrloc_code",
                    title: "cp_aggrloc_code",
                    hidden: true
                },
                {
                    field: "transferred_to_cp",
                    title: "Transferred To CP",
                    hidden: true
                },
                 {
                     field: "transferred_to_cp_desc",
                     title: "Transferred To CP",
                     width: 140,
                     editable: false
                 },
                {
                    field: "milk_from",
                    title: "Milk From",
                    width: 80,

                },
                 {
                     field: "transferred_qty",
                     title: "Milk Despatched (Lts.)",
                     width: 130
                 },
                  {
                      field: "fat_percent",
                      title: "Fat%",
                      width: 80,
                      editor: function (container, options) {
                          item_rate(container, options.field, '9', '2');
                      },
                  },
                   {
                       field: "snf_percent",
                       title: "SNF%",
                       width: 80,
                       editor: function (container, options) {
                           item_rate(container, options.field, '9', '2');
                       },
                   },
                    {
                        field: "awm_percent",
                        title: "AWM%",
                        width: 80,
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },
                    },
                    {
                        field: "accepted_qty",
                        title: "Milk Accepted (Lts.)",
                        width: 120,
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },
                    },
                    {
                        field: "milk_rate",
                        title: "Rate (Rs.pp)",
                        width: 100,
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },
                    },

                    {
                        field: "milk_amount",
                        title: "Amount (Rs.pp)",
                        width: 100,
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },
                    },
                     {
                         field: "status_code",
                         title: "Status",
                         hidden: true,
                         width: 100
                     },
                {
                    field: "status_desc",
                    title: "Status",
                    width: 100
                },
                {
                    field: "mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }
    function OnEdit(e) {
        setDefaultValues(e);
        //e.container.find("input[name='fat_percent']").attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');
        var grid_validate_msg = "";
        grid_validate_msg = "Milk Accepted should not greater than Milk Despatched";
        e.container.find("input[name='milk_amount']").attr('onkeypress', 'return false');
        e.container.find("input[name='accepted_qty']").focusout(function () {
            if (parseFloat($(this).val()) > parseFloat(e.model.transferred_qty)) {
                e.model.accepted_qty = 0;
                kendoAlert(grid_validate_msg);
                return false;
            }
            else {
                //var rate = e.container.find("input[name='milk_rate']");
                if ($("#txtmilkacc").val() != "" && $("#txtmilkacc").val() != undefined) {
                    $("#txtmilkacc").val(parseInt($(this).val()) + parseInt($("#txtmilkacc").val()));
                }
                else {
                    $("#txtmilkacc").val(parseInt($(this).val()));
                }
            }
        });   

        
        var grid = $("#MilkMap_grid").data("kendoGrid");
        var gridData = grid.dataSource.view();
        var accp_qty = 0;
        var milkamt = 0;
        for (var i = 0; i < gridData.length; i++) {
            if (gridData[i].accepted_qty != '') {
                accp_qty += gridData[i].accepted_qty != undefined ? parseFloat(gridData[i].accepted_qty) : parseFloat(0);               
            }
        }
        $('#txtmilkacc').val(accp_qty);

        for (var j = 0; j < gridData.length; j++) {            
            if (gridData[j].milk_amount != '') {
                milkamt += gridData[j].milk_amount != undefined ? parseFloat(gridData[j].milk_amount) : parseFloat(0);
            }
        }
        $('#txtmilkrej').val(milkamt);
        
        //e.container.find("input[name='milk_amount']").focusout(function () {
        //    if ($("#txtmilkrej").val() != "" && $("#txtmilkrej").val() != undefined) {
        //        $("#txtmilkrej").val(parseFloat($(this).val()) + parseFloat($("#txtmilkrej").val()));
        //    }
        //    else {
        //        $("#txtmilkrej").val(parseFloat($(this).val()));
        //    }
        //});

        e.container.find("input[name='transferred_qty']").focusout(function () {
            if (parseFloat(e.model.accepted_qty) > parseFloat($(this).val())) {
                e.model.accepted_qty = 0;
                kendoAlert(grid_validate_msg);
                return false;
            }

        });
    }
    function check(acc, tf) {
        if (acc >= tf) {
            acc = "";
        }
    }
</script>
<script>
    //var data = [];  Retaile sales
    function grid(data) {
        try {
            $("#grid").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                milksession_code: { type: "string", editable: false },
                                milk_from: { type: "string", editable: false },
                                milk_retailed_qty: { type: "string", editable: false },
                                retailed_to: { type: "string", editable: false },
                                retail_rate: { type: "string", editable: false },
                                retail_amount: { type: "string", editable: false },

                                mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },

                height: 400,
                groupable: false,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    field: "milksession_code",
                    title: "Session ID",
                    width: 100
                },
                 {
                     field: "milk_date",
                     title: "Date",
                     width: 140,
                     hidden: true
                 },
                {
                    field: "milk_from_desc",
                    title: "milk_from",
                    hidden: true
                },
                 {
                     field: "milk_from",
                     title: "Milk From",
                     width: 100,
                 },
                 {
                     field: "milk_retailed_qty",
                     title: "Milk Retailed (Lts.)",
                     width: 100
                 },
                 {
                     field: "retailed_to",
                     title: "Retailed To",
                     width: 100
                 },
                  {
                      field: "retail_rate",
                      title: "Retail Rate (Rs.pp)",
                      width: 100
                  },
                   {
                       field: "retail_amount",
                       title: "Retail Amount (Rs.pp)",
                       width: 100
                   },

                ],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }
</script>
<script>
    //var data = [];
    function gridTransfer(data) {
        try {
            $("#gridtransfer").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                cc_aggrloc_desc: { type: "string", editable: false },
                                milk_from_desc: { type: "string", editable: false },
                                total_milk_accept: { type: "string", editable: false },
                                total_amount_accept: { type: "string", editable: false },
                                mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },

                height: 200,
                groupable: false,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    field: "cc_aggrloc_desc",
                    title: "Transferred To CP",
                    width: 100
                },
                {
                    field: "milk_from_desc",
                    title: "Milk From",
                    width: 100
                },
                 {
                     field: "total_milk_accept",
                     title: "Total Milk Accepted (Lts.)",
                     width: 100
                 },
                 {
                     field: "total_amount_accept",
                     title: "Total Amount (Rs.pp)",
                     width: 100
                 },
                ],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }
</script>
<script>
    //var data = [];
    function gridRetailed(data) {
        try {
            $("#grid_Retailed").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                retailed_to: { type: "string", editable: false },
                                milk_from_desc: { type: "string", editable: false },
                                total_milk_retail: { type: "string", editable: false },
                                total_amount_retail: { type: "string", editable: false },
                                mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                height: 200,
                groupable: false,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    field: "retailed_to",
                    title: "Retailed To",
                    width: 100
                },
                {
                    field: "milk_from_desc",
                    title: "Milk From",
                    width: 100
                },
                 {
                     field: "total_milk_retail",
                     title: "Total Milk Retailed (Lts.)",
                     width: 100
                 },
                 {
                     field: "total_amount_retail",
                     title: "Total Amount (Rs.pp)",
                     width: 100
                 },
                ],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }
</script>

<script>
    function billgrid(data) {
        try {
            $("#bill_grid").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                cp_aggrloc_code: { type: "string", editable: false },
                                route_code: { type: "string" },
                                route_desc: { type: "string" },
                                bill_no: { type: "string" },
                                status_desc: { type: "string", editable: false },
                                mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                change: onChangeSelection,
                height: 100,
                groupable: false,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                 {
                     field: "ccbilldtl_rowid",
                     title: "ccbilldtl_rowid",
                     hidden: true
                 },

                 {
                     field: "cp_aggrloc_desc",
                     title: "cp_aggrloc_desc",
                     hidden: true
                 },
                {
                    field: "cp_aggrloc_code",
                    title: "Transferred To CP",
                    width: 100
                },
                {
                    field: "route_code",
                    title: "Route Code",
                    width: 100
                },
                 {
                     field: "route_desc",
                     title: "Route Name",
                     width: 100
                 },
                 {
                     field: "cpbill_no",
                     title: "Bill Serial No",
                     width: 100
                 },
                 {
                     field: "process_status",
                     title: "process_status",
                     hidden: true
                 },
                 {
                     field: "process_status_desc",
                     title: "process_status_desc",
                     hidden: true
                 },
                 {
                     field: "status_code",
                     title: "Status",
                     hidden: true
                 },
                  {
                      field: "status_desc",
                      title: "Status",
                      width: 100
                  },
                {
                    field: "mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                dataBound: function (e) {
                    e.sender.select("tr:eq(1)");
                },
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }
    function onChangeSelection() {
        try{
            var grid = $("#bill_grid").data("kendoGrid");
            var selectedItem = grid.dataItem(grid.select());
            if (selectedItem != null) {
                var formval = form_Serialize("MapMilk_DNew");
                var obj_val = JSON.parse(formval);
                if ($("#ccbill_rowid").val() != "") {
                    obj_val.ccbill_rowid = $("#ccbill_rowid").val();
                }
                else {
                    obj_val.ccbill_rowid = "0";
                }
                if ($("#txtcommon_id").val() != "") {
                    obj_val.ccbill_no = $("#txtcommon_id").val();
                }
                else {
                    obj_val.ccbill_no = "0";
                }
                var c = $('#cmb_cc');
                obj_val.cc_aggrloc_code = c.data('kendoComboBox').value();
                if (obj_val.hasOwnProperty('period_from')) {
                    if (obj_val.period_from != '')
                        obj_val.period_from = getFormated_StringDate(obj_val.period_from);
                }
                if (obj_val.hasOwnProperty('period_to')) {
                    if (obj_val.period_to != '')
                        obj_val.period_to = getFormated_StringDate(obj_val.period_to);
                }
                obj_val.cp_aggrloc_code = selectedItem.cp_aggrloc_code;

                var data = {};
                data.context = WebAPIProxy.getContext();;
                data.context.Header = obj_val;
                retrieve_billentry_session_details(data);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<script>
    function gridvalidation()
    {
        var grid = $("#bill_grid").data("kendoGrid");
        grid.dataSource.read();
        var count = grid.dataSource.total();
        if(count==0)
        {
            kendoAlert("No session details for those dates");
            return false;
        }
    }
</script>
<script>
    function save() {
       
        try {
            
            $('#txtValidity').data('kendoDatePicker').enable(true);
            $('#txtValidity1').data('kendoDatePicker').enable(true);
            if ($("#ccbilldtl_rowid").val() == "") {
                $("#ccbilldtl_rowid").val('1');
            }
            if ($("#ccbillsessiondtl_rowid").val() == "") {
                $("#ccbillsessiondtl_rowid").val('1');
            }
            $('#cmb_cc').data("kendoComboBox").enable(true);
            var formval = form_Serialize("MapMilk_DNew");
            var obj_val = JSON.parse(formval);
            if ($("#ccbill_rowid").val() == undefined || $("#ccbill_rowid").val() == "") {
                obj_val.ccbill_rowid = "0";
            }
            else {
                obj_val.ccbill_rowid = $("#ccbill_rowid").val();
            }
            if ($("#txtcommon_id").val() == undefined || $("#txtcommon_id").val() == "") {
                obj_val.ccbill_no = "0";
            }
            else {
                obj_val.ccbill_no = $("#txtcommon_id").val();
            }
            if (obj_val.process_status == undefined) {
                obj_val.process_status = "0";
            }
            if (obj_val.status_code == undefined) {
                obj_val.status_code = "A";
            }
            if (obj_val.row_timestamp == undefined) {
                obj_val.row_timestamp = "0";
            }
            //if (getlocalStorage('btn_clk_val') == "Create") {
            //    obj_val.mode_flag = "I";
            //}
            //else if (getlocalStorage('btn_clk_val') == "Edit") {
            //    obj_val.mode_flag = "U";
            //}
            if (obj_val.hasOwnProperty('period_from')) {
                if (obj_val.period_from != '')
                    obj_val.period_from = getFormated_StringDate(obj_val.period_from);
            }
            if (obj_val.hasOwnProperty('period_to')) {
                if (obj_val.period_to != '')
                    obj_val.period_to = getFormated_StringDate(obj_val.period_to);
            }
            var c = $('#cmb_cc');
            obj_val.cc_aggrloc_code = c.data('kendoComboBox').value();
            var grid_val = JSON.stringify($("#bill_grid").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            $.each(result, function (index, value) {
                var ccbilldtlrowid = value.ccbilldtl_rowid;
                if (ccbilldtlrowid == undefined) {
                    result[index].ccbilldtl_rowid = "0";
                }
                var mmode = result[index].mode_flag;
                if (mmode == "S") {
                    result[index].mode_flag = "U";
                }

            });
            var obj_grid_val = result;

            var grid_val1 = JSON.stringify($("#MilkMap_grid").data().kendoGrid._data);
            var Bind1 = {};
            Bind1 = grid_val1;
            var result1 = JSON.parse(Bind1);
            $.each(result1, function (index, value) {
                var ccbillsessiondtlrowid = value.ccbillsessiondtl_rowid;
                if (ccbillsessiondtlrowid == undefined) {
                    result1[index].ccbillsessiondtl_rowid = "0";
                }
                var cp_aggrloc_code = result1[index].transferred_to_cp;
                if (cp_aggrloc_code == undefined) {
                    result1[index].cp_aggrloc_code = "0";
                }
                else {
                    result1[index].cp_aggrloc_code = cp_aggrloc_code;
                }
                var mmode = result1[index].mode_flag;
                if (mmode == "S") {
                    result1[index].mode_flag = "U";
                }
            });

            var grid = $("#bill_grid").data("kendoGrid");
            grid.dataSource.read();
            var count = grid.dataSource.total();
            var grid2 = $("#MilkMap_grid").data("kendoGrid");
            grid2.dataSource.read();
            var count2 = grid2.dataSource.total();
            if (count == 0 || count2 == 0) {
                kendoAlert("No session details for given dates");
                return false;
            }
            var obj_grid_val1 = result1;

            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Header = obj_val;
            //data.context.TransferredMilk = obj_grid_val;
            //data.context.RetailedMilk = obj_grid_val1;
            data.context.BillDtl = obj_grid_val;
            data.context.BillSession = obj_grid_val1;

            save_billentry_details(data);
            $('#txtValidity').data('kendoDatePicker').enable(false);
            $('#txtValidity1').data('kendoDatePicker').enable(false);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function DeleteDetails() {
        try{
            $("#mode_flag").val("D");
            save();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<script>
    function listLoad() {
        try{
            var formval = form_Serialize("MapMilk_DNew");
            var obj_val = JSON.parse(formval);
            obj_val.ccbill_rowid = "0";
            obj_val.ccbill_no = "0";
            var c = $('#cmb_cc');
            obj_val.cc_aggrloc_code = c.data('kendoComboBox').value();
            obj_val.period_from = $("#txtValidity").val();
            obj_val.period_to = $("#txtValidity1").val();

            if (obj_val.hasOwnProperty('period_from')) {
                if (obj_val.period_from != '')
                    obj_val.period_from = getFormated_StringDate(obj_val.period_from);
            }
            if (obj_val.hasOwnProperty('period_to')) {
                if (obj_val.period_to != '')
                    obj_val.period_to = getFormated_StringDate(obj_val.period_to);
            }

            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Header = obj_val;
            retrieve_billentry_details(data);

            var grid2 = $("#MilkMap_grid").data("kendoGrid");
            grid2.dataSource.read();
            var count2 = grid2.dataSource.total();
            if (count2 == 0) {
                kendoAlert("No milk collection details available for given dates, please try after changing the dates...");
            }
            return false;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    //----------Header
    function generate_billentry_header(res) {
        try{
            if (res != null && getlocalStorage('btn_clk_val') != "Create") {
                $("#txtcommon_id").val(res.ccbill_no);
                $('#cmb_cc').data("kendoComboBox").value(res.cc_aggrloc_code);
                var fromDate = res.period_from.split('/').reverse().join('/');
                $("#txtValidity").val(fromDate);
                var toDate = res.period_to.split('/').reverse().join('/');
                $("#txtValidity1").val(toDate);
                $("#ccbill_rowid").val(res.ccbill_rowid);
                $("#DocStat").val(res.status_desc);
                $("#process_status").val(res.process_status);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function generate_billentry_RetailSales(res) {
        try{
            if (res != null) {
                var data = changedataType(res);
                grid(data);
            }
            else {

                grid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    //Tranfered Milk
    function generate_billentry_TransferredMilk(res) {
        try{
            if (res != null) {
                var data = changedataType(res);
                gridTransfer(data);
            }
            else {

                gridTransfer([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    //Related Milk Sumary
    function generate_billentry_RetailedMilk(res) {
        try{
            if (res != null) {
                var data = changedataType(res);
                gridRetailed(data);
            }
            else {

                gridRetailed([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    //session detali
    function generate_billentry_SessionDtl(res) {
        try{
            if (res != null) {
                var data = changedataType(res);
                gridmilk(data);
            }
            else {

                gridmilk([]);
            }
            
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    //----Summary
    function generate_billentry_Summary(res) {
        try{
            $("#txtmilkacc").val(res.sum_milk_accept);
            $("#txtmilkrej").val(res.sum_amount_accept);
            $("#txtmilkrec").val(res.sum_milk_retail);
            $("#txtmilktotal").val(res.sum_amount_retail);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_billentry_BillDtl(res) {
        try{
            if (res != null) {
                var data = changedataType(res);
                billgrid(data);
            }
            else {

                billgrid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function get_billentry_details(id) {
        try{
            $("#txtcommon_id").val(id.ccbill_no);
            $("#ccbill_rowid").val(id.ccbill_rowid);
            var formval = form_Serialize("MapMilk_DNew");
            var obj_val = JSON.parse(formval);
            obj_val.ccbill_no = id.ccbill_no;
            obj_val.ccbill_rowid = id.ccbill_rowid;
            var c = $('#cmb_cc');
            obj_val.cc_aggrloc_code = c.data('kendoComboBox').value();
            if (obj_val.hasOwnProperty('period_from')) {
                if (obj_val.period_from != '')
                    obj_val.period_from = getFormated_StringDate(obj_val.period_from);
            }
            if (obj_val.hasOwnProperty('period_to')) {
                if (obj_val.period_to != '')
                    obj_val.period_to = getFormated_StringDate(obj_val.period_to);
            }
            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Header = obj_val;
            retrieve_billentry_details(data);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>

<script>
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
</script>

