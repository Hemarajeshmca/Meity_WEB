@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title></title>
</head>
<body>
    <form class="form-horizontal" id="frm_invoice" data-role="validator" novalidate="novalidate">
        <div class="modal-header">
            @*<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>*@
            <h4 class="modal-title">Payment Collection</h4>
        </div>
        <div class="modal-header" style="height:49px">
            <div class="col-sm-12" style="margin-top:-7px">
                <div class="form-group" style="padding-bottom:10px">
                    <div class="col-sm-3">
                        <button type="button" class="btn btn-sm btn-primary" id="btnsave" onclick="fetch_Invoice_payment()" style="width:85px">
                            View
                        </button>
                        <button type="button" class="btn btn-sm btn-default" data-dismiss="modal" id="btnClose" onclick=closeModal(); style="width:85px">
                            Close
                        </button>
                    </div>
                    <div class="col-sm-10">
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-body" style="height:500px">
            <div class="row" style="padding-bottom:15px;padding-left:20px">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="txtProc_amt" class="col-sm-4 control-label ">Invoice Amount</label>
                            <div class="col-sm-6">
                                <input type="text" id="txtProc_amt" class="form-control" maxlength="50" disabled>
                                <input type="hidden" id="hdn_procrowid">
                                <input type="hidden" id="hdn_procno">
                                <input type="hidden" id="hdn_procdate">
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="txtbal_amt" class="col-sm-4 control-label ">Balance Amount</label>
                            <div class="col-sm-6">
                                <input type="text" id="txtbal_amt" class="form-control" name="In_balance_amount" maxlength="50" disabled>
                                <input type="hidden" id="hdnbal_amt" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="cmb_pay" class="col-sm-4 control-label ">Paymode</label>
                            <div class="col-sm-6">
                                <input id="cmb_pay" style="width: 100%" name="In_payment_mode">
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="txtRef_no" class="col-sm-4 control-label ">Reference No</label>
                            <div class="col-sm-6">
                                <input type="text" id="txtRef_no" name="In_ref_no" class="form-control" maxlength="50">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="txtPay_date" class="col-sm-4 control-label ">Payment Date</label>
                            <div class=" col-sm-6">
                                <input class="cusDate" type="date" data-role='datepicker' onkeypress="return date_validate(event)" id="txtPay_date" data-checkdate-msg="Enter Valid Date" name="In_payment_date" style="width:100%" />
                                <span data-for='valid' class='k-invalid-msg'></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="txtpay_amt" class="col-sm-4 control-label ">Payment Amount</label>
                            <div class="col-sm-6">
                                <input type="text" id="txtpay_amt" name="In_payment_amount" class="form-control" maxlength="50">
                                <input type="hidden" id="hdn_status_code" name="In_status_code" value="A">
                                <input type="hidden" id="payment_response" name="In_payment_response" value="">
                                <input type="hidden" id="hdn_row_timestamp" name="In_row_timestamp">
                                <input type="hidden" id="hdn_mode_flag" name="In_mode_flag" value="I">
                                <input type="hidden" id="hdn_check_no" name="In_check_no" value="">
                                <input type="hidden" id="hdn_proc" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group" style="padding-bottom:20px">
                    <div class="col-sm-12">
                        <button type="button" class="btn btn-sm btn-primary" id="btnsaveview" onclick="mandatory1()" style="width:85px;margin-left:330px">
                            Save
                        </button>
                        <button type="button" class="btn btn-sm btn-default" data-dismiss="modal" id="btnClose" onclick=closeModal(); style="width:85px;margin-left:10px">
                            Cancel
                        </button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-11">
                        <div id="grid_Invoice_pay">
                        </div>
                    </div>
                </div>
            </div>

        </div>


    </form>
</body>
</html>
<style>
    .breadcrumb > li + li:before {
        color: #E6E6E6;
    }
</style>
<script>
    click_act_name = "PAWHSNewBookInvoiceForm";
    click_ctrl_name = "PAWHSNewBookInvoice";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script>
    $(document).ready(function () {
        debugger;
        load_master_code();
        kendodate_format();
        var invoice_id = getlocalStorage('viewdis');
        if (invoice_id == 'vdis') {
            //alert("success");
            $("#btnsaveview").prop('disabled', true);
            $("#cmb_pay").prop('disabled', true);
            $("#txtRef_no").prop('disabled', true);
            $("#txtpay_amt").prop('disabled', true);
            setlocalStorage('viewdis', " ");
        }
        $('#invoice_payment').on('show.bs.modal', function (e) {
            gridInvoiceHistory([]);
            fetch_Invoice_payment();
        });
        $('#invoice_payment').on('loaded.bs.modal', function (e) {
            gridInvoiceHistory([]);
            fetch_Invoice_payment();
        });
        $('#invoice_payment').on('hidden.bs.modal', function (e) {
            $('#invoice_payment').removeData();
        });
        var combo_data1 = "";
        $("#cmb_pay").empty();
        combo_data1 = grid_comboScreen_mastercodes("QCD_AEPS_PAYMENT_MODE");
        filter_combobox("cmb_pay", combo_data1);

        var invoice_id = getlocalStorage('procrowid');
        $("#hdn_procrowid").val(invoice_id);
        var proc = getlocalStorage('process');
        $("#hdn_proc").val(proc);

        //$("#txtPay_date").kendoDatePicker({
        //    max: new Date(),// sets max date
        //    format: "dd/MM/yyyy"
        //});

        $('#txtpay_amt').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
               ((event.which < 48 || event.which > 57) &&
               (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if (text.indexOf('.') != -1) {
                if ((text.indexOf('.') != -1) &&
               (text.substring(text.indexOf('.')).length > 2) &&
               (event.which != 0 && event.which != 8) &&
               ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }
            }
            else {
                if ($this.val().length > 17) {
                    if (event.which != 46) {
                        event.preventDefault();
                    }
                }
            }
        });
        $('#txtpay_amt').bind("paste", function (e) {
            var text = e.originalEvent.clipboardData.getData('Text');
            if ($.isNumeric(text)) {
                if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                    e.preventDefault();
                    $(this).val(text.substring(0, text.indexOf('.') + 3));
                }
            }
            else {
                e.preventDefault();
            }
        })
        $("#txtpay_amt").change(function () { balamtchk(); });

        fetch_Invoice_payment();
        //$(window).on("load", fetch_Invoice_payment);
       
        var Actual_Date = $("#txtPay_date").val().split("/")
        var Required_Date = Actual_Date[2] + '-' + Actual_Date[1] + '-' + Actual_Date[0];
        var presentDate = new Date(Required_Date);
        $(function () {
            $('#txtPay_date').kendoDatePicker({
                value: presentDate,
                min: presentDate,
                max: new Date(),
                format: "dd/MM/yyyy"
            }).data('kendoDatePicker');
        });
    });
    function fetch_Invoice_payment() {
        debugger;
        var formval = form_Serialize("frm_invoice");
        var obj_val = JSON.parse(formval);
        if (obj_val != undefined) {
            if ($("#hdn_proc").val() == "BIINVOICE") {
                obj_val.invoice_rowid = $("#hdn_procrowid").val();
                var data_fetch = {};
                data_fetch.context = getContext();
                data_fetch.context.Header = obj_val;
                var Context = data_fetch.context;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, invoice_rowid: Context.Header.invoice_rowid }),
                    url: "/PAWHSNewBookInvoice/InvoicePaymentfetch",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        if (response.context != null) {
                            generate_Invoice_payment_header(response.context.Header);
                            generate_Invoice_payment_Detail(response.context.Detail);
                            var Actual_Date = $("#txtPay_date").val().split("/")
                            var Required_Date = Actual_Date[2] + '-' + Actual_Date[1] + '-' + Actual_Date[0];
                            var presentDate = new Date(Required_Date);
                            $(function () {
                                $('#txtPay_date').kendoDatePicker({
                                    value: presentDate,
                                    min: presentDate,
                                    max: new Date(),
                                    format: "dd/MM/yyyy"
                                }).data('kendoDatePicker');
                            });
                        }
                        else {

                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });

            }           
        }
    }
    function balamtchk() {
        try {
            var pay_amt = $('#txtpay_amt').val() != '' ? parseFloat($('#txtpay_amt').val()) : 0;
            var inv_amt = $('#txtProc_amt').val() != '' ? parseFloat($('#txtProc_amt').val()) : 0;
            var curbal_amt = $('#txtbal_amt').val() != '' ? parseFloat($('#txtbal_amt').val()) : 0;
            var orgbal_amt = $('#hdnbal_amt').val() != '' ? parseFloat($('#hdnbal_amt').val()) : 0;
            var balance_limit = (orgbal_amt - pay_amt).toFixed(2);
            var balance_amt = (orgbal_amt - pay_amt).toFixed(2);

            var grid_validate_msg = "";
            if (balance_limit < 0) {
                $('#txtbal_amt').val(orgbal_amt);
                $('#txtpay_amt').val(0);
                grid_validate_msg = "Payment amount is greater than Balance amount";
                kendoAlert(grid_validate_msg);
            }
            else {
                $('#txtbal_amt').val(balance_amt);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function closeModal() {
        debugger;
        var invoice_amt = $('#txtProc_amt').val();
        var invoice_id = $("#hdn_procrowid").val();
        setlocalStorage("first", $("#txtbal_amt").val());
        var grid = $("#grid_Invoice_pay").data("kendoGrid");
        var gridData = grid.dataSource.view();
        var paid_amt = 0;
        for (var i = 0; i < gridData.length; i++) {
            if (gridData[i].paid_amount != '') {
                paid_amt += gridData[i].paid_amount != undefined ? parseFloat(gridData[i].paid_amount) : parseFloat(0);
            }
        }

        if ($("#hdn_proc").val() == "BIINVOICE") {
            if ($('#txtbal_amt').val() != '0') {
                $('#invoice_payment').modal("hide");
                // get_Invoice_details();
                return false;

            }
            else {
                //  $('#invoice_payment').removeClass('modal-open');
                $('#invoice_payment').modal("hide");
                //$('.modal-backdrop').remove();
            }
        }
        else {
            // $('#invoice_payment').removeClass('modal-open');
            $('#invoice_payment').modal("hide");
            //$('.modal-backdrop').remove();
        }
    }
    function generate_Invoice_payment_header(res) {
        try {
            if (res != null) {
                $("#hdn_procno").val(res.In_invoice_no);
                var invoicedate = res.In_invoice_date.split('-').reverse().join('/');
                $("#txtPay_date").val(invoicedate);
                var invoiceAmount = parseFloat(res.In_invoice_amount).toFixed(2);
                $("#txtProc_amt").val(invoiceAmount);
                var BalanceAmount = parseFloat(res.In_balance_amount).toFixed(2);
                $("#txtbal_amt").val(BalanceAmount);
                var HidBalanceAmount = parseFloat(res.In_balance_amount).toFixed(2);
                $('#hdnbal_amt').val(HidBalanceAmount);

                if (parseFloat(res.In_balance_amount) == 0.00 || res.In_balance_amount == 0) {
                    $('#divUserRole20 #btnSave').hide();
                   // $("#divUserRole20 #btnReport2").hide();
                   // $("#divUserRole20 #btnA4Report").show();
                    var security = sec_PermissionNew(Screen_Id);
                    var securityform = security;
                    console.log(securityform);
                    if (securityform['print'] == true) {
                        $("#divUserRole20 #btnReport2").hide();
                        $("#divUserRole20 #btnA4Report").show();
                    }
                    else {
                        $("#divUserRole20 #btnReport2").hide();
                        $("#divUserRole20 #btnA4Report").hide();
                    }
                    $("#grid_invoice .k-grid-add").hide();
                    $("#grid_invoice .k-grid-Delete").hide();
                    var len = $("#invoice_form #grid_invoice").find("tbody tr").length;
                    for (var i = 0; i <= len; i++) {
                        var model = $("#invoice_form #grid_invoice").data("kendoGrid").dataSource.at(i);
                        if (model) {//field names
                            model.fields["In_product_desc"].editable = false;
                            model.fields["In_qty"].editable = false;
                            model.fields["In_rate"].editable = false;
                            model.fields["In_discount_amount"].editable = false;
                            model.fields["In_tax_amount"].editable = false;
                            $(".Delete").attr("disabled", false);
                        }
                    }
                    $("#divUserRole20 #btnSave").hide();
                    balance();

                }
                else {
                    $('#divUserRole20 #btnSave').show();
                    $("#divUserRole20 #btnReport2").hide();
                    $("#divUserRole20 #btnA4Report").hide();
                }
                if ($("#hdnbal_amt").val() != $("#txtProc_amt").val()) {
                    $("#grid_invoice .k-grid-add").hide();
                    $("#grid_invoice .Delete").hide();
                    $("#grid_invoice .k-grid-Delete").hide();
                    var len = $("#invoice_form #grid_invoice").find("tbody tr").length;
                    for (var i = 0; i <= len ; i++) {
                        var model = $("#invoice_form #grid_invoice").data("kendoGrid").dataSource.at(i);
                        if (model) {//field names
                            model.fields["In_product_desc"].editable = false;
                            model.fields["In_qty"].editable = false;
                            model.fields["In_base_price"].editable = false;
                            model.fields["In_discount_amount"].editable = false;
                            model.fields["In_tax_amount"].editable = false;
                            $(".Delete").attr("disabled", false);
                        }
                    }
                    $("#divUserRole20 #btnSave").hide();
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_Invoice_payment_Detail(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                for (var i = 0; i < data.length; i++) {
                    data[i].In_payment_amount = parseFloat(data[i].In_payment_amount).toFixed(2);
                    data[i].In_balance_amount = parseFloat(data[i].In_balance_amount).toFixed(2);
                    data[i].In_paid_amount = parseFloat(data[i].In_paid_amount).toFixed(2);

                }
                gridInvoiceHistory(data);
                //$("#hdn_mode_flag").val("S");
            }
            else {
                gridInvoiceHistory([]);
                //$("#hdn_mode_flag").val("I");
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

   
    function gridInvoiceHistory(data) {
        try {
            $("#grid_Invoice_pay").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_invoice_amount: { type: "string", editable: false },
                                In_balance_amount: { type: "string", editable: false },
                                In_Paymode: { type: "string", editable: false },
                                In_Reference_No: { type: "string", editable: false },
                                In_Payment_Date: { type: "string", editable: false },
                                In_payment_amount: { type: "string", editable: false },
                                In_payment_mode_desc: { type: "string", editable: false },
                                In_balance_amount: { type: "string", editable: false },
                                In_ref_no: { type: "string", editable: false },
                                In_payment_date: { type: "string", editable: false },
                                In_paid_amount: { type: "string", editable: false },
                                In_mode_flag: { type: "string" },
                                In_paymentcollection_rowid: { type: "string" }
                            }
                        },
                        parse: function (data) {
                            return $.map(data, function (item) {
                                if (item.In_balance_amount == undefined || item.In_balance_amount == '') {
                                    item.In_balance_amount = (parseFloat(item.In_payment_amount) - parseFloat(item.In_paid_amount)).toFixed(2);
                                }
                                return item;
                            });
                        }
                    }
                },
                height: 250,
                groupable: false,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
            {
                name: "Delete",
                id: "Delete",
                imageClass: "fa fa-close",
                click: function (e) {
                    // e.preventDefault();
                    var grid = $("#grid_Invoice_pay").data("kendoGrid");
                    var dataItem = $("#grid_Invoice_pay").data("kendoGrid").dataItem($(e.target).closest("tr"));
                    DeleteWindowEvent(e, dataItem, grid);
                    e.stopImmediatePropagation()
                }
            },
                    ], title: "&nbsp;", width: "25px",
                },
                    {
                        field: "In_paymentcollection_rowid",
                        title: "paymentcollection_rowid",
                        hidden: true
                    },
                   {
                       field: "In_payment_amount",
                       title: "Invoice Amount",
                       width: 80,
                       attributes: { style: "text-align:right;" },


                   },
                   {
                       field: "In_payment_no",
                       title: "payment_no",
                       hidden: true

                   },
                {
                    field: "In_payment_type",
                    title: "payment_type",
                    hidden: true

                },
                {
                    field: "In_payment_type_desc",
                    title: "payment_type_desc",
                    hidden: true

                },
                 {
                     field: "In_Paymode",
                     title: "Paymode",
                     hidden: true

                 },
                 {
                     field: "In_payment_type_desc",
                     title: "payment mode",
                     width: 80

                 },
                 {
                     field: "In_balance_amount",
                     title: "Balance Amount",
                     width: 80,
                     attributes: { style: "text-align:right;" },

                 },
                  {
                      field: "In_ref_no",
                      title: "Reference No",
                      width: 80

                  },
                  {
                      field: "In_payment_date",
                      title: "Payment Date",
                      width: 80
                  },
                  {
                      field: "In_paid_amount",
                      title: "Paid Amount",
                      width: 80,
                      attributes: { style: "text-align:right;" },
                  },
                  {
                      field: "In_process_status",
                      title: "process_status",
                      width: 1,
                      hidden: true,
                  },
                  {
                      field: "In_process_status_desc",
                      title: "process_status_desc",
                      width: 1,
                      hidden: true,
                  },
                   {
                       field: "In_mode_flag",
                       title: "Mode",
                       hidden: true
                   }
                ],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }
</script>
<script>
    function mandatory1() {
        debugger;
        try {
            var grid_val = JSON.stringify($("#grid_Invoice_pay").data().kendoGrid._data);
            if (grid_val == "[]") {
                mandatory();
            }
            else {
                savegrid();
            }

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function mandatory() {
        debugger;
        try {
            var mandatory_check = true;

            var grid_validate_msg = "";

            if ($("#txtProc_amt").val() == "" || $("#txtProc_amt").val() == undefined) {
                if ($("#hdn_proc").val() == "BIINVOICE") {
                    grid_validate_msg += "Invoice amount cannot be blank <br>";
                }                
                mandatory_check = false;
            }
            if ($("#txtbal_amt").val() == "" || $("#txtbal_amt").val() == undefined) {
                grid_validate_msg += "Balance amount cannot be blank <br>";
                mandatory_check = false;
            }
            if ($('#cmb_pay').data("kendoComboBox").value() == "" || $('#cmb_pay').data("kendoComboBox").value() == undefined) {
                grid_validate_msg += "Payment mode cannot be blank <br>";
                mandatory_check = false;
            }
            if ($("#txtPay_date").val() == "" || $("#txtPay_date").val() == undefined) {
                grid_validate_msg += "Payment cannot be blank <br>";
                mandatory_check = false;
            }
            if ($("#txtpay_amt").val() == "" || $("#txtpay_amt").val() == undefined || $('#txtpay_amt').val() <= 0) {
                grid_validate_msg += "Payment amount cannot be blank <br>";
                mandatory_check = false;
            }

            if (mandatory_check == false) {
                kendoAlert(grid_validate_msg);
                return false;
            }
            else {
                return savepayment();
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }




    function savepayment() {
        debugger;

        $("#txtbal_amt").prop("disabled", false).removeClass("k-state-disabled");
        if ($("#hdn_mode_flag").val() == "S") {
            $("#hdn_mode_flag").val('U');
        }
        var formval = form_Serialize("frm_invoice");
        var obj_val = JSON.parse(formval);

        if ($("#hdn_proc").val() == "BIINVOICE") {
            obj_val.IOU_invoice_rowid = $("#hdn_procrowid").val();
            obj_val.IOU_invoice_no = $("#hdn_procno").val();
            obj_val.In_invoice_date = $("#hdn_procdate").val();
            obj_val.In_invoice_amount = $("#txtProc_amt").val();
        }
       

        if (obj_val.hasOwnProperty('In_payment_date')) {
            if (obj_val.In_payment_date != '' && obj_val.In_payment_date != undefined)
                obj_val.In_payment_date = getFormated_StringDate(obj_val.In_payment_date);
        }

        var grid_val1 = JSON.stringify($("#grid_Invoice_pay").data().kendoGrid._data);
        var Bind1 = {};
        Bind1 = grid_val1;
        var result1 = JSON.parse(Bind1);
        $.each(result1, function (index, value) {
            var paymentcollection_rowid = value.In_paymentcollection_rowid;
            if (paymentcollection_rowid == undefined) {
                result1[index].In_paymentcollection_rowid = 0;
            }
            var mmode = value.mode_flag;


        });
        var obj_grid_val1 = result1;
        var rowtime_date = new Date();

        if (obj_val.row_timestamp == undefined || obj_val.row_timestamp == "") {
            obj_val.row_timestamp = rowtime_date;
        }
        var data = {};
        data.context = getContext();
        data.context.Header = obj_val;
        data.context.Detail = obj_grid_val1;
        if ($("#hdn_proc").val() == "BIINVOICE") {
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
                url: "/PAWHSNewBookInvoice/InvoicePaymentSave",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    console.log(response)
                    var Res =response;
                    if (Res.context != null) {
                        var mode = $("#hdn_mode_flag").val();
                        if (mode == "I") {
                            kendoAlert("Payment Details saved successfully");
                            get_Invoicepaymen_details(Res.context.Header);
                            fetch_Invoice_payment();
                            $("#txtpay_amt").val(0);
                            $("#txtRef_no").val("");
                        }
                        else if (mode == "D") {
                            kendoAlert("Payment Details inactivate successfully");
                            get_Invoicepaymen_details(Res.context.Header);
                            fetch_Invoice_payment();
                            $("#txtpay_amt").val(0);
                            $("#txtRef_no").val("");
                        }
                        else {
                            kendoAlert("Payment  Details saved successfully");
                            get_Invoicepaymen_details(Res.context.Header);
                            fetch_Invoice_payment();
                        }
                    }
                    else {
                        kendoAlert(Res.ApplicationException.errorDescription);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }
        
        }
        $("#txtbal_amt").prop("disabled", true).addClass("k-state-disabled");
        $("#cmb_pay").data("kendoComboBox").value("");
        $("#txtRef_no").val("");
        $("#txtpay_amt").val("");
  

    function savegrid() {
        debugger;
        $("#txtbal_amt").prop("disabled", false).removeClass("k-state-disabled");
        if ($("#hdn_mode_flag").val() == "S") {
            $("#hdn_mode_flag").val('U');
        }
        var formval = form_Serialize("frm_invoice");
        var obj_val = JSON.parse(formval);
        if ($('#cmb_pay').data("kendoComboBox").value() == "" || $('#cmb_pay').data("kendoComboBox").value() == undefined) {
            obj_val.In_payment_mode = '';
        }
        if ($("#txtpay_amt").val() == "" || $("#txtpay_amt").val() == undefined || $('#txtpay_amt').val() <= 0) {
            obj_val.In_payment_amount = '0';
        }
        if ($("#hdn_proc").val() == "BIINVOICE") {
            obj_val.IOU_invoice_rowid = $("#hdn_procrowid").val();
            obj_val.IOU_invoice_no = $("#hdn_procno").val();
            obj_val.In_invoice_date = $("#hdn_procdate").val();
            obj_val.In_invoice_amount = $("#txtProc_amt").val();
        }       

        if (obj_val.hasOwnProperty('In_payment_date')) {
            if (obj_val.In_payment_date != '' && obj_val.In_payment_date != undefined)
                obj_val.In_payment_date = getFormated_StringDate(obj_val.In_payment_date);
        }
        var grid_val1 = JSON.stringify($("#grid_Invoice_pay").data().kendoGrid._data);
        var Bind1 = {};
        Bind1 = grid_val1;
        var result1 = JSON.parse(Bind1);
        $.each(result1, function (index, value) {
            var paymentcollection_rowid = value.In_paymentcollection_rowid;
            if (paymentcollection_rowid == undefined) {
                result1[index].In_paymentcollection_rowid = "0";
            }
            var mmode = value.mode_flag;


        });
        var obj_grid_val1 = result1;
        var rowtime_date = new Date();

        if (obj_val.In_row_timestamp == undefined || obj_val.In_row_timestamp == "") {
            obj_val.In_row_timestamp = rowtime_date;
        }
        var data = {};
        data.context = getContext();
        data.context.Header = obj_val;
        data.context.Detail = obj_grid_val1;
        if ($("#hdn_proc").val() == "BIINVOICE") {
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
                url: "/PAWHSNewBookInvoice/InvoicePaymentSave",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    console.log(response)
                    var Res = response;
                    if (Res.context != null) {
                        var mode = $("#hdn_mode_flag").val();
                        if (mode == "I") {
                            kendoAlert("Payment Details saved successfully");
                            get_Invoicepaymen_details(Res.context.Header);
                            fetch_Invoice_payment();
                            $("#txtpay_amt").val(0);
                            $("#txtRef_no").val("");
                        }
                        else if (mode == "D") {
                            kendoAlert("Payment Details inactivate successfully");
                            get_Invoicepaymen_details(Res.context.Header);
                            fetch_Invoice_payment();
                            $("#txtpay_amt").val(0);
                            $("#txtRef_no").val("");
                        }
                        else {
                            kendoAlert("Payment  Details saved successfully");
                            get_Invoicepaymen_details(Res.context.Header);
                            fetch_Invoice_payment();
                            $("#txtpay_amt").val(0);
                            $("#txtRef_no").val("");
                        }
                    }
                    else {
                        kendoAlert(Res.ApplicationException.errorDescription);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });

        }
        
        }
        $("#txtbal_amt").prop("disabled", true).addClass("k-state-disabled");
        $("#cmb_pay").data("kendoComboBox").value("");
        $("#txtRef_no").val("");
        $("#txtPay_date").val("");
        $("#txtpay_amt").val("");
    
    function get_Invoicepaymen_details(res) {
        var formval = form_Serialize("frm_invoice");
        var obj_val = JSON.parse(formval);
        if (obj_val != undefined) {
            obj_val.invoice_rowid = res.IOU_invoice_rowid;
            var data_fetch = {};
            data_fetch.context = getContext();
            data_fetch.context.Header = obj_val;
            var Context = data_fetch.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, invoice_rowid: Context.Header.invoice_rowid }),
                url: "/PAWHSNewBookInvoice/InvoicePaymentfetch",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_Invoice_payment_header(response.context.Header);
                        generate_Invoice_payment_Detail(response.context.Detail)
                    }
                    else {

                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }
    }    
</script>



