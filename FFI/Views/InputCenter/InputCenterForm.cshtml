@{
    ViewBag.Form = "Input Center";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";
}

<form id="inputcenter_form" class="form-horizontal" data-role="validator" novalidate="novalidate">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="txtIC_code" class="col-sm-5 control-label ">Input Center Code </label>
                        <div class="col-sm-4">
                            <input type="text" id="txtIC_code" name="In_ic_code" class="form-control" maxlength="10" readonly>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txtIC_code1" class="col-sm-5 control-label ">Input Center Code </label>
                        <div class="col-sm-4">
                            <input type="text" id="txtIC_code1" name="In_inputcenter_code" class="form-control" maxlength="10" readonly>
                        </div>
                    </div>
                </div>

                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_Attr_rowid" class="col-sm-5 control-label ">Orgn row id:</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_Attr_rowid" name="IOU_orgn_rowid" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="Cmborgtype" class="col-sm-5 control-label required">Input Center Type :</label>
                        <div class="col-sm-6">
                            <input id="Cmborgtype" name="In_inputcenter_type" style="width: 100%" data-role="filtercombo">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="CmborgtypeTn" class="col-sm-5 control-label "> एंटरप्राइज प्रकार</label>
                        <div class="col-sm-6">
                            <input id="CmborgtypeTn" name="In_inputcenter_type" style="width: 100%" data-role="filtercombo" readonly>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="txtFarmer_nameEng" class="col-sm-5 control-label required">Input Center Name</label>
                        <div class="col-sm-6">
                            <input type="text" id="txtFarmer_nameEng" name="In_inputcenter_name" class="form-control" data-toggle="tooltip" data-placement="bottom" placeholder="">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="txtFarmer_nameTn" class="col-sm-5 control-label required"> कॉर्पोरेट का नाम</label>
                        <div class="col-sm-6">
                            <input type="text" id="txtFarmer_nameTn" name="In_orgn_ll_name" class="form-control" data-toggle="tooltip" data-placement="bottom" placeholder="">
                        </div>
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="cmb_fpo_name" class="col-sm-5 control-label required">FPO Name :</label>
                        <div class="col-sm-6">
                            <input id="cmb_fpo_name" name="In_fpo_name" style="width: 100%" data-role="filtercombo">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="cmb_fpo_namein" class="col-sm-5 control-label ">FPO नाम </label>
                        <div class="col-sm-6">
                            <input id="cmb_fpo_namein" name="In_fpo_name" style="width: 100%" data-role="filtercombo" readonly>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="padding-bottom:10px">
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_version_no" class="col-sm-5 control-label">version_no</label>
                        <div class="col-sm-4">
                            <input type="number" id="txt_version_no" name="IOU_version_no" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_orgn_level" class="col-sm-5 control-label">orgn_level</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_orgn_level" name="In_orgn_level" class="form-control" maxlength="10" value="ORG_ICD">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_primary_lang_code" class="col-sm-5 control-label">primary_lang_code</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_primary_lang_code" value="en_US" name="In_primary_lang_code" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_orgn_cin" class="col-sm-5 control-label">orgn_cin</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_orgn_cin" name="In_orgn_cin" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_secondary_lang_code" class="col-sm-5 control-label">secondary_lang_code</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_secondary_lang_code" value="ta_IN" name="In_secondary_lang_code" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_parent_code" class="col-sm-5 control-label">parent_code</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_parent_code" name="In_parent_code" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_orgn_logo" class="col-sm-5 control-label">orgn_logo</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_orgn_logo" name="In_orgn_logo" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_orgn_type" class="col-sm-5 control-label">orgn_type</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_orgn_type" name="In_orgn_type" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group" style="display:none;">
                        <label for="txt_orgn_typeorgn_subtype" class="col-sm-5 control-label">orgn_subtype</label>
                        <div class="col-sm-4">
                            <input type="text" id="txt_orgn_subtype" name="In_orgn_subtype" class="form-control" maxlength="10">
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group" style="display:none;">
                    <label for="txt_orgn_auth_sign" class="col-sm-5 control-label">orgn_auth_sign</label>
                    <div class="col-sm-4">
                        <input type="text" id="txt_orgn_auth_sign" name="In_orgn_auth_sign" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group" style="display:none;">
                    <label for="txt_orgn_name" class="col-sm-5 control-label">orgn_name</label>
                    <div class="col-sm-4">
                        <input type="text" id="txt_orgn_name" name="In_orgn_name" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="form-group" style="display:none;">
                    <label for="status_code" class="col-sm-5 control-label">Status_code</label>
                    <div class="col-sm-4">
                        <input type="text" value="A" id="txt_status_code" name="In_status_code" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="form-group" style="display:none;">
                    <label for="txtMode" class="col-sm-5 control-label">Mode</label>
                    <div class="col-sm-4">
                        <input type="text" id="txtMode" name="In_mode_flag" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group" style="display:none;">
                    <label for="txt_orgn" class="col-sm-5 control-label">orgn_code</label>
                    <div class="col-sm-4">
                        <input type="text" id="txt_orgn" name="IOU_orgn_code" class="form-control" maxlength="10">
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="form-group" style="display:none;">
                    <label for="row_timestamp" class="col-sm-5 control-label">Timestamp:</label>
                    <div class="col-sm-4">
                        <input type="text" id="txt_row_timestamp" name="In_row_timestamp" class="form-control" maxlength="10">
                        <input type="hidden" id="bankcode">
                        <input type="hidden" id="villagecode">
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <section class="col-md-12">
                <div id="tab_list" class="col-md-12">
                    <ul class="nav nav-tabs">

                        <li class="active">
                            <a href="#Address" onclick="Address1()" role="tab" data-toggle="tab">
                                Address
                            </a>
                        </li>
                        <li>
                            <a href="#BankDetails" onclick="BankDetails1()" role="tab" data-toggle="tab">
                                Bank Details
                            </a>
                        </li>
                        <li>
                            <a href="#Users" onclick="Users1()" role="tab" data-toggle="tab">
                                Users
                            </a>
                        </li>
                    </ul>

                    <div class="tab-content">
                        <div class="tab-pane fade active in" id="Address">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div id="grid_Address"></div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade active in" id="BankDetails">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div id="grid_Bank"></div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade active in" id="Users">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div id="grid_User"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
</form>

<script>
    click_act_name = "InputCenterList";
    click_ctrl_name = "InputCenter";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/CommonScripts/common.js"></script>
<script src="~/CommonScripts/tamil.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>
<script>
    $(document).ready(function () {
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#inputcenter_form");
        kendo.init(container);
        container.kendoValidator({
        });

        $(".file_attach").attr("hdrtitle", "input center");
        $(".notes").attr("hdrtitle", "inputcenter_form ");
        $("#lblForm_menuid").text("ICDIC");

        grid_Address_details([]);
        grid_Bank_Detail([]);
        grid_User([]);
        $("#hide_div").hide();
        //translate();

        Screen_Id = "ICDIC";
        permission = sec_Permission(Screen_Id);

        setlocalStorage("status", "Active");
        setlocalStorage('status_code', "A");

        $("div#BankDetails").hide();
        $("div#Users").hide();

        var ICDLogin = "@ViewBag.ICDLogin";
        //organ type

        var ORG_TYPE = "";
        $("#Cmborgtype").empty();
        ORG_TYPE = grid_comboScreen_mastercodes("QCD_IC_TYPE");
        //organ type tamil
        var map_in3 = "";
        $("#CmborgtypeTn").empty();
        map_in3 = grid_comboScreen_tamil("QCD_IC_TYPE");

        if (ICDLogin = "PrimaryOrSecondary") {
           
        }
        else {
            ORG_TYPE.pop();
            ORG_TYPE.pop();
            map_in3.pop();
            map_in3.pop();
        }
        filter_combobox("Cmborgtype", ORG_TYPE);
        filter_combobox("CmborgtypeTn", map_in3, "taIN");
        //facilitor organ
        var ORGFO = "";
        $("#cmb_fpo_name").empty();
        ORGFO = grid_comboScreen_mastercodes("ORGFPO");
        filter_combobox("cmb_fpo_name", ORGFO);

        //facilitor organ Tamil
        var map_in1 = "";
        $("#cmb_fpo_namein").empty();
        map_in1 = grid_comboScreen_tamil("ORGFPO");
        filter_combobox("cmb_fpo_namein", map_in1);

        if (getlocalStorage('btn_clk_val') == "Create") {
            $('#divCreate #review').hide();
            $("#txtMode").val("I");
            $("#bottom_menus").hide();
            $("#DocStat").val("New");
            load_master_code();
        }

        else if (getlocalStorage('btn_clk_val') == "View" || getlocalStorage('btn_clk_val') == "Edit") {
            debugger;
            var combobox = $("#cmb_fpo_name").data("kendoComboBox");
            combobox.readonly(true);
            $('#divEdit #reviewEd').hide();
            $('#divEdit #deactivate').hide();
            $("#bottom_menus").hide();
            if (getlocalStorage("ls_pageList") != undefined) {
                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("inputcenter_form");
                var obj_val = JSON.parse(formval);
                obj_val.orgn_code = data.Out_ic_code;
                obj_val.ic_rowid = data.Out_ic_rowid;
                obj_val.version_no = data.Out_version_no;

                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                var Context = data.context;
                //retrieve_farmer_registration_details(data);
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, orgn_code: Context.Header.orgn_code, ic_rowid: Context.Header.ic_rowid, version_no: Context.Header.version_no }),
                    url: "/InputCenter/Inputfetch",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        var res = JSON.parse(response);
                        if (res.context != null) {
                            generate_InputCenter_header(res.context.header);
                            if (res.context.address != null) {
                                generate_InputCenter_Address(res.context.address);
                            } else { generate_InputCenter_Address([]); }
                            if (res.context.bank != null) {
                                generate_InputCenter_Bank(res.context.bank);
                            } else { generate_InputCenter_Bank([]); }
                            if (res.context.user != null) {
                                generate_InputCenter_User(res.context.user);
                            } else { generate_InputCenter_User([]); }
                        }
                        else {
                            console.log("Issue where Dropped");
                        }
                    },
                    error: function (er) {
                        console.log(er);
                    }

                });
                $("#txtMode").val("U");
                setlocalStorage('doc_no', $("#txtFarmer_code").val());
                setlocalStorage('doc_row_id', $("#txt_Attr_rowid").val());
            }
        }
    });

</script>

<script>
    function load_master_code() {
        var data = {};
        data.screen_Id = "ICDIC";
        var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
    }
</script>

<script>
    $("#cmb_fpo_name").change(function () {
        var c = $('#cmb_fpo_name');
        var formval = c.data('kendoComboBox').value();
        $("#cmb_fpo_namein").data("kendoComboBox").value(formval);
    });
    $("#Cmborgtype").change(function () {
        var c = $('#Cmborgtype');
        var formval = c.data('kendoComboBox').value();
        $("#CmborgtypeTn").data("kendoComboBox").value(formval);
    });
</script>

<script>
    var in_addr_type_desc_list = "";
    var in_orgn_state_desc_list = "";
    var in_orgn_village_desc_list = "";
    var in_orgn_dist_desc_list = "";
    var in_orgn_taluk_desc_list = "";
    var in_orgn_panchayat_desc_list = "";
    var in_status_desc_list = "";
    function grid_Address_details(data) {
        try {
            $("#grid_Address").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                in_orgnaddr_rowid: { type: "string" },
                                in_orgn_pincode: { type: "string", validation: { required: { message: "Pincode cannot be blank" } } },
                                //----
                                in_addr_type: { type: "string", required: true },
                                in_addr_type_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='addr_type_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Address Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                in_state: { type: "string", required: true },
                                in_orgn_state_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='in_orgn_state_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "State Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                in_orgn_dist: { type: "string", required: true },
                                in_orgn_dist_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='orgn_dist_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "District Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },
                                //----
                                in_orgn_panchayat: { type: "string", required: true },
                                in_orgn_panchayat_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='orgn_panchayat_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Grama panchayat Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },

                                in_orgn_taluk: { type: "string", required: true },
                                in_orgn_taluk_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='orgn_taluk_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Taluk Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },

                                in_orgn_village: { type: "string", required: true },
                                in_orgn_village_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='orgn_village_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Village Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                in_orgn_add1: {
                                    validation: {
                                        required: { message: "Addr1 cannot be blank" },
                                        maxlength:
                                            function (input) {
                                                if (input.val().length > 50) {
                                                    input.attr("data-maxlength-msg", "Max length is 50");
                                                    return false;
                                                }
                                                return true;
                                            }
                                    }
                                },
                                in_orgn_addr2: {
                                    validation: {
                                        required: { message: "Addr2 cannot be blank" },
                                        maxlength:
                                            function (input) {
                                                if (input.val().length > 50) {
                                                    input.attr("data-maxlength-msg", "Max length is 50");
                                                    return false;
                                                }
                                                return true;
                                            }
                                    }
                                },

                                in_status_code: { type: "string", required: true },
                                in_status_desc: {
                                    defaultValue: "Active", editable: false,
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='status_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Status Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },



                                in_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_Address').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                edit: OnEdit1,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {
                                var grid = $("#grid_Address").data("kendoGrid");
                                var dataItem = $("#grid_Address").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ], title: "Action", width: "50px",
                },
                {
                    field: "in_orgnaddr_rowid",
                    title: "orgnaddr_rowid",
                    hidden: true,
                },
                {
                    field: "in_addr_type",
                    title: "addr_type",

                    hidden: true,
                },
                {
                    field: "in_addr_type_desc",
                    title: "Addr Type",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_addr_type", "grid_Address")
                    },
                    width: 100,

                },
                {
                    field: "in_orgn_country_desc",
                    title: "Country",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_orgn_country", "grid_Address")
                    },
                    width: 100,
                },
                {
                    field: "in_orgn_state",
                    title: "orgn_state",
                    hidden: true,
                },
                {
                    field: "in_orgn_state_desc",
                    title: "State",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_orgn_state", "grid_Address")
                    },
                    width: 100,

                },
                {
                    field: "in_orgn_village",
                    title: "orgn_village",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "in_orgn_village_desc",
                    title: "Village",
                    editor: '<div class="input-group input-group-sm"><input type="text" readonly name="orgn_village_desc" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:orgn_village_desc"/><span class="input-group-btn" style="padding-right: 150px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Details" searchid="S02" data-target="#HelpModal" onclick=transfer(this,"grid","grid_Address","grid_Address_details") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>',
                    width: 150,

                },
                {
                    field: "in_orgn_dist",
                    title: "orgn_dist",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "in_orgn_dist_desc",
                    title: "District",
                    width: 100,

                },
                {
                    field: "in_orgn_taluk",
                    title: "orgn_taluk",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "in_orgn_taluk_desc",
                    title: "Taluk",
                    width: 100,
                },

                {
                    field: "in_orgn_panchayat",
                    title: "orgn_panchayat",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "in_orgn_panchayat_desc",
                    title: "Gram Panchayat",
                    width: 100,
                },

                {
                    field: "in_orgn_add1",
                    title: "Addr Line 1",
                    width: 100,

                },
                {
                    field: "in_orgn_addr2",
                    title: "Addr Line 2",
                    width: 100
                },
                {
                    field: "in_orgn_pincode_desc",
                    title: "Pin Code",
                    hidden: true,
                },
                {
                    field: "in_orgn_pincode",
                    title: "PinCode",
                    width: 100,
                    editor: function (container, options) {
                        numeric_editor(container, options.field, '6', '0');
                    },

                },
                {
                    field: "in_orgn_country",
                    title: "Country",
                    hidden: true,
                },

                {
                    field: "in_status_code",
                    title: "status_code",
                    hidden: true,
                    width: 100,
                },
                {
                    field: "in_status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_status_code", "grid_Address")
                    },
                    width: 100,
                },
                {
                    field: "in_mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    load_master_code();
    in_addr_type_desc_list = grid_comboScreen_mastercodes("QCD_ADDRTYPE");
    in_orgn_state_desc_list = grid_comboScreen_mastercodes("QCD_UN_STATE");

    in_orgn_panchayat_desc_list = grid_comboScreen_mastercodes("QCD_UN_GRAMPAN");
    in_orgn_country_desc_list = grid_comboScreen_mastercodes("QCD_COUNTRY");
    in_status_desc_list = grid_comboScreen_mastercodes("STATUS");
    function OnEdit1(e) {
        setDefaultValues(e);
        e.container.find("input[name='in_orgn_state_desc']").focusout(function () {
            var grid = $("#grid_Address").data("kendoGrid");
            var models = grid.dataSource.data();
            var model = models[0];
            var uniqueId = model.uid
            var row = grid.table.find("[data-uid=" + uniqueId + "]");
            grid.select(row);
            var valueprd1 = $(this).val();
            $("#villagecode").val(valueprd1);
        });
    }

</script>

<script>
    var In_bank_acc_type_desc_list = "";
    var In_bank_desc_list = "";
    var In_branch_desc_list = "";
    var In_dflt_cr_acc_desc_list = "";
    var In_dflt_dr_acc_desc_list = "";
    var In_bank_acc_purpose_desc_list = "";
    var In_status_desc_list = "";
    function grid_Bank_Detail(data) {
        try {
            $("#grid_Bank").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                in_bank_acc_no: { type: "string", validation: { required: { message: "Bank Account No. cannot be blank" } } },

                                in_bank_acc_type: { type: "string", required: true },
                                in_bank_acc_type_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='bank_acc_type_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Bank Account cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                in_bank_code: { type: "string", required: true },
                                in_bank_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='bank_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Bank cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                in_branch_code: { type: "string" },
                                in_ifsc_code: { type: "string", validation: { required: { message: "IFSC Code cannot be blank" } }, editable: false },
                                in_account_no: { type: "string" },
                                in_dflt_cr_acc: { type: "string", required: true },
                                in_dflt_cr_acc_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='dflt_cr_acc_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Default Credit cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                in_dflt_dr_acc: { type: "string", required: true },
                                in_dflt_dr_acc_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='dflt_dr_acc_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Default Debit cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                in_bank_acc_purpose: { type: "string", required: true },
                                in_bank_acc_purpose_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='bank_acc_purpose_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Account Purpose cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                //status_code: { type: "string", required: true },
                                //status_desc: { type: "string", defaultValue: getlocalStorage('status'), editable: false },

                                in_status_code: { type: "string", required: true },
                                in_status_desc: {
                                    defaultValue: "Active", editable: false,
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is("[name='status_desc']")) {
                                                var isValid = true;
                                                input.attr("data-dropdownlistValidation-msg", "Status Type cannot be blank"); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                in_mode_flag: { type: "string", defaultValue: "I" },
                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_Bank').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                edit: OnEdit,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {
                                // e.preventDefault();
                                var grid = $("#grid_Bank").data("kendoGrid");
                                var dataItem = $("#grid_Bank").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ], title: "Action", width: "50px",
                },
                {
                    field: "in_orgnbank_rowid",
                    title: "orgnbank_rowid",
                    hidden: true
                },
                {
                    field: "in_bank_acc_no",
                    title: "Account No",
                    width: 100,
                    editor: function (container, options) {
                        numeric_editor(container, options.field, '16', '0');
                    },
                },
                {
                    field: "in_bank_acc_type",
                    title: "bank_acc_type",
                    hidden: true
                },
                {
                    field: "in_bank_acc_type_desc",
                    title: "Account Type",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_bank_acc_type", "grid_Bank")
                    },
                    width: 100,
                },
                {
                    field: "in_bank_code",
                    title: "bank_code",
                    hidden: true
                },
                {
                    field: "in_bank_desc",
                    title: "Bank Name",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_bank_code", "grid_Bank")
                    },
                    width: 200,

                },
                {
                    field: "in_branch_code",
                    title: "Branch",
                    editor: '<div class="input-group input-group-sm"><input type="text" readonly name="branch_code" maxlength="50" style="width:190px;color:black"  onkeypress="return speical_char(event)" data-bind="value:branch_code"/><span class="input-group-btn" style="padding-right: 150px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Bank Details" searchid="Sbank" data-target="#HelpModal" onclick=transfer(this,"grid","grid_Bank","grid_Bank_Detail") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>',
                    width: 250,
                },
                {
                    field: "in_ifsc_code",
                    title: "IFSC code",
                    width: 100,
                },
                {
                    field: "in_dflt_cr_acc",
                    title: "dflt_cr_acc",
                    hidden: true
                },

                {
                    field: "in_dflt_cr_acc_desc",
                    title: "Default Credit A/C",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_dflt_cr_acc", "grid_Bank")
                    },
                    width: 100,

                },
                {
                    field: "in_dflt_dr_acc",
                    title: "dflt_dr_acc",
                    hidden: true
                },
                {
                    field: "in_dflt_dr_acc_desc",
                    title: "Default Debit A/C",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_dflt_dr_acc", "grid_Bank")
                    },
                    width: 100,

                },
                {
                    field: "in_bank_acc_purpose",
                    title: "bank_acc_purpose",
                    hidden: true
                },
                {
                    field: "in_bank_acc_purpose_desc",
                    title: "Account Purpose",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_bank_acc_purpose", "grid_Bank")
                    },
                    width: 100,

                },
                {
                    field: "in_status_code",
                    title: "status_code",
                    hidden: true
                },
                {
                    field: "in_status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "in_status_code", "grid_Bank")
                    },
                    width: 100,
                },
                {
                    field: "in_mode_flag",
                    title: "Mode",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    in_bank_acc_type_desc_list = grid_comboScreen_mastercodes("QCD_BANKACCTYPE");
    in_bank_desc_list = grid_comboScreen_mastercodes("BANK");

    in_dflt_cr_acc_desc_list = grid_comboScreen_mastercodes("QCD_YESNO");
    in_dflt_dr_acc_desc_list = grid_comboScreen_mastercodes("QCD_YESNO");
    in_bank_acc_purpose_desc_list = grid_comboScreen_mastercodes("QCD_BANKACCPUR");
    in_status_desc_list = grid_comboScreen_mastercodes("STATUS");
    function OnEdit(e) {
        setDefaultValues(e);
        e.container.find("input[name='bank_acc_no']").attr('maxlength', '20');
        e.container.find("input[name='bank_acc_no']").attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');

        e.container.find("input[name='aggrloc_shortdesc']").attr('maxlength', '25');
        e.container.find("input[name='aggrloc_name']").attr('maxlength', '100');


        e.container.find("input[name='in_bank_desc']").focusout(function () {
            var grid = $("#grid_Bank").data("kendoGrid");
            var models = grid.dataSource.data();
            var model = models[0];
            var uniqueId = model.uid
            var row = grid.table.find("[data-uid=" + uniqueId + "]");
            grid.select(row);
            var valueprd = $(this).val();
            var valueprd = model.in_bank_code;
            $("#bankcode").val(valueprd);
        });
    }
</script>



<script>
    function grid_User(data) {
        try {
            $("#grid_User").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_user_id: { type: "string" },
                                In_user_name: { type: "string" },
                                In_location_code: { type: "string" },
                                In_location_name: { type: "string" },
                                In_email: { type: "string" },
                                In_mobile_no: { type: "string" },
                                In_valid_till: { type: "date" },
                                In_status: { type: "string" },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },

                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: "In_aggrlocuser_rowid",
                        title: "aggrlocuser_rowid",
                        hidden: true
                    },
                    {
                        field: "In_aggrloc_code",
                        title: "Location Code",
                        width: 100,

                    },
                    {
                        field: "In_aggrorgn_code",
                        title: "aggrorgn_code",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: "In_aggrloc_type",
                        title: "Location Name",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: "In_aggrloc_type_desc",
                        title: "Location Name",
                        width: 100,

                    },
                    {
                        field: "In_role_code",
                        title: "User ID",
                        width: 100,

                    },
                    {
                        field: "In_user_code",
                        title: "user_code",
                        width: 100,
                        hidden: true,
                    },
                    {
                        field: "In_user_name",
                        title: "User Name",
                        width: 100,

                    },
                    {
                        field: "In_email_id",
                        title: "Email",
                        width: 100,

                    },
                    {
                        field: "In_contact_no",
                        title: "Mobile No",
                        width: 100
                    }, {
                        field: "In_valid_till",
                        title: "Valid Till",
                        hidden: true
                    },
                    {
                        field: "In_status_code",
                        title: "status_code",
                        hidden: true
                    },
                    {
                        field: "In_status_desc",
                        title: "Status",
                        width: 100,

                    },

                    {
                        field: "In_mode_flag",
                        title: "Mode",
                        hidden: true
                    }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script>
    function save() {
        debugger;
        var mandatory_check = true;
        var grid_validate_msg = "";
        try {
            if ($("#txtMode").val() == "S") {
                $("#txtMode").val('U');

            }

            if ($("#txt_orgn").val() == "") {
                $("#txt_orgn").val(' ');
            }

            if ($("#txt_version_no").val() == "") {
                $("#txt_version_no").val('1');
            }
            if ($("#txt_Attr_rowid").val() == "") {
                $("#txt_Attr_rowid").val('0');
            }
            var formval = form_Serialize("inputcenter_form");
            var obj_val = JSON.parse(formval);
            obj_val.IOU_orgn_code = $("#txt_orgn").val()
            if (obj_val.in_row_timestamp == null || obj_val.in_row_timestamp == "" || obj_val.in_row_timestamp == undefined) {
                obj_val.in_row_timestamp = "2000-01-01";
            }





            //address
            var grid_val = JSON.stringify($("#grid_Address").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);




            var Country = "";
            var State = "";
            var Taluk = "";
            var Gp = "";
            var Village = "";

            $.each(result, function (index, value) {
                var row_id = value.in_orgnaddr_rowid;
                if (row_id == undefined || row_id == '') {
                    result[index].in_orgnaddr_rowid = "0";
                }
                else {
                    result[index].in_mode_flag = "S";
                }
                var mode = value.in_mode_flag;
                if (mode == "") {
                    result[index].in_mode_flag = "I";
                }
                if (mode == "S") {
                    result[index].in_mode_flag = "U";
                }
                //Orgn country Cannot be Blank Validation

                Country = result[index].in_orgn_country_desc;
                if (Country == "" || Country == null || Country == undefined) {
                    grid_validate_msg += "Country cannot be blank <br>";
                    mandatory_check = false;
                }

                // Orgn state Cannot Be blank validation

                State = result[index].in_orgn_state_desc;
                if (State == "" || State == null || State == undefined) {
                    grid_validate_msg += "State cannot be blank <br>";
                    mandatory_check = false;
                }

                //Orgn Taluk Cannot be Validation
                Taluk = result[index].in_orgn_taluk_desc;
                if (Taluk == "" || Taluk == null || Taluk == undefined) {
                    grid_validate_msg += "Taluk cannot be blank <br>";
                    mandatory_check = false;
                }

                //orgn Gram Panchayat Cannot be blank Validation
                Gp = result[index].in_orgn_panchayat_desc;
                if (Gp == "" || Gp == null || Gp == undefined) {
                    grid_validate_msg += "Gram Panchayat cannot be blank <br>";
                    mandatory_check = false;
                }
                //orgn Village Cannot be blank Validation
                Village = result[index].in_orgn_village_desc;
                if (Village == "" || Village == null || Village == undefined) {
                    grid_validate_msg += "Village cannot be blank <br>";
                    mandatory_check = false;
                }

            });
            if (mandatory_check == false) {
                kendoAlert(grid_validate_msg);
                return false;
            }
            var obj_grid_val = result;
            //Address  Tab Duplicate Record Validation

            //This code Introduced by Venkat 19-06-2020  [Kyc Rows Cannot be Duplicated]
            var addrtype;
            var village;
            var reportRecipients = [];
            for (var i = 0; i < result.length; i++) {
                debugger;
                addrtype = result[i].in_addr_type_desc;
                reportRecipients.push(addrtype);
            }
            console.log(reportRecipients);
            var recipientsArray = reportRecipients.sort();

            var reportRecipientsDuplicate = [];
            for (var i = 0; i < recipientsArray.length - 1; i++) {
                debugger;
                if (recipientsArray[i + 1] == recipientsArray[i]) {
                    reportRecipientsDuplicate.push(recipientsArray[i]);
                    kendoAlert("Address Cannot be Duplicated");
                    return false;
                }

            }
            console.log(reportRecipientsDuplicate);

            //End

            //bank
            var grid_val1 = JSON.stringify($("#grid_Bank").data().kendoGrid._data);
            var Bind1 = {};
            Bind1 = grid_val1;
            var result1 = JSON.parse(Bind1);
            var DefaultCreditAcc = "";
            var DefaultDebitAcc = "";
            var CreditCount = 0;
            var DebitCount = 0;
            var Accounttype = "";
            var BankName = "";
            var BranchName = "";
            var IfscCode = "";
            var Bankaccno = "";
            $.each(result1, function (index, value) {
                debugger;
                var bank_rowid = value.in_orgnbank_rowid;
                if (bank_rowid == undefined || bank_rowid == '') {
                    result1[index].in_orgnbank_rowid = "0";
                }
                else {
                    result1[index].in_mode_flag = "S";
                }
                var mode = value.in_mode_flag;
                if (mode == "") {
                    result1[index].in_mode_flag = "I";
                }
                if (mode == "S") {
                    result1[index].in_mode_flag = "U";
                }

                //Bank Account No Cannot be Blank Validation

                Bankaccno = result1[index].in_bank_acc_no;
                if (Bankaccno == "" || Bankaccno == null || Bankaccno == undefined) {
                    grid_validate_msg += "Account Np cannot be blank <br>";
                    mandatory_check = false;
                }

                // Account Cannot Be blank validation

                Accounttype = result1[index].in_bank_acc_type_desc;
                if (Accounttype == "" || Accounttype == null || Accounttype == undefined) {
                    grid_validate_msg += "Account Type cannot be blank <br>";
                    mandatory_check = false;
                }

                //Bank Name Cannot be Validation
                BankName = result1[index].in_bank_desc;
                if (BankName == "" || BankName == null || BankName == undefined) {
                    grid_validate_msg += "Bank Name cannot be blank <br>";
                    mandatory_check = false;
                }

                //Branch Name Cannot be blank Validation
                BranchName = result1[index].in_branch_code;
                if (BranchName == "" || BranchName == null || BranchName == undefined) {
                    grid_validate_msg += "Branch Code cannot be blank <br>";
                    mandatory_check = false;
                }

                //Ifsc Code Cannot be blank Validation
                IfscCode = result1[index].in_ifsc_code;
                if (IfscCode == "" || IfscCode == null || IfscCode == undefined) {
                    grid_validate_msg += "IFSC Code cannot be blank <br>";
                    mandatory_check = false;
                }


                DefaultCreditAcc = result1[index].in_dflt_cr_acc_desc;

                //Code Introduced by venkat start 04-07-2020
                if (DefaultCreditAcc == "" || DefaultCreditAcc == null || DefaultCreditAcc == undefined) {
                    grid_validate_msg += "DefaultCredit A/C cannot be blank <br>";
                    mandatory_check = false;
                }
                //Code Introduced by venkat End 04-07-2020
                if (DefaultCreditAcc == "Yes") {
                    CreditCount = CreditCount + 1;
                }
                DefaultDebitAcc = result1[index].in_dflt_dr_acc_desc;
                //Code Introduced by venkat start 04-07-2020
                if (DefaultDebitAcc == "" || DefaultDebitAcc == null || DefaultDebitAcc == undefined) {
                    grid_validate_msg += "DefaultDebit A/C cannot be blank <br>";
                    mandatory_check = false;
                }
                //Code Introduced by venkat End 04-07-2020
                if (DefaultDebitAcc == "Yes") {
                    DebitCount = DebitCount + 1;
                }
            });
            //code Introduced by venkat start 04-07-2020
            if (mandatory_check == false) {
                kendoAlert(grid_validate_msg);
                return false;
            }
            //code Introduced by venkat End 04-07-2020
            if ((CreditCount > 1) || (DebitCount > 1)) {
                kendoAlert("Change default Credit/ Debit Account Should not be More than One!!!");
                return false;
            }
            var obj_grid_val1 = result1;

            //user
            var grid_val2 = JSON.stringify($("#grid_User").data().kendoGrid._data);
            var Bind2 = {};
            Bind2 = grid_val2;
            var result2 = JSON.parse(Bind2);
            $.each(result2, function (index, value) {

                var row_width = value.in_aggrlocuser_rowid;
                //var row_flag = value.mode_flag;

                if (row_width == undefined) {
                    result2[index].in_aggrlocuser_rowid = "0";
                }
                var mmode = result[index].in_mode_flag;
                if (mmode == "S") {
                    result2[index].in_mode_flag = "U";
                }
            });
            var obj_grid_val2 = result2;

            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            data.context.Address = obj_grid_val;
            data.context.Bank = obj_grid_val1;
            data.context.User = obj_grid_val2;
            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Address: Context.Address, Bank: Context.Bank, User: Context.User }),
                url: "/InputCenter/SaveInput",
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    console.log(response)
                    var Res = JSON.parse(response);
                    if (Res.context.errorMsg == "" || Res.context.errorMsg == null) {
                        var mode = $("#txtMode").val();
                        if (mode == "I") {
                            kendoAlert("Input Center  Details saved successfully");
                            get_InputCenter_details(Res.context.header);
                        }
                        else if (mode == "D") {
                            kendoAlert("Input Center Details inactivate successfully");
                            //get_InputCenter_details(responseJSON.context.Header);

                        }
                        else {
                            kendoAlert("Input Center Details Updated successfully");
                            // retrieve_AggregatorOrgs_list();
                            get_InputCenter_details(Res.context.header);
                        }
                    }
                    else {
                        kendoAlert(Res.context.errorMsg);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<script>
    //function DeleteDetails() {
    //    try {
    //        $("#txtMode").val('D');
    //        save();
    //    }
    //    catch (err) {
    //        javascript_log4j_root(arguments.callee.name, err);
    //    }
    //}

    function get_InputCenter_details(res) {
        var formval = form_Serialize("inputcenter_form");
        var obj_val = JSON.parse(formval);
        obj_val.orgn_code = res.ioU_orgn_code;
        obj_val.ic_rowid = res.ioU_orgn_rowid;
        obj_val.version_no = res.ioU_version_no;
        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Header = obj_val;
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, orgn_code: Context.Header.orgn_code, ic_rowid: Context.Header.ic_rowid, version_no: Context.Header.version_no }),
            url: "/InputCenter/Inputfetch",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                var res = JSON.parse(response);
                if (res.context != null) {
                    generate_InputCenter_header(res.context.Header);
                    if (res.context.Address != null) {
                        generate_InputCenter_Address(res.context.Address);
                    } else { generate_InputCenter_Address([]); }
                    if (res.context.Bank != null) {
                        generate_InputCenter_Bank(res.context.Bank);
                    } else { generate_InputCenter_Bank([]); }
                    if (res.context.User != null) {
                        generate_InputCenter_User(res.context.User);
                    } else { generate_InputCenter_User([]); }
                }
                else {
                    console.log("Issue where Dropped");
                }
            },
            error: function (er) {
                console.log(er);
            }

        });
    }
    function generate_InputCenter_header(res) {
        try {
            //$("#txt_Attr_rowid").val(res.IOU_ic_rowid);
            //$("#txtIC_code").val(res.IOU_orgn_code);
            //$("#txtIC_code1").val(res.IOU_orgn_code);
            //$("#txt_orgn").val(res.IOU_orgn_code);
            //$("#txtIC_code").attr("readonly", "");
            //$("#txt_version_no").val(res.IOU_version_no);
            //$("#txtFarmer_nameEng").val(res.In_ic_name);
            //$("#txtFarmer_nameTn").val(res.In_orgn_ll_name);
            //$("#txt_orgn_level").val(res.In_orgn_level);
            //$('#Cmborgtype').data("kendoComboBox").value(res.In_orgn_type);
            //$('#CmborgtypeTn').data("kendoComboBox").value(res.In_orgn_type);
            //$('#cmb_fpo_name').data("kendoComboBox").value(res.In_parent_code);
            //$('#cmb_fpo_namein').data("kendoComboBox").value(res.In_parent_code);
            //$("#DocStat").val(res.In_status_desc);
            //$("#txtMode").val(res.In_mode_flag);
            //$("#txt_row_timestamp").val(res.In_row_timestamp);

            $("#txt_Attr_rowid").val(res.ioU_orgn_rowid);
            $("#txtIC_code").val(res.in_ic_code);
            $("#txtIC_code1").val(res.ioU_orgn_code);
            $("#txt_orgn").val(res.ioU_orgn_code);
            $("#txtIC_code").attr("readonly", "");
            $("#txt_version_no").val(res.ioU_version_no);
            $("#txtFarmer_nameEng").val(res.in_ic_name);
            $("#txtFarmer_nameTn").val(res.in_orgn_ll_name);
            $("#txt_orgn_level").val(res.in_orgn_level);
            $('#Cmborgtype').data("kendoComboBox").value(res.in_orgn_type);
            $('#CmborgtypeTn').data("kendoComboBox").value(res.in_orgn_type);
            $('#cmb_fpo_name').data("kendoComboBox").value(res.in_parent_code);
            $('#cmb_fpo_namein').data("kendoComboBox").value(res.in_parent_code);
            $("#DocStat").val(res.in_status_desc);
            $("#txtMode").val(res.in_mode_flag);
            $("#txt_row_timestamp").val(res.in_mode_flag);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_InputCenter_Address(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_Address_details(data);
            }
            else {

                grid_Address_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_InputCenter_Bank(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_Bank_Detail(data);
            }
            else {

                grid_Bank_Detail([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function generate_InputCenter_User(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_User(data);
            }
            else {

                grid_User([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    //look up functions
    function grid_control() {
        try {
            var control_Name = [
                { "dataCol": "branch_name", "grid_row_col": "in_branch_code" },
                { "dataCol": "ifsc_code", "grid_row_col": "in_ifsc_code" },
                { "dataCol": "", "grid_row_col": "in_bank_code" },
                { "dataCol": "", "grid_row_col": "in_bank_desc" },
                { "dataCol": "", "grid_row_col": "in_orgnbank_rowid" },
                { "dataCol": "", "grid_row_col": "in_bank_acc_no" },
                { "dataCol": "", "grid_row_col": "in_bank_acc_type" },
                { "dataCol": "", "grid_row_col": "in_bank_acc_type_desc" },
                { "dataCol": "", "grid_row_col": "in_dflt_dr_acc" },
                { "dataCol": "", "grid_row_col": "in_dflt_dr_acc_desc" },
                { "dataCol": "", "grid_row_col": "in_dflt_cr_acc" },
                { "dataCol": "", "grid_row_col": "In_dflt_cr_acc_desc" },
                { "dataCol": "", "grid_row_col": "in_bank_acc_purpose" },
                { "dataCol": "", "grid_row_col": "in_bank_acc_purpose_desc" },
                { "dataCol": "", "grid_row_col": "in_status_code" },
                { "dataCol": "", "grid_row_col": "in_status_desc" },
                { "dataCol": "", "grid_row_col": "in_mode_flag" },
                { "dataCol": "", "grid_row_col": "uid" },

                //{ "dataCol": "orgn_village", "grid_row_col": "in_orgn_village_desc" },
                { "dataCol": "orgn_state", "grid_row_col": "in_orgn_state" },
                { "dataCol": "orgn_state_desc", "grid_row_col": "in_orgn_state_desc" },
                { "dataCol": "orgn_village", "grid_row_col": "in_orgn_village" },
                { "dataCol": "orgn_village_desc", "grid_row_col": "in_orgn_village_desc" },
                { "dataCol": "orgn_dist", "grid_row_col": "in_orgn_dist" },
                { "dataCol": "orgn_dist_desc", "grid_row_col": "in_orgn_dist_desc" },
                { "dataCol": "orgn_taluk", "grid_row_col": "in_orgn_taluk" },
                { "dataCol": "orgn_taluk_desc", "grid_row_col": "in_orgn_taluk_desc" },
                { "dataCol": "orgn_grampan", "grid_row_col": "in_orgn_panchayat" },
                { "dataCol": "orgn_grampan_desc", "grid_row_col": "in_orgn_panchayat_desc" },
                { "dataCol": "", "grid_row_col": "in_status_code" },
                { "dataCol": "", "grid_row_col": "in_status_desc" },
                { "dataCol": "", "grid_row_col": "in_addr_type" },
                { "dataCol": "", "grid_row_col": "in_addr_type_desc" },
                { "dataCol": "", "grid_row_col": "in_orgn_country_desc" },
                { "dataCol": "", "grid_row_col": "in_orgnaddr_rowid" },

                { "dataCol": "", "grid_row_col": "in_orgn_add1" },
                { "dataCol": "", "grid_row_col": "in_orgn_addr2" },
                { "dataCol": "", "grid_row_col": "in_orgn_pincode" },
                { "dataCol": "", "grid_row_col": "in_orgn_pincode_desc" },
                { "dataCol": "", "grid_row_col": "in_orgn_country" },

                { "dataCol": "", "grid_row_col": "in_mode_flag" },
                { "dataCol": "", "grid_row_col": "uid" }


            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function controlName() {
        try {
            var control_Name = [
            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }



    function trans_input_data() {
        try {
            var trans_coll = [
                { "trasfer": "NO", "dataCol": "", "controlId": "", "grid_id": "", "grid_row_col": "" },
                { "trasfer": "Yes", "dataCol": "bank_code", "controlId": "bankcode", "grid_id": "grid_Bank", "grid_row_col": "" },
                { "trasfer": "Yes", "dataCol": "orgn_state_desc", "controlId": "villagecode", "grid_id": "grid_Address", "grid_row_col": "" }
            ];
            return trans_coll;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


</script>

<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>
<script>

    //function translate() {
    //    try {
    //        $("#txtFarmer_nameEng").focusout(function () {
    //            var txt = convertTamil1($("#txtFarmer_nameEng").val());
    //            $("#txtFarmer_nameTn").val(txt);
    //        });
    //        $("#txtFarmer_nameTn").on("keypress", function (e) {

    //            convertThis(e);
    //        });

    //    }
    //    catch (err) {
    //        javascript_log4j_root(arguments.callee.name, err);
    //    }
    //}

        //Input Centre Name
        langTranslate('txtFarmer_nameEng', 'txtFarmer_nameTn');
        $("#txtFarmer_nameTn").on("keypress", function (e) {
            convertThis(e);
        });
    function langTranslate(src, dest) {
            try {
                $("#" + src).focusout(function () {
                    var id = $('#' + src).val();
                    $("#HelpDiv").hide();
                    if (id != "") {

                        $.ajax({
                            url: '@Url.Action("Foo", "ListViewMaker")',
                            type: 'GET',
                            dataType: 'json',
                            cache: false,
                            data: { 'id': id },
                            success: function (result) {
                                $('#' + dest).val(decodeEntities(result));
                            },
                            error: function () {
                                alert('Error occured');
                            }
                        });
                    }
                    else {
                        $('#' + dest).val("");
                        $("#HelpDiv").hide();
                    }

                })
                $('#' + dest).focus(function () {
                    $("#HelpDiv").html("")
                });

                $("body").click(function () {
                    $("#HelpDiv").hide();
                });
                $("tab_list").click(function () {
                    $("#HelpDiv").hide();
                });


            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }

        function decodeEntities(input) {
            try {
                var y = document.createElement('textarea');
                y.innerHTML = input;
                return y.value;
            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }


</script>
<script>
    function Address1() {
        try {
            $("div#Address").toggleClass('tab-pane fade active in');
            $("div#BankDetails").hide();
            $("div#Users").hide();
            $("div#Address").show();
            var itemGrid = $("#grid_Address").data("kendoGrid");
            itemGrid.refresh();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function BankDetails1() {
        try {
            $("div#BankDetails").toggleClass('tab-pane fade active in');
            $("div#BankDetails").show();
            $("div#Address").hide();
            $("div#Users").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Users1() {
        try {
            $("div#Users").toggleClass('tab-pane fade active in');
            $("div#Users").show();
            $("div#Address").hide();
            $("div#BankDetails").hide();

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>





