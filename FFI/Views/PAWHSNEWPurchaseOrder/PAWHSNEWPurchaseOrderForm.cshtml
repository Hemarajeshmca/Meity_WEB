
@{ ViewBag.Form = "Purchase Order";
                Layout = "~/Views/Shared/FormViewLayout1.cshtml"; }

<form id="Purchase_form" class="form-horizontal">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:15px;padding-bottom:20px">
            <div class="row" style="padding-bottom:1px">

                <div class="col-xs-4">
                    <div class=" form-group">
                        <label for="txtpwnew_pono" class="col-sm-4 control-label required">PO No:</label>

                        <div class=" col-sm-6">
                            <input type="text" id="txtpwnew_pono" name="In_po_no" class="form-control" onkeypress="return isValidsupcode(event,this);">
                        </div>
                    </div>
                </div>
                <div class="col-xs-4">
                    <div class="form-group">
                        <label for="txtpwnew_podate" class="col-sm-4 control-label required">PO Date:</label>

                        <div class=" col-sm-6">
                            <input class="cusDate" type="date" data-role='datepicker' id="txtpwnew_podate" onkeypress="return date_validate(event)"  data-checkdate-msg="Enter Valid Date" name="In_po_date" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                    </div>
                </div>

                <div class="col-xs-4">
                    <div class=" form-group">
                        <label for="txtfarcusname" class="col-sm-4 control-label required">Buyer Name: &nbsp;</label>
                        <div class=" col-sm-6">
                            <input id="txtfarcusname" name="In_buyer_name" data-role="filtercombo" onchange="fetch_loc()">
                            <input hidden id="buyer_code" name="In_buyer_code" />

                        </div>

                    </div>
                </div>

            </div>

            <div class="row" style="padding-bottom:1px">
                <div class="col-xs-4">
                    <div class=" form-group">
                        <label for="cmb_rec_Loca" class="col-sm-4 control-label required">Buyer Location:&nbsp;&nbsp;&nbsp;&nbsp;</label>

                        <div class=" col-sm-6" >
                            <input id="cmb_rec_Loca" name="In_buyer_location" data-role="filtercombo" class="form-control">
                            <input type="hidden" id="In_buyer_location_desc" name="In_buyer_location_desc">
                            <input type="hidden" id="hdn_farmer_village">
                            <input type="hidden" id="txtinvoice_rowid" name="In_po_rowid">
                            <input type="hidden" id="shipment_uid" name="shipment_uid">
                            <input type="hidden" id="json" name="json">
                            <input type="hidden" id="tranqty" name="tranqty">
                            <input type="hidden" id="product_code" name="product_code">

                        </div>

                    </div>
                </div>

                <div class="col-xs-4">
                    <div class=" form-group">
                        <label for="txtpwnew_pono" class="col-sm-4 control-label required">Order Given By:</label>

                        <div class=" col-sm-6">
                            <input type="text" id="txtOrderBy" name="In_OrderBy" class="form-control">
                        </div>
                    </div>
                </div>

                <div class="col-xs-4">
                    <div class=" form-group">
                        <label for="txtpwnew_pono" class="col-sm-4 control-label required">Given By Mobile No:</label>


                        <div class=" col-sm-6">
                            <input type="text" id="txtOrderbyNo" name="In_OrderByNO" class="form-control" maxlength="10" onkeypress="return isNumberKey(event)" pattern="^(\d)(?!\1+$)\d{9}$">
                        </div>

                    </div>
                </div>

            </div>

            <div class="row" style="padding-bottom:1px">

                <div class="col-xs-4">
                    <div class=" form-group">
                        <label for="txtpwnew_pono" class="col-sm-4 control-label required">Order Taken By:</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtTakenBy" name="In_TakenBy" class="form-control">
                        </div>

                    </div>
                </div>
                <div class="col-xs-4">
                    <div class=" form-group">
                        <label for="txtpwnew_pono" class="col-sm-4 control-label required">Taken By Mobile No:</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtTakenByNo" name="In_TakenByNo" class="form-control" maxlength="10" onkeypress="return isNumberKey(event)" pattern="^(\d)(?!\1+$)\d{9}$">
                        </div>

                    </div>
                </div>

                <div class="col-xs-4">
                    <div class=" form-group">
                        <label for="cmb_cus_type" class=" col-sm-5 control-label required" style="left: 3%;">Remarks:</label>

                        <div class=" col-sm-6">
                            <textarea class="form-control" id="cmb_cus_type" name="In_po_remarks" rows="3" cols="5" style="margin: 0px 2px 0px 0px;width: 203px;height: 40px;position: relative;left: -35px;"></textarea>
                        </div>

                    </div>
                </div>


            </div>

            <div class="row" style="padding-bottom:1px">
                <div class="col-xs-4">
                    <div class="form-group">
                        <label for="file" class=" col-sm-3 control-label"> Attachment </label>

                        <div class=" col-sm-9" style="padding-left: 5%;">
                            <img id="Bill_img" src="~/images/Bill Image.jpg" class="col-sm-5 img-bordered profileImg" alt="User Image" height="150" width="50" />
                            <input type="file" name="file" id="Billfile" src="~/images/Bill Image.jpg" style="width: 108px;" class=" col-sm-4 control-label" accept="image/x-png, image/gif, image/jpeg" />
                            <input type="hidden" id="txtImageHidden" name="In_bill_attachment" />
                        </div>

                    </div>
                </div>

                <div class="col-xs-4" style="display:none">
                    <div class=" form-group">
                        <label for="cmb_in_sts" class=" col-sm-5 control-label">PO Status</label>
                        <div class=" col-sm-6">
                            <input id="cmb_in_sts" name="In_status_code" style="width: 100%">
                        </div>
                    </div>
                </div>
                <div class="col-xs-4" style="display:none">
                    <div class=" form-group" style="display:none">
                        <label for="row_timestamp" class=" col-sm-5 control-label">row_timestamp</label>
                        <div class=" col-sm-6">
                            <input id="row_timestamp" name="In_row_timestamp" class="form-control" maxlength="50">
                            <input type="hidden" id="hdn_mode_flag" name="In_mode_flag">
                            <input type="hidden" id="hdn_hsn_code">
                            <input type="hidden" id="hdn_hsn_code_desc">
                            <input type="hidden" id="hd_status_code" name="In_status_code">
                            <input type="hidden" id="Reporttype">
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="display:none">
                <div class="col-xs-4" style="display:none">
                    <div class=" form-group">
                        <label for="txtorgn_code" class=" col-sm-5 control-label">orgn_code</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtorgn_code" name="In_orgn_code" class="form-control" maxlength="50" disabled>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row" style="padding-top:3px;">
                <section class="col-md-12" style="padding-top:20px;">
                    <div id="tab_list" class="col-md-12">
                        <ul class="nav nav-tabs" style="border-bottom: 12px solid #fff;">
                            <li class="active" style="width: 12%;">
                                <a href="#Invoice" id="txtpo" role="tab" data-toggle="tab">
                                    Purchase Order
                                </a>
                            </li>
                            <li style="width: 8%;">
                                <a href="#Tax" id="txtdtl" role="tab" data-toggle="tab">
                                    Tax
                                </a>
                            </li>
                            @*<li style="width: 8%;">
                                    <a href="#Attachment" id="attachmentdtl" role="tab" data-toggle="tab">
                                        Attachment
                                    </a>
                                </li>*@
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane fade active in" id="Invoice">
                                <div class="panel panel-default">
                                    <div class="panel-body" style="padding-bottom:5px">
                                        <div id="grid_invoice">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane fade" id="Tax">
                                <div class="panel panel-default">
                                    <div class="panel-body" style="padding-bottom:5px">
                                        <div id="grid_tax"></div>
                                    </div>
                                </div>
                            </div>
                            @*<div class="tab-pane fade" id="Attachment">
                                    <div class="panel panel-default">
                                        <div class="panel-body" style="padding-bottom:5px">
                                            <div id="grid_attachment"></div>
                                        </div>
                                    </div>
                                </div>*@
                        </div>
                    </div>
                </section>
            </div>
            <div id="dialog">
                <button type="button" id="btnsaveShipment" style="margin-left:18px;margin-top:-7px" class="btn btn-info" onclick="saveshipment()"><span class="glyphicon glyphicon-ok"></span> Save</button>
                <input type="hidden" id="tax_rate" name="In_tax_rate">
                <div id="grid_shipment"></div>
            </div>
            @*Implemented by Mohan*@
            <!--<div id="dialogFileupload">

                <div class="form-group">
                    <div class="col-md-10">
                        <p>Upload one or more files using this form:</p>
                        <input type="file" id="farmerfile" name="files" multiple />
                        <input type="hidden" id="txtImageHidden" name="in_photo_farmer" />
                        <input type="hidden" id="txtImageunique" name="unique_id" />

                    </div>
                </div>
                <div> &nbsp;&nbsp;&nbsp; </div>
                <div class="form-group">
                    <div class="col-md-10">
                        <input type="submit" onclick="save_Image()" value="Upload" />
                    </div>
                </div>
            </div>
            <div id="dialogFileuploadView">

                <div class="form-group">
                    <div class="col-md-10">
                        <img id="farmer_img" src="~/images/NoImage.png" class="col-sm-5 img-bordered profileImg1" alt="User Image" height="150" width="50" />
                    </div>
                </div>
            </div>-->



        </div>
    </div>
</form>

<script>
    click_act_name = "PAWHSNEWPurchaseOrderList";
    click_ctrl_name = "PAWHSNEWPurchaseOrder";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script src="~/CommonScripts/report.js"></script>
<script src="~/API_Scripts/track_equipment_retrievetrackmyequipmentList_APIClient.js"></script>
<script src="~/API_Scripts/retrievetrackmyequipmentList_Model.js"></script>

<script>
    $(document).ready(function () {
        debugger;
        $("#hide_div").hide();
        $("#divUserRole20 #btnReport2").hide();
        $("#divUserRole20 #btnA4Report").hide();
        $("#divCreate #review").hide();
        $("#divCreate #deactivate").hide();
        $("#invoice #txtic_invoiceno").hide();
        $("#invoice #txtic_invoicedate").hide();
        $("#invoice #DocStat").hide();
        $("#invoice").hide();
        $("#invoice #ststus").hide();
        load_master_code();
        kendodate_format();

        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#Purchase_form");
        kendo.init(container);
        container.kendoValidator({
        });
        $("#bottom_menus").hide();
        $(".file_attach").attr("hdrtitle", "Invoice");
        $(".notes").attr("hdrtitle", "Invoice");
        $("#lblForm_menuid").text("PWNEWPURORDER");

        Screen_Id = "PWNEWPURORDER";
        permission = sec_Permission(Screen_Id);
        setlocalStorage('screen', Screen_Id);
        setlocalStorage("procrowid", "");
        setlocalStorage("process", "PWNEWPURORDER");
        $("#hdn_state_provider").val("Tamil Nadu");
        gridinvoice([]);
        $("#btnsaveShipment").hide();
        $("#dialogFileupload").hide();
        $("#dialogFileuploadView").hide();

        var org = getlocalStorage('org_id');
        $('#txtorgn_code').val(org);
        load_master_code();
        $("#txtfarcusname").empty();
        combo_data2 = grid_comboScreen_mastercodes("BUYERNAME");
        filter_combobox("txtfarcusname", combo_data2);
        gridtax([]);
        gridattachment([]);
        setlocalStorage("invoice_data", "");
        setlocalStorage("tax_data", "");
        var combo_data1 = "";

        if (getlocalStorage('btn_clk_val') == "Create") {
            $('#frmlayerdiv').show();
            $("#divCreate #review").hide();
            $("#divCreate #deactivate").hide();
            $("#hd_status_code").val("A");
            $("#invoice #DocStat").val("New");
            $("#hdn_mode_flag").val('I');
            var In_Date = new Date();
            var Mon = In_Date.getMonth();
            Mon++;
            $("#txtic_invoicedate").val(In_Date.getDate() + "/" + Mon + "/" + In_Date.getUTCFullYear());
            disable();
        }
        else if (getlocalStorage('btn_clk_val') == "Edit") {
            if (getlocalStorage("ls_pageList") != undefined) {
                $("#divCreate #review").hide();
                $("#divCreate #deactivate").hide();
                $("#divEdit #deactivate").hide();
                $("#divEdit #reviewEd").hide();
                $('#frmlayerdiv').show();
                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("Purchase_form");
                var obj_val = JSON.parse(formval);
                if (data != undefined) {
                    obj_val.ioU_PO_rowid = data.Out_po_rowid;
                    obj_val.ioU_PO_no = data.Out_po_no;
                    obj_val.ioU_agg_code = data.Out_agg_code;
                    var data = {};
                    data.context = getContext();
                    data.context.Header = obj_val;
                    var Context = data.context;
                    $.ajax({
                        type: "POST",
                        data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, IOU_PO_rowid: Context.Header.ioU_PO_rowid, IOU_PONO: Context.Header.ioU_PO_no, IOU_agg_code: Context.Header.ioU_agg_code }),
                        url: "/PAWHSNEWPurchaseOrder/PurchaseOrderfetch",
                        dataType: "json",
                        contentType: 'application/json; charset=utf-8',
                        success: function (response) {

                            if (response.context != null) {
                                generate_Invoice_header(response.context.Header);
                                generate_Invoice_QtyDetail(response.context);
                                generate_Invoice_Attachmentdtl(response.context.AttchDetail);
                                enable();
                                balance();
                                editdisable();
                                $("#hdn_mode_flag").val("U");
                                setlocalStorage('doc_no', $("#txtcommon_id").val());
                                setlocalStorage('doc_row_id', $("#invoice_rowid").val());
                                $("#txtic_invoicedate").attr("disabled", true);
                                setlocalStorage('doc_no', $("#txtcommon_id").val());
                                setlocalStorage('doc_row_id', $("#invoice_rowid").val());
                            }
                            else {

                            }
                        },
                        error: function (er) {
                            alert(er)
                            console.log(er)
                        }

                    });


                }
            }
        }
        else if (getlocalStorage('btn_clk_val') == "View") {
            if (getlocalStorage("ls_pageList") != undefined) {
                $("#divCreate #review").hide();
                $("#divCreate #deactivate").hide();
                $('#divUserRole20 #btnSave').hide();
                $("#btnReport2").hide();
                $("#btnA4Report").hide();
                var data = getlocalStorage("ls_pageList");
                var formval = form_Serialize("Purchase_form");
                var obj_val = JSON.parse(formval);
                if (data != undefined) {
                    obj_val.ioU_PO_rowid = data.Out_po_rowid;
                    obj_val.ioU_PO_no = data.Out_po_no;
                    obj_val.ioU_agg_code = data.Out_agg_code;
                    var data = {};
                    data.context = getContext();
                    data.context.Header = obj_val;
                    var Context = data.context;
                    $.ajax({
                        type: "POST",
                        data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, IOU_PO_rowid: Context.Header.ioU_PO_rowid, IOU_PONO: Context.Header.ioU_PO_no, IOU_agg_code: Context.Header.ioU_agg_code }),
                        url: "/PAWHSNEWPurchaseOrder/PurchaseOrderfetch",
                        dataType: "json",
                        contentType: 'application/json; charset=utf-8',
                        success: function (response) {

                            if (response.context != null) {
                                generate_Invoice_header(response.context.Header);
                                generate_Invoice_QtyDetail(response.context);
                                generate_Invoice_Attachmentdtl(response.context.AttchDetail);
                                disable();
                                TotalAmount();
                                editdisable();
                                $("#hdn_mode_flag").val("U");
                                $("#txtic_invoicedate").attr("disabled", true);
                                $("#hdn_mode_flag").val("U");
                                setlocalStorage('doc_no', $("#txtcommon_id").val());
                                setlocalStorage('doc_row_id', $("#invoice_rowid").val());
                            }
                            else {

                            }
                        },
                        error: function (er) {
                            alert(er)
                            console.log(er)
                        }

                    });
                    field_enable();
                }
               
            }
        }

        function field_enable() {
          
            $('#txtpwnew_pono').prop("disabled", true);
            $('#txtpwnew_podate').prop("disabled", true);
              $('#txtfarcusname').prop("disabled", true);
                $('#txtOrderBy').prop("disabled", true);
                $('#txtOrderbyNo').prop("disabled", true);
                $('#txtTakenBy').prop("disabled", true);
                $('#txtTakenByNo').prop("disabled", true);
                 $('#cmb_cus_type').prop("disabled", true);
                 $('#cmb_rec_Loca').prop("disabled", true);

        }

        function balance() {

            if ($("#hdn_bal_amt").val() != $("#hdn_tot_amt").val()) {
                $('#divUserRole20 #btnSave').hide();
                // $("#btnReport2").hide();
                $("#grid_invoice .k-grid-toolbar").hide();
                $("#grid_invoice .k-grid-Delete").hide();
                var len = $("#invoice #grid_invoice").find("tbody tr").length;
                for (var i = 0; i <= len; i++) {
                    var model = $("#invoice #grid_invoice").data("kendoGrid").dataSource.at(i);
                    if (model) {//field names
                        model.fields["In_product_desc"].editable = false;
                        model.fields["In_qty"].editable = false;
                        model.fields["In_discount"].editable = false;
                        model.fields["In_tax"].editable = false;
                        $(".Delete").attr("disabled", false);
                    }
                }
            }
        }
        $("#txtdtl").click(function () {

            fetch_grid();
            var sourcegrid = $('#grid_invoice').data('kendoGrid');
            var destinationgrid = $('#grid_tax').data('kendoGrid');
            if (sourcegrid._data.length > 0 && destinationgrid._data.length > 0) {
                for (var i = 0; i < sourcegrid._data.length; i++) {
                    for (var j = 0; j < destinationgrid._data.length; j++) {
                        var srcdataitem = sourcegrid._data[i];
                        var decdataitem = destinationgrid._data[j];
                        if (srcdataitem.In_product_code == decdataitem.In_product_code) {
                            if (srcdataitem.In_discount == "") {
                                srcdataitem.In_discount = "0";
                            }
                            var firstItem = $('#grid_tax').data().kendoGrid.dataSource.data()[j];
                            var amt = (parseFloat(srcdataitem.In_product_amount) - parseFloat(srcdataitem.In_discount)).toFixed(2);
                            firstItem["In_taxable_amount"] = amt;
                            firstItem["In_tax"] = srcdataitem.In_tax;
                        }
                    }
                }
                destinationgrid.refresh();
            }
        });
        // code Introduced by venkat report pdf
        $("#btnA4Report").click(function () {

            var exportURL = getRootUrl() + "Invoice/downloadpdf";
            window.location.href = exportURL;
        });
        function getRootUrl() {

            return window.location.origin ? window.location.origin + '/' : window.location.protocol + '/' + window.location.host + '/';
        }
        $("#btnReport2").click(function () {

            var exportURL = getRootUrl() + "Invoice/downloadpdfInvoice";
            window.location.href = exportURL;
        });

        $('#interest_rate').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
                ((event.which < 48 || event.which > 57) &&
                    (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if (text.indexOf('.') != -1) {
                setTimeout(function () {
                    if ($this.val().substring($this.val().indexOf('.')).length > 3) {
                        $this.val($this.val().substring(0, $this.val().indexOf('.') + 3));
                    }
                }, 1);
                if ((text.indexOf('.') != -1) &&
                    (text.substring(text.indexOf('.')).length > 2) &&
                    (event.which != 0 && event.which != 8) &&
                    ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }
            }
            else {
                if ($this.val().length > 2) {
                    if (event.which != 46) {
                        event.preventDefault();
                    }
                }
            }

        });
        $('#interest_rate').bind("paste", function (e) {
            var text = e.originalEvent.clipboardData.getData('Text');
            if ($.isNumeric(text)) {
                if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                    e.preventDefault();
                    $(this).val(text.substring(0, text.indexOf('.') + 3));
                }
            }
            else {
                e.preventDefault();
            }
        });
        //$('#HelpModal').on('hide.bs.modal', function (e) {
        //    if ($("#txtfarcusname").val() != undefined && $("#txtfarcusname").val() != "") {
        //        fetch_loc();
        //    }
        //});
        function editdisable() {
            $("#txtpwnew_pono").attr("disabled", true);
            $("#txt_pwnew_podate").attr("disabled", true);
            $("#txtfarcusname").attr("disabled", true);
          //  $("#cmb_rec_Loca").attr("disabled", true);
            $("#cmb_cus_type").attr("disabled", true);
        }
    });
</script>
<script>
    function isValidChar(e) {
        var mm = e.target.value;
        var match = e.key.match(/[a-zA-Z0-9. ]/);
        return match ? true : false;
    }
    function isValidAlphanumeric(e) {
        var mm = e.target.value;
        var match = e.key.match(/[a-zA-Z0-9]/);
        return match ? true : false;
    }
    function IsbuyerValid(e) {
        var mm = e.target.value;
        var match = e.key.match(/[a-zA-Z0-9 ]/);
        return match ? true : false;
    }
    function isValidsupcode(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }

            if ((charCode > 47 && charCode < 58) || (charCode > 63 && charCode < 91) || (charCode > 95 && charCode < 123 || charCode == 38 || charCode == 45 || charCode == 92 || charCode == 32))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }

</script>
<script>
    function disable() {
        $("#btnPayment").attr("disabled", true);
        $("#btnPayment").css("pointer-events", "none");
    }
    function enable() {
        $("#btnPayment").css("pointer-events", "default");
        $("#btnPayment").attr("disabled", false);
        $("#btnPayment").removeAttr("style");
    }
    function fetch_loc() {
        debugger;
    
        var In_buyer_code = $("#txtfarcusname").val();   
        $("#buyer_code").val(In_buyer_code); //Added by Prema for buyer name in edit issue//
        var In_agg_code = $("#txtorgn_code").val();
        var data = { In_buyer_code: In_buyer_code, In_agg_code: In_agg_code };
        $.ajax({
          url: '@Url.Action("location_searchPO", "PAWHSNEWPurchaseOrder")',
         type: "post",
        contentType: 'application/x-www-form-urlencoded',
            data: data,
            success: function (response) {

                if (response != null) {

                    var itemArr1 = [];
                    for (var i = 0; i < response.length; i++) {
                        var list = {};
                        list.id = response[i].Out_buyer_addr_rowid
                        list.code = response[i].Out_loction;
                        list.desc = response[i].Out_loction;
                        itemArr1.push(list);
                    }
                    filter_combobox("cmb_rec_Loca", itemArr1);

                }

            },
            error: function (er) {
                alert(er);
                console.log(er);
            }
        });
                $.ajax({
                   url: '@Url.Action("location_search", "PAWHSNewBookInvoice")',
                    type: "post",
                    contentType: 'application/x-www-form-urlencoded',
                    data: data,
                    success: function (response) {

                        if (response != null) {

                            var itemArr2 = [];
                            for (var i = 0; i < response.length; i++) {
                                var list = {};
                                list.id = response[i].Out_buyer_addr_rowid
                                list.code = response[i].Out_loction;
                                list.desc = response[i].Out_loction;
                                itemArr2.push(list);
                            }
                            setlocalStorage("Address", itemArr2);

                        }

                    },
                    error: function (er) {
                        alert(er);
                        console.log(er);
                    }
                });

    }

</script>
<script>
    $("#Billfile").change(function () {
        readURL(this);
    });

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#Bill_img').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);

        }
    }
    function load_master_code() {
        debugger;
        var data = {};
        var context = getContext();
        data.userId = context.userId
        data.orgnId = context.orgnId
        data.locnId = context.locnId
        data.localeId = context.localeId
        data.screen_Id = "PWNEWPURORDER";
        var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
    }
</script>

<script>
    function grid_shipment(data) {
        try {
            $("#grid_shipment").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_shipment_rowid: { type: "string" },
                                In_sl_no: { type: "number", defaultValue: 0 },
                                In_address: { type: "string" },
                                In_qty: { type: "number" },
                                In_product_code: { type: "string" },
                                In_mode_flag: { type: "string", defaultValue: "I" },

                            }
                        }
                    }
                },
                toolbar: "<a class='k-grid-add' id='btnSave1' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                height: 240,
                groupable: false,
                dataBinding: setDefaultValues,
                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_shipment').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                save: function (data) {

                    if (data.values.In_address) {
                        combo();
                    }
                },
                edit: OnEdit1,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                        {
                            name: "Delete",
                            id: "Delete",
                            imageClass: "fa fa-close",
                            click: function (e) {

                                var grid = $("#grid_shipment").data("kendoGrid");
                                var dataItem = $("#grid_shipment").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()

                            }
                        },
                    ], title: "Action", width: "50px",
                },
                {
                    field: "unique_id",
                    title: "unique_id",
                    width: 100,
                    hidden: true
                },
                {
                    field: "In_shipment_rowid",
                    title: "Product Code",
                    width: 100,
                    hidden: true,

                },

                {
                    feild: "In_sl_no",
                    title: "podtl",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "In_product_code",
                    title: "Product Code",
                    width: 100,
                    hidden: true,
                },
                {
                    field: "In_qty",
                    title: "Quantity",
                    attributes: { style: "text-align:right;", "class": "customClass" },
                    editor: function (container, options) {
                        item_rate(container, options.field, '9', '2');
                    },
                    width: 100,
                },
                {
                    field: "In_address",
                    title: "Address",
                    width: 100,
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "", "grid_shipment")
                    },
                },


                ],
                editable: true,
            });
        }
        catch (err) {
            alert(err);
        }
    }
    function OnEdit1(e) {

        setDefaultValues(e);
        combo();

    }
    function combo() {


        In_address_list = getlocalStorage('Address');
    }
    function gridinvoice(data) {
        try {
            $("#grid_invoice").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_podtl_rowid: { type: "string" },
                                In_sln_no: { type: "string" },
                                In_product_Type: { type: "string" },
                                In_product_Name: { type: "string" },
                                In_product_Variety: { type: "string" },
                                In_hsn_code: { type: "string" },
                                In_qty: { type: "string" },
                                In_rate: { type: "string" },
                                In_tax_rate: { type: "string", defaultValue: "0" },
                                In_product_amount: { type: "string", defaultValue: "0" },
                                In_discount: { type: "string", defaultValue: "0" },
                                In_othercharges: { type: "number", defaultValue: 0 },
                                In_tax: { type: "string", defaultValue: "0" },
                                In_gross_amount: { type: "number", defaultValue: 0 },
                                In_remarks: { type: "string", defaultValue: "0" },
                                ShipDetail: { type: "json" },
                                unique_id: { type: "string" },
                                In_cgst_rate: { type: "string" },
                                In_sgst_rate: { type: "string" },
                                In_igst_rate: { type: "string" },
                                product_code: { type: "string" },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                                //editable: false
                            }

                        }
                    },
                    aggregate: [{ field: "In_gross_amount", aggregate: "sum" }],
                },

                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",


                dataBinding: setDefaultValues,
                dataBound: function (e) {

                    resultData = e.sender._data;
                    var rows = $('#grid_invoice').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                edit: OnEdit,
                save: function (data) {

                    if (data.values.In_qty) {
                        data.model.set("In_product_amount", (parseFloat(data.values.In_qty) * parseFloat(data.model.In_rate)).toFixed(2));
                        var prd_amt = data.model.In_product_amount != undefined ? parseFloat(data.model.In_product_amount) : parseFloat(0.0);
                        var dis_amt = data.model.In_discount != "" ? parseFloat(data.model.In_discount) : parseFloat(0.0);
                        var amt = (parseFloat(prd_amt) + parseFloat(dis_amt)).toFixed(2);
                        var amt1 = (parseFloat(prd_amt) - parseFloat(dis_amt)).toFixed(2);
                        data.model.set("In_tax", ((parseFloat(amt1) * parseFloat(data.model.In_tax_rate)) / 100.0).toFixed(2));
                        data.model.set("In_gross_amount", (parseFloat(amt1) + parseFloat(data.model.In_tax)).toFixed(2));

                    }
                    if (data.values.In_rate) {
                        data.model.set("In_product_amount", (parseFloat(data.model.In_qty) * parseFloat(data.values.In_rate)).toFixed(2));
                        var prd_amt = data.model.In_product_amount != undefined ? parseFloat(data.model.In_product_amount) : parseFloat(0.0);
                        var dis_amt = data.model.In_discount != "" ? parseFloat(data.model.In_discount) : parseFloat(0.0);
                        var amt = (parseFloat(prd_amt) + parseFloat(dis_amt)).toFixed(2);
                        var amt1 = (parseFloat(prd_amt) - parseFloat(dis_amt)).toFixed(2);
                        data.model.set("In_tax", ((parseFloat(amt1) * parseFloat(data.model.In_tax_rate)) / 100.0).toFixed(2));
                        data.model.set("In_gross_amount", (parseFloat(amt1) + parseFloat(data.model.In_tax)).toFixed(2));
                    }
                    if (data.values.In_discount) {

                        if (parseFloat(data.values.In_discount) > parseFloat(data.model.In_gross_amount) || parseFloat(data.values.In_discount) == parseFloat(data.model.In_product_amount)) {
                            var discount1 = "0.00";
                            data.model.set("In_discount", (parseFloat(discount1).toFixed(2)));
                            return false;
                        }

                        var amt_disc = (data.model.In_product_amount != undefined ? parseFloat(data.model.In_product_amount) : parseFloat(0.0)) - (data.values.In_discount != undefined ? parseFloat(data.values.In_discount) : parseFloat(0.0));
                        data.model.set("In_tax", ((parseFloat(amt_disc) * parseFloat(data.model.In_tax_rate)) / 100.0).toFixed(2));
                        data.model.set("In_gross_amount", (parseFloat(amt_disc) + parseFloat(data.model.In_tax)).toFixed(2));
                    }
                    if (data.values.In_discount == 0) {
                        if (parseFloat(data.values.In_discount) > parseFloat(data.model.In_gross_amount) || parseFloat(data.values.In_discount) == parseFloat(data.model.In_product_amount)) {
                            var discount1 = "0.00";
                            data.model.set("In_discount", (parseFloat(discount1).toFixed(2)));
                            return false;
                        }

                        var amt_disc = (data.model.In_product_amount != undefined ? parseFloat(data.model.In_product_amount) : parseFloat(0.0)) - (data.values.In_discount != undefined ? parseFloat(data.values.In_discount) : parseFloat(0.0));
                        data.model.set("In_tax", ((parseFloat(amt_disc) * parseFloat(data.model.In_tax_rate)) / 100.0).toFixed(2));
                        data.model.set("In_gross_amount", (parseFloat(amt_disc) + parseFloat(data.model.In_tax)).toFixed(2));
                    }

                    if (data.values.In_product_code != "") {
                        var code = (data.model.In_product_code)
                    }
                    if (data.values.In_product_code) {
                        data.model.set("unique_id", $("#shipment_uid").val());
                        data.model.set("ShipDetail", $("#json").val());
                        data.model.set("In_qty", $("#tranqty").val());
                    }
                },
                height: 240,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        command: [
                            {
                                name: "Delete",
                                id: "Delete",
                                imageClass: "fa fa-close",
                                click: function (e) {
                                    var grid = $("#grid_invoice").data("kendoGrid");
                                    var dataItem = $("#grid_invoice").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                    DeleteWindowEvent(e, dataItem, grid);
                                    e.stopImmediatePropagation()
                                }
                            },
                        ], title: "&nbsp;", width: "25px",
                    },
                    {
                        field: "In_podtl_rowid",
                        title: "In_podtl_rowid",
                        hidden: true
                    },
                    {
                        field: "In_product_Type",
                        title: "Crop Type",
                        editor: '<div class="input-group input-group-sm"><input type="text" readonly name="orgn_village_desc" maxlength="10" style="width:100px;color:black"  onkeypress="return speical_char(event)" data-bind="value:orgn_village_desc"/><span class="input-group-btn" style="padding-right: 150px;"><a class="HelpWindow fa fa-search fa-lg" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Details" searchid="PAWHSPO" data-target="#HelpModal" onclick=transfer(this,"grid","grid_invoice","gridinvoice") title="Search" style="font-size: 15px; padding-left: 10px;"></a> </span> </div>',
                        width: 150,
                    },
                    {
                        field: "In_product_Name",
                        title: "Crop Name",
                        width: 100,
                    },
                    {
                        field: "In_product_Variety",
                        title: "Crop Variety",
                        width: 100,
                    }, {
                        field: "productcategory",
                        title: "productcategory",
                        hidden: true
                    },
                    {
                        field: "product_code",
                        title: "product_code",
                        hidden: true
                    },
                    {
                        field: "In_hsn_code",
                        title: "HSN Code",
                        width: 100,
                    },
                    {
                        field: "In_uomtype_code",
                        title: "UOM",
                        hidden: true
                    },
                    {
                        field: "In_uomtype_desc",
                        title: "UOM",
                        width: 100, hidden: true
                    },
                    {
                        field: "In_qty",
                        title: "Quantity",
                        width: 80,
                        attributes: { style: "text-align:right;", "class": "customClass" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },
                    },
                    {
                        field: "In_rate",
                        title: "Rate",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            numeric_editor_dot(container, options.field, '9', '3');
                        },
                    },

                    {
                        field: "In_product_amount",
                        title: "Amount",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');

                        },
                    },
                    {
                        field: "In_discount",
                        title: "Discount",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');

                        },
                    },
                    {
                        field: "In_tax",
                        title: "Tax Amount",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        footerTemplate: "Total",
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },
                    },

                    {
                        title: 'Gross Amount',
                        field: 'In_gross_amount',
                        width: 100,
                        format: "{0:0.##}",
                        footerTemplate: "<div style='text-align:right'>#= kendo.toString(sum, '0.00') # </div>",
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '9', '2');
                        },


                    },
                    {
                        command: [
                            {
                                name: "Add",
                                id: "Add",
                                text: "Add",
                                click: function (e) {
                                    var grid = $("#grid_invoice").data("kendoGrid");
                                    var dataItem = $("#grid_invoice").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                    shipment(e, dataItem, grid);
                                }
                                // click: shipment
                            },
                            {
                                name: "View",
                                id: "View",
                                text: "View",
                                click: function (e) {
                                    var grid = $("#grid_invoice").data("kendoGrid");
                                    var dataItem = $("#grid_invoice").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                    shipmentView(e, dataItem, grid);
                                }
                                // click: shipment
                            },
                            {
                                name: "Delete",
                                id: "Delete",
                                imageClass: "fa fa-close",
                                click: function (e) {
                                    // e.preventDefault();
                                    var grid = $("#grid_invoice").data("kendoGrid");
                                    var dataItem = $("#grid_invoice").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                    DeleteWindowEvent(e, dataItem, grid);
                                    e.stopImmediatePropagation()

                                    var gridTax2 = $("#grid_tax").data("kendoGrid");
                                    var gridData2 = gridTax2.dataSource.view();

                                    for (var i = 0; i < gridData2.length; i++) {
                                        if (gridData2[i].product_code == dataItem.product_code) {
                                            var array1 = gridTax2.dataSource.data();
                                            gridTax2.dataSource.remove(array1[i]);
                                            gridTax2.dataSource.sync();
                                        }
                                    }
                                }
                            },
                        ], title: "Shipment", width: "150px",
                        hidden: true
                    },
                    {
                        field: "ShipDetail",
                        title: "json",
                        width: 400,
                        hidden: true
                    },
                    {
                        field: "unique_id",
                        title: "unique_id",
                        width: 400,
                        hidden: true
                    },
                    {
                        field: "In_tax_rate",
                        title: "Tax Rate",
                        width: 100,
                        hidden: true

                    },

                    {
                        field: "In_status_code",
                        title: "status_code",
                        width: 1,
                        hidden: true,
                    },

                    {
                        field: "In_hsn_desc",
                        title: "status_code",
                        width: 1,
                        hidden: true,
                    },
                    {
                        field: "hsn_code",
                        title: "hsn_code",
                        width: 1,
                        hidden: true,
                    },

                    {
                        field: "In_status_desc",
                        title: "status_desc",
                        width: 1,
                        hidden: true,
                    },

                    {
                        field: "In_mode_flag",
                        title: "Mode",
                        hidden: true
                    }
                ],
                editable: true
            });



        } catch (err) {
            alert(err);
        }
    }
    load_master_code();
    In_product_desc_list = grid_comboScreen_mastercodes("PRODCTNAME");
    function OnEdit(e) {
        setDefaultValues(e);

        e.container.find("input[name='In_product_amount']").prop('readonly', true);
        e.container.find("input[name='In_tax']").prop('readonly', true);
        e.container.find("input[name='In_gross_amount']").prop('readonly', true);
        e.container.find("input[name='In_product_code']").prop('readonly', true);
        e.container.find("input[name='In_uomtype_desc']").prop('readonly', true);
        e.container.find("input[name='In_qty']").focusout(function () {

            //e.model.unique_id = $("#shipment_uid").val();
            //e.model.ShipDetail = $("#json").val();
            if (parseFloat($(this).val()) == 0) {
                e.model.In_qty = 0;
                e.model.In_product_amount = 0;
                e.model.In_discount = 0;
                e.model.In_tax = 0;
                e.model.In_gross_amount = 0;

                var invgrid = $("#grid_invoice").data("kendoGrid");
                invgrid.dataSource.sync();
                kendoAlert("Quantity Can't Be Zero for the Product" + e.model.In_product_desc);
                return false;
            }

        });
        e.container.find("input[name='In_discount']").change(function () {

            if (e.model.In_qty == 0) {
                e.model.In_tax = 0;
                e.model.In_gross_amount = 0;
                var invgrid = $("#grid_invoice").data("kendoGrid");
                invgrid.dataSource.sync();
                kendoAlert("Please fill the Quantity of the Product" + e.model.In_product_desc);
                return false;
            }
            var dis = parseFloat($(this).val());
            if (parseFloat($(this).val()) > parseFloat(e.model.In_product) || parseFloat($(this).val()) == parseFloat(e.model.In_product)) {

                kendoAlert("Please Enter a valid Discount Amount");
                e.model.In_discount = 0;
                var invgrid = $("#grid_invoice").data("kendoGrid");
                invgrid.dataSource.sync();
            }
            if (parseFloat($(this).val()) == 0) {
                e.model.In_discount = 0;
                var invgrid = $("#grid_invoice").data("kendoGrid");
                invgrid.dataSource.sync();
            }
        });
        e.container.find("input[name='In_product_desc']").change(function () {

            var grid = $("#grid_invoice").data("kendoGrid");
            var models = grid.dataSource.data();
            var model = models[0];
            var uniqueId = model.uid
            var row = grid.table.find("[data-uid=" + uniqueId + "]");
            grid.select(row);
            if ($("#cmb_rec_Loca").val() != '') {
                var valueprd = $(this).val();
                var formval = form_Serialize("Purchase_form");
                var obj_val = JSON.parse(formval);

                obj_val.FilterBy_Option = "pawhs_NEW";
                obj_val.FilterBy_Code = valueprd;
                obj_val.FilterBy_FromValue = $("#cmb_rec_Loca").val();
                obj_val.FilterBy_ToValue = ".";
                var data = {};
                data.context = getContext();
                data.context.Header = obj_val;
                var Context = data.context;
                $.ajax({
                    type: "POST",
                    url: '/InWard/InwardProductfetch',
                    dataType: 'json',
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, FilterBy_Option: Context.Header.FilterBy_Option, FilterBy_Code: Context.Header.FilterBy_Code, FilterBy_FromValue: Context.Header.FilterBy_FromValue, FilterBy_ToValue: Context.Header.FilterBy_ToValue }),
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {

                        //var list = JSON.parse(response);
                        if (response.context != null) {

                            generate_TaxInvoiceproduct_list(response.context.InvoiceTax);
                            generate_Invoiceproduct_list(response.context.Detail);
                        }
                        else {

                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });
            }

        });
    }
</script>
<script>
    function gridtax(data) {
        try {
            $("#grid_tax").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                In_product_code: { type: "string" },
                                In_product_name: { type: "string" },
                                In_hsn_code: { type: "string" },
                                In_hsn_code_desc: { type: "string" },
                                In_hsn_desc: { type: "string" },
                                In_cgst_rate: { type: "string" },
                                In_sgst_rate: { type: "string" },
                                In_sugst_rate: { type: "string" },
                                In_igst_rate: { type: "string" },
                                In_tax_rate: { type: "string" },
                                In_taxable_amount: { type: "string" },
                                In_tax_amount: { type: "string" },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        },
                        parse: function (data) {
                            return $.map(data, function (item) {
                                item.In_cgst_rate = parseFloat(item.In_cgst_rate).toFixed(2);
                                item.In_sgst_rate = parseFloat(item.In_sgst_rate).toFixed(2);
                                item.In_ugst_rate = parseFloat(item.In_ugst_rate).toFixed(2);
                                item.In_tax_amount = parseFloat(item.In_tax_amount).toFixed(2);
                                item.In_taxable_amount = parseFloat(item.In_taxable_amount).toFixed(2);
                                item.In_sugst_rate = parseFloat(item.In_sgst_rate).toFixed(2) + parseFloat(item.In_ugst_rate).toFixed(2);
                                return item;
                            });
                        }
                    }
                },
                height: 240,
                groupable: false,
                dataBinding: setDefaultValues,
                //dataBound: function (e) {
                //    resultData = e.sender._data;
                //    var rows = $('#grid_tax').data('kendoGrid').tbody.children();
                //    setColor(rows, resultData);
                //},
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [

                    {
                        field: "In_invoicedtl_rowid",
                        title: "invoicedtl_rowid",
                        hidden: true
                    },
                    {
                        field: "In_invoice_no",
                        title: "invoice_no",
                        width: 1,
                        hidden: true,
                    },

                    {
                        field: "In_product_code",
                        title: "Product Code",
                        width: 100,

                    },
                    {
                        field: "In_product_name",
                        title: "Product Name",
                        width: 100,
                    },
                    {
                        field: "In_hsn_desc",
                        title: "HSN Code",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: "In_hsn_code",
                        title: "HSN",
                        width: 100,

                    },

                    {
                        field: "In_cgst_rate",
                        title: "CGST %",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '4', '2');
                        },
                    },

                    {
                        field: "In_sgst_rate",
                        title: "SGST % / UGST %",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '4', '2');
                        },
                    },
                    {
                        field: "In_igst_rate",
                        title: "IGST %",
                        width: 100,
                        attributes: { style: "text-align:right;" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '4', '2');
                        },
                    },
                    {
                        field: "In_tax_rate",
                        title: "Tax Rate",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: "In_taxable_amount",
                        title: "Taxable Amount",
                        attributes: { style: "text-align:right;" },
                        width: 100,
                    },

                    {
                        field: "In_tax",
                        title: "Tax Amount",
                        attributes: { style: "text-align:right;" },
                        width: 100,
                    },
                    {
                        field: "In_mode_flag",
                        title: "Mode",
                        hidden: true
                    }],
                editable: false
            });
        }
        catch (err) {
            alert(err);
        }
    }
</script>
<script>
    function gridattachment(data) {
        try {
            $("#grid_attachment").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_attch_rowid: { type: "string" },
                                In_filename: { type: "string" },
                                In_document: { type: "string" },
                                In_description: { type: "string" },
                                In_attch_date: { type: "date" },
                                In_attch_upload: { type: "string" },
                                In_attch_unique_id: { type: "string" },
                                In_mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    },

                },

                toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",

                //edit: OnEditattachment,
                //dataBinding: setDefaultValues,
                dataBound: function (e) {

                    resultData = e.sender._data;
                    var rows = $('#grid_attachment').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },

                height: 240,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: "In_attch_rowid",
                        title: "invoicedtl_rowid",
                        hidden: true
                    },
                    {
                        field: "In_po_no",
                        title: "invoice_no",
                        width: 1,
                        hidden: true,
                    },
                    {
                        field: "In_filename",
                        title: "File Name",
                        width: 100
                    },
                    {
                        field: "In_document",
                        title: "Document",
                        width: 120,
                    },
                    {
                        field: "In_description",
                        title: "Description",
                        width: 100,

                    },
                    {
                        field: "In_attch_date",
                        title: "Date",
                        width: 100,
                        format: "{0:dd/MM/yyyy}"
                    },
                    {
                        field: "In_attch_upload",
                        title: "File Upload",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: "In_attch_unique_id",
                        title: "Unique Id",
                        width: 100,
                        hidden: true
                    },
                    {
                        command: [
                            {
                                name: "Upload",
                                id: "Upload",
                                text: "Upload",
                                click: function (e) {
                                    var grid = $("#grid_attachment").data("kendoGrid");
                                    var dataItem = $("#grid_attachment").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                    Upload(e, dataItem, grid);
                                },
                            },
                            {
                                name: "View",
                                id: "View",
                                text: "View",
                                click: function (e) {
                                    var grid = $("#grid_attachment").data("kendoGrid");
                                    var dataItem = $("#grid_attachment").data("kendoGrid").dataItem($(e.target).closest("tr"));
                                    Uploadview(e, dataItem, grid);
                                }

                            },


                        ], title: "Image Upload", width: "100px",
                    },
                    {
                        field: "In_mode_flag",
                        title: "Mode",
                        hidden: true
                    }],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }
    function dateEditor(container, options) {
        $('<input type="text" name="JoiningDate" id="JoiningDate"/>')
            .appendTo(container)
            .kendoDatePicker({
                format: "MM/dd/yyyy"
            });
    }

</script>
<script>

    @* Implemented by Mohan *@

    function Upload(e, dataItem, grid) {

        $("#dialogFileupload").kendoWindow();
        var dialog = $("#dialogFileupload").data("kendoWindow");
        dialog.open().element.closest(".k-window").css({
            top: 121,
            left: 300, height: 400, width: 900
        });
        dialog.title("File Upload");
        dialog.bind("open", Upload);
        $("#In_attch_file").val(dataItem.Fileupload);
        $("#txtImageunique").val(dataItem.uid);


    }
    function Uploadview(e, dataItem, grid) {
        debugger
        $("#dialogFileuploadView").kendoWindow();
        var dialog = $("#dialogFileuploadView").data("kendoWindow");
        dialog.open().element.closest(".k-window").css({
            top: 121,
            left: 300, height: 400, width: 900
        });
        dialog.title("File Upload");
        //dialog.bind("open", serialnoview);
        var imagedata = dataItem.In_attch_upload
        if (imagedata != "")
            document.getElementById("farmer_img").src = "data:image/png;base64," + imagedata;
        else
            document.getElementById("farmer_img").src = "/images/noimage.png";
        //$("#In_attch_file").val(dataItem.Fileupload);
        //$("#In_attch_unique_id").val(dataItem.uid);


    }
    function fileUpload(e) {

        $("#dialogFileupload").kendoWindow();
        var dialog = $("#dialogFileupload").data("kendoWindow");
        dialog.open().element.closest(".k-window").css({
            top: 121,
            left: 300, height: 400, width: 900
        });
        dialog.title("File Upload");
        //dialog.bind("open", shipment);
        //grid_shipment([]);
    }

</script>
<script src="~/CommonScripts/HelpFile.js"></script>
<script>
    function fetch_grid() {

        var dataSource = $("#grid_invoice").data("kendoGrid").dataSource.data();
        console.log(dataSource);
        var taxgrid = $('#grid_tax').data('kendoGrid');
        gridtax([]);
        var ds = {};
        if (dataSource.length > 0) {
            for (var i = 0; i < dataSource.length; i++) {

                ds.In_product_code = dataSource[i].product_code
                ds.In_product_name = dataSource[i].In_product_Name
                ds.In_product_desc = dataSource[i].In_product_desc
                ds.In_hsn_code = dataSource[i].In_hsn_code
                ds.In_hsn_desc = dataSource[i].In_hsn_desc
                ds.In_cgst_rate = (parseFloat(dataSource[i].In_cgst_rate)).toFixed(2);
                ds.In_sgst_rate = (parseFloat(dataSource[i].In_sgst_rate)).toFixed(2);
                ds.In_ugst_rate = (parseFloat(dataSource[i].In_ugst_rate)).toFixed(2);
                ds.In_sugst_rate = (parseFloat(dataSource[i].In_sugst_rate)).toFixed(2);
                ds.In_igst_rate = (parseFloat(dataSource[i].In_igst_rate)).toFixed(2);
                ds.In_tax_rate = (parseFloat(dataSource[i].In_tax_rate)).toFixed(2);
                ds.In_tax = (parseFloat(dataSource[i].In_tax)).toFixed(2);
                ds.In_discount = (parseFloat(dataSource[i].In_discount)).toFixed(2);
                // ds.In_taxable_amount = (parseFloat(dataSource[i].In_gross_amount)) - (parseFloat(dataSource[i].In_tax)).toFixed(2); //// Prema Changed due to edit mode discount calculation////
                ds.In_taxable_amount = ((parseFloat(dataSource[i].In_gross_amount)) - (parseFloat(dataSource[i].In_tax))).toFixed(2);
                taxgrid.dataSource.add(ds);
            }
            taxgrid.refresh();
        }
        ds = {};
    }
    function fetchship_grid() {

        var grid = $("#grid_invoice").data("kendoGrid");
        var models = grid.dataSource.data();
        for (var i = 0; i < models.length; i++) {
            if (models[i].uid == $("#shipment_uid").val()) {
                var dataItem = $("#grid_invoice").data("kendoGrid").dataSource.data()[i];
                dataItem.set("unique_id", $("#shipment_uid").val());
                dataItem.set("ShipDetail", $("#json").val());
            }
        }

    }
    function fetchattach_grid() {

        var grid = $("#grid_attachment").data("kendoGrid");
        var models = grid.dataSource.data();
        for (var i = 0; i < models.length; i++) {
            if (models[i].uid == $("#txtImageunique").val()) {
                var dataItem = $("#grid_attachment").data("kendoGrid").dataSource.data()[i];
                dataItem.set("In_attch_unique_id", $("#txtImageunique").val());
                dataItem.set("In_attch_upload", $("#txtImageHidden").val());
            }
        }

    }
</script>
<script>
    function saveshipment() {

        var grid_val2 = JSON.stringify($("#grid_shipment").data().kendoGrid._data);
        var shipmentinfo = {};
        var Bind1 = {};
        Bind1 = grid_val2;
        var result3 = JSON.parse(Bind1);
        $.each(result3, function (index, value) {
            var In_shipment_rowid = value.In_shipment_rowid;
            if (In_shipment_rowid == undefined || In_shipment_rowid == '') {
                result3[index].In_shipment_rowid = 0;
            }
            result3[index].In_shipment_rowid = parseFloat(result3[index].In_shipment_rowid);
        });
        var grid_val3 = JSON.stringify(result3);
       // $("#json").val(grid_val3);
        var grid = $("#grid_shipment").data("kendoGrid");
        var gridData = grid.dataSource.view();
        var grid_val3 = JSON.stringify(result3);
        var net_amt = 0;
        for (var i = 0; i < gridData.length; i++) {
            if (gridData[i].In_qty != '') {
                net_amt += gridData[i].In_qty != undefined ? parseFloat(gridData[i].In_qty) : parseFloat(0);
            }
        }

        var totalnet = net_amt;
        var grid_valinv = JSON.stringify($("#grid_invoice").data().kendoGrid._data);
        var Bindinv = {};
        Bindinv = grid_valinv;
        var resultinv = JSON.parse(Bindinv);
        $.each(resultinv, function (index, value) {
            var qtyinvoive = "";
            if (value.product_code == $("#product_code").val()) {
                if (value.In_qty == undefined || value.In_qty == "") {
                    value.In_qty = 0;
                }
                qtyinvoive = parseFloat(value.In_qty);
                if (qtyinvoive == NaN || qtyinvoive == "") {
                    qtyinvoive = 0;
                }
                if (qtyinvoive < totalnet) {
                    kendoAlert("Entered Qty is is higher than Purchase Order Qty");
                    $("#tranqty").val("");
                    $("#json").val("");
                } else {
                    $("#tranqty").val(net_amt);
                    $("#json").val(grid_val3);
                    kendoAlert("Shipment Details saved successfully");
                    $('#dialog').data("kendoWindow").close();
                    fetchship_grid();
                    //OnEdit();
                }
            }

        });

    }
    function grid_control() {
        try {

            var control_Name = [
                { "dataCol": "", "grid_row_col": "In_podtl_rowid" },
                { "dataCol": "productcategory", "grid_row_col": "productcategory" },
                { "dataCol": "productsubcategory", "grid_row_col": "In_product_Type" },
                { "dataCol": "product_code", "grid_row_col": "product_code" },
                { "dataCol": "product_name", "grid_row_col": "In_product_Name" },
                { "dataCol": "crop_variety", "grid_row_col": "In_product_Variety" },
                { "dataCol": "uomtype_code", "grid_row_col": "In_uomtype_code" },
                { "dataCol": "uomtype_code_desc", "grid_row_col": "In_uomtype_desc" },
                { "dataCol": "cgst_rate", "grid_row_col": "In_cgst_rate" },
                { "dataCol": "sgst_rate", "grid_row_col": "In_sgst_rate" },
                { "dataCol": "igst_rate", "grid_row_col": "In_igst_rate" },
                { "dataCol": "ugst_rate", "grid_row_col": "In_ugst_rate" },
                { "dataCol": "tax_rate", "grid_row_col": "In_tax_rate" },
                { "dataCol": "hsn_code", "grid_row_col": "hsn_code" },
                { "dataCol": "hsn_code_desc", "grid_row_col": "In_hsn_code" },
                { "dataCol": "hsn_desc", "grid_row_col": "In_hsn_desc" },
                { "dataCol": "", "grid_row_col": "In_tax" },
                { "dataCol": "", "grid_row_col": "In_invoice_no" },
                { "dataCol": "", "grid_row_col": "In_taxable_amount" },
                { "dataCol": "", "grid_row_col": "In_rate" },
                { "dataCol": "", "grid_row_col": "In_qty" },
                { "dataCol": "", "grid_row_col": "In_product_amount" },
                { "dataCol": "", "grid_row_col": "In_discount" },
                { "dataCol": "", "grid_row_col": "In_tax" },
                { "dataCol": "", "grid_row_col": "In_amount" },
                { "dataCol": "", "grid_row_col": "In_gross_amount" },
                { "dataCol": "", "grid_row_col": "ShipDetail" },
                { "dataCol": "", "grid_row_col": "unique_id" },
                { "dataCol": "Provider_location", "grid_row_col": "" },
                { "dataCol": "", "grid_row_col": "In_mode_flag" },
                { "dataCol": "", "grid_row_col": "uid" }
            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function form_control() {
        var control_Name = [
            { "dataCol": "orgn_code", "controlId": "txtorgn_code", "type": "Text" },
            { "dataCol": "buyer_code", "controlId": "buyer_code", "type": "Text" },
            { "dataCol": "buyer_name", "controlId": "txtfarcusname", "type": "Text" }
        ];
        return control_Name;
    }

    function trans_input_data() {
        var trans_coll = [
            { "trasfer": "Yes", "dataCol": "orgn_code", "controlId": "txtorgn_code", "grid_id": "", "grid_row_col": "" },
            { "trasfer": "Yes", "dataCol": "buyer_code", "controlId": "", "grid_id": "", "grid_row_col": "" },
            { "trasfer": "Yes", "dataCol": "buyer_name", "controlId": "", "grid_id": "", "grid_row_col": "" },
            { "trasfer": "Yes", "dataCol": "agg_code", "controlId": "txtorgn_code", "grid_id": "grid_invoice", "grid_row_col": "" },
            { "trasfer": "Yes", "dataCol": "Provider_Location", "controlId": "cmb_rec_Loca", "grid_id": "grid_invoice", "grid_row_col": "" },
            { "trasfer": "Yes", "dataCol": "In_product_catg_desc", "controlId": "", "grid_id": "grid_invoice", "grid_row_col": "" },
            { "trasfer": "Yes", "dataCol": "In_product_subcatg_desc", "controlId": "", "grid_id": "grid_invoice", "grid_row_col": "" }
        ];
        return trans_coll;
    }
    function mandatory() {
        kendo.alert("enter product category")
    }
    @* Implemented by Mohan *@

    function generate_Invoiceproduct_list(res) {
        var dataItem = $("#grid_invoice").data("kendoGrid").dataSource.data()[0];
        dataItem.set("In_product_catg_code", res[0].In_productcategory);
        dataItem.set("In_product_catg_desc", res[0].In_productcategory_desc);
        dataItem.set("In_product_subcatg_code", res[0].In_productsubcategory);
        dataItem.set("In_product_subcatg_desc", res[0].In_productsubcategory_desc);
        dataItem.set("In_product_code", res[0].In_product_code);
        dataItem.set("In_product_desc", res[0].In_product_name);
        dataItem.set("In_uomtype_code", res[0].In_uomtype_code);
        dataItem.set("In_uomtype_desc", res[0].In_uomtype_code_desc);

        dataItem.set("In_hsn_code", $("#hdn_hsn_code").val());
        dataItem.set("In_tax_rate", $("#tax_rate").val());

        dataItem.set("In_mode_flag", "I");



    }
    function generate_TaxInvoiceproduct_list(res) {
        var gridTax1 = $("#grid_tax").data("kendoGrid");
        var grid = $("#grid_invoice").data("kendoGrid");
        var datavalue = grid.dataItem(grid.select());
        var gridData = gridTax1.dataSource.view();
        for (var i = 0; i < gridData.length; i++) {
            if (gridData[i].In_product_code == datavalue.In_product_code) {
                var array = gridTax1.dataSource.data();
                gridTax1.dataSource.remove(array[i]);
                //gridTax1.dataSource.sync();
            }
        }
        var prdgrid1 = $("#grid_invoice").data("kendoGrid");
        var selected1 = prdgrid1.select().index();
        var setdataItem = $("#grid_invoice").data("kendoGrid").dataSource.data()[selected1]

        setdataItem.set("In_qty", "");
        setdataItem.set("In_tax_rate", "");
        setdataItem.set("In_discount", "");
        setdataItem.set("In_gross_amount", "");


        if (res != null) {
            var gridTax = $("#grid_tax").data("kendoGrid");
            if (gridtax) {
                var dataSource_Tax = gridTax.dataSource;
                dataSource_Tax.insert(
                    {
                        In_product_catg_desc: "",
                        In_product_subcatg_desc: "",
                        In_product_code: res[0].In_product_code,
                        In_product_name: res[0].In_product_name,
                        //  In_product_name: res[0].In_product_desc,
                        In_hsn_code: res[0].In_hsn_code,
                        In_hsn_code_desc: res[0].In_hsn_desc,
                        In_hsn_desc: res[0].In_hsn_desc,
                        In_cgst_rate: res[0].In_cgst_rate,
                        In_sgst_rate: res[0].In_sgst_rate,
                        In_ugst_rate: res[0].In_ugst_rate,
                        In_sugst_rate: res[0].In_ugst_rate,
                        In_igst_rate: res[0].In_igst_rate,
                        In_tax_rate: res[0].In_tax_rate

                    });
                $("#tax_rate").val(res[0].In_tax_rate);
                $("#hdn_hsn_code").val(res[0].In_hsn_code);
                $("#hdn_hsn_code_desc").val(res[0].In_hsn_desc);
                $('#cmb_rec_Loca').data("kendoComboBox").enable(false);
            }
        }
        else {
            kendoAlert("Kindly Maintain  GST Rate for this product/ Hsn Code ");

            var prdgrid = $("#grid_invoice").data("kendoGrid");
            var selected = prdgrid.select().index();
            var array = prdgrid.dataSource.data();
            prdgrid.dataSource.remove(array[selected]);
            prdgrid.dataSource.sync();
            $('#cmb_rec_Loca').data("kendoComboBox").enable(true);

        }

    }
</script>
<script>
    function save() {
        debugger;
        try {
            save_Image();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function save_Image() {
        try {
            var xhr = new XMLHttpRequest();
            var fd = new FormData();
            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var value = JSON.parse(xhr.responseText);
                    if (value.result != undefined) {
                        $("#txtImageHidden").val(value.result);
                    }
                    save_PO();
                }
            };


            fd.append("file", document.getElementById('Billfile').files[0]);
            fd.append("userID", $('#txtUserId').val());
            xhr.open("POST", "/UserDefinition/User/", true);
            xhr.send(fd);
            xhr.addEventListener("load", function (event) {
            }, false);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function save_PO() {
        debugger;
        try {

            var date = $('#txtic_invoicedate').val();
            $('#txtValidity').val(date);
            var valid = save_validate();
            if (valid == "") {
                if ($("#hdn_invoice_rowid").val() == "" || $("#hdn_invoice_rowid").val() == undefined) {
                    $("#hdn_invoice_rowid").val(0);
                }

                if ($("#hdn_mode_flag").val() == "S") {
                    $("#hdn_mode_flag").val('U');
                }

                var grid = $("#grid_invoice").data("kendoGrid");
                var gridData = grid.dataSource.view();

                $('#cmb_rec_Loca').data("kendoComboBox").enable(true);
                var formval = form_Serialize("Purchase_form");
                $('#cmb_rec_Loca').data("kendoComboBox").enable(false);

                var obj_val = JSON.parse(formval);
                if (obj_val.hasOwnProperty('In_po_date')) {
                    if (obj_val.In_po_date != '')
                        obj_val.In_po_date = getFormated_StringDate(obj_val.In_po_date);
                }
                var rowtime_date = new Date();

                if (obj_val.In_row_timestamp == undefined || obj_val.In_row_timestamp == "") {
                    obj_val.In_row_timestamp = "2018-04-05";
                }

                if (obj_val.In_po_rowid == undefined || obj_val.In_po_rowid == "") {
                    obj_val.In_po_rowid = 0;
                }
                else {
                    obj_val.In_po_rowid = parseInt(obj_val.In_po_rowid);
                }
                if (obj_val.IOU_po_rowid == undefined || obj_val.IOU_po_rowid == "") {
                    obj_val.IOU_po_rowid = 0;
                }
                if (obj_val.IOU_PO_No == undefined || obj_val.IOU_PO_No == "") {
                    obj_val.IOU_PO_No = "";
                }
                if (obj_val.IOU_ErroNo == undefined || obj_val.IOU_ErroNo == "") {
                    obj_val.IOU_ErroNo = "";
                }
                if (obj_val.In_bill_attachment == "") {
                    obj_val.In_bill_attachment = $("#txtImageHidden").val();
                }
                //Added by Prema for buyer name in edit issue//
                if (obj_val.In_mode_flag == "U") {
                    debugger;
                    var buyer_name = obj_val.In_buyer_code;
                    obj_val.In_buyer_name = buyer_name;
                }
                //invoice details
                var grid_val = JSON.stringify($("#grid_invoice").data().kendoGrid._data);
                var Bind = {};
                Bind = grid_val;
                var result = JSON.parse(Bind);
                var isvalid = false;
                $.each(result, function (index, value) {

                    var row_id = value.In_podtl_rowid;
                    if (row_id == undefined || row_id == "") {
                        result[index].In_podtl_rowid = 0;
                    }
                    else {
                        result[index].In_podtl_rowid = parseInt(result[index].In_podtl_rowid);
                    }
                    var IOU_POdtl_rowid = value.IOU_podtl_rowid;
                    if (IOU_POdtl_rowid == undefined || IOU_POdtl_rowid == "") {
                        result[index].IOU_podtl_rowid = 0;
                    }

                    if (result[index].In_product_code == undefined || result[index].In_product_code == "") {
                        result[index].In_product_code = value.product_code;
                    }
                    var In_qty = parseFloat(value.In_qty);
                    result[index].In_qty = In_qty;
                    var In_rate = parseFloat(value.In_rate);
                    result[index].In_rate = In_rate;
                    var In_product_amount = parseFloat(value.In_product_amount);
                    result[index].In_product_amount = In_product_amount;
                    var In_tax_amount = parseFloat(value.In_tax);
                    result[index].In_tax = In_tax_amount;
                    var In_tax_rate = parseFloat(value.In_tax_rate);
                    result[index].In_tax_rate = In_tax_rate;
                    var nwtamount = parseFloat(value.In_gross_amount);

                    result[index].In_othercharges = 0;
                    var In_discount = parseFloat(value.In_discount);

                    result[index].In_discount = In_discount;
                    if (nwtamount != "") {
                        result[index].In_gross_amount = nwtamount;
                    }
                    result[index].In_status_code = "A";
                    var mmode = result[index].In_mode_flag;
                    if (mmode == "S") {
                        result[index].In_mode_flag = "U";
                    }
                    var ShipDetail = value.ShipDetail;
                    if (ShipDetail == undefined || ShipDetail == "") {
                        result[index].ShipDetail = [];
                    }
                    else
                        if (ShipDetail != "") {
                            result[index].ShipDetail = JSON.parse(ShipDetail);
                        }
                    var qty = result[index].In_qty;
                    if (qty > 0) {
                        isvalid = true;
                    }
                    else {
                        isvalid = false;
                        kendoAlert("Check The Quantity of the Product" + result[index].product_desc);
                        return;
                    }

                });
                var obj_tax_val1 = result;

                //var grid_val3 = JSON.stringify($("#grid_attachment").data().kendoGrid._data);
                //var Bind1 = {};
                //Bind1 = grid_val3;
                //var result3 = JSON.parse(Bind1);
                //$.each(result3, function (index, value) {
                //    var In_attch_rowid = value.In_attch_rowid;
                //    if (In_attch_rowid == undefined || In_attch_rowid == '') {
                //        result3[index].In_attch_rowid = 0;
                //    }
                //    else {
                //        result3[index].In_attch_rowid = parseInt(result3[index].In_attch_rowid);
                //    }
                //    var IOU_attch_rowid = value.IOU_attch_rowid;
                //    if (IOU_attch_rowid == undefined || IOU_attch_rowid == '') {
                //        result3[index].IOU_attch_rowid = 0;
                //    }
                //    var d = value.In_attch_date;
                //    var date = kendo.parseDate(d);
                //    var value1 = kendo.toString(date, "yyyy-MM-dd");
                //    result3[index].In_attch_date = value1;

                //    var mode_flag = value.In_mode_flag;
                //    if (mode_flag == undefined || mode_flag == '') {
                //        result3[index].In_mode_flag = "I";
                //    }
                //    var attachFile = value.In_attch_upload;
                //    if (attachFile == undefined || attachFile == '') {
                //        result3[index].In_attch_upload = "";
                //    }
                //});

                //var obj_grid_val3 = result3;

                var data = {};
                data.context = getContext();
                data.context.Header = obj_val;
                data.context.QtyDetail = obj_tax_val1;
                //  data.context.AttchDetail = obj_grid_val3;

                var Context = data.context;
                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, QtyDetail: Context.QtyDetail, AttchDetail: Context.AttchDetail }),
                    url: "/PAWHSNEWPurchaseOrder/POSave",
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        var Res = JSON.parse(response);
                        if (Res.context != null && Res.applicationException.errorNumber == '' || Res.applicationException.errorNumber == null) {
                            var mode = $("#hdn_mode_flag").val();
                            if (mode == "I") {
                                kendoAlert("PO Details saved successfully");
                                get_Invoice_details(Res.context.header);
                                $('#divCreate #btnSave').prop('disabled', true);

                            }
                            else if (mode == "D") {
                                kendoAlert("PO Details inactivate successfully");
                                get_Invoice_details(Res.context.header);
                            }
                            else {
                                kendoAlert("PO Details updated successfully");
                                get_Invoice_details(Res.context.header);
                                $('#divEdit #btnSaveEd').prop("disabled", true);

                            }

                        }
                        else {
                            kendoAlert(Res.applicationException.errorDescription);
                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });
            }
            else {
                kendoAlert(valid);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_Invoice_header(res) {
        debugger;
        try {
            $("#txtinvoice_rowid").val(res.IOU_PO_rowid);
            $("#txtpwnew_pono").val(res.IOU_PO_No);
            $('#txtfarcusname').data("kendoComboBox").value(res.In_buyer_name);
            //$("#txtfarcusname").val(res.In_buyer_name);
            $("#buyer_code").val(res.In_buyer_code);
            fetch_loc();
            $("#txtpwnew_podate").val(res.In_po_date);
            $("#cmb_rec_Loca").val(res.In_buyer_location);
            $("#cmb_rec_Loca").val(res.In_buyer_location_desc);
            $('#cmb_cus_type').val(res.In_po_remarks);
            $("#DocStat").val(res.In_status_code);
            $("#hdn_mode_flag").val(res.In_mode_flag);

            $("#txtOrderBy").val(res.In_OrderBy);
            $("#txtOrderbyNo").val(res.In_OrderByNO);
            $("#txtTakenBy").val(res.In_TakenBy);
            $("#txtTakenByNo").val(res.In_TakenByNo);
            var profiledata = res.In_bill_attachment
            $("#txtImageHidden").val(res.In_bill_attachment);
            if (profiledata != "")
                document.getElementById("Bill_img").src = "data:image/png;base64," + profiledata;
            else
                document.getElementById("Bill_img").src = "/images/noimage.png";
        }


        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_Invoice_QtyDetail(res) {
        try {
            if (res != null) {

                var data = changedataType(res.QtyDetail);
                var datatax = changedataType(res.TaxDetail);




                for (var i = 0; i < data.length; i++) {

                    data[i].In_qty = (parseFloat(data[i].In_qty)).toFixed(2);
                    data[i].In_rate = (parseFloat(data[i].In_rate)).toFixed(2);
                    data[i].In_product_amount = (parseFloat(data[i].In_product_amount)).toFixed(2);
                    data[i].In_discount = (parseFloat(data[i].In_discount)).toFixed(2);
                    data[i].In_gross_amount = (parseFloat(data[i].In_gross_amount)).toFixed(2);
                    data[i].In_tax = (parseFloat(data[i].In_tax)).toFixed(2);
                    data[i].In_tax_rate = (parseFloat(datatax[i].In_tax_rate)).toFixed(2);
                    data[i].product_code = datatax[i].In_product_code
                    data[i].In_product_name = datatax[i].In_product_Name
                    data[i].In_hsn_code = datatax[i].In_hsn_code
                    data[i].In_hsn_desc = datatax[i].In_hsn_desc
                    data[i].In_cgst_rate = (parseFloat(datatax[i].In_cgst_rate)).toFixed(2);
                    data[i].In_sgst_rate = (parseFloat(datatax[i].In_sgst_rate)).toFixed(2);
                    data[i].In_ugst_rate = (parseFloat(datatax[i].In_ugst_rate)).toFixed(2);
                    data[i].In_sugst_rate = (parseFloat(datatax[i].In_sugst_rate)).toFixed(2);
                    data[i].In_igst_rate = (parseFloat(datatax[i].In_igst_rate)).toFixed(2);

                    var data1 = {};
                    data1.context = getContext();
                    var tran_rowid = data[i].In_podtl_rowid;
                    var Context = data1.context;
                    $.ajax({
                        type: "POST",
                        data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, In_podtl_rowid: tran_rowid }),
                        url: "/PAWHSNEWPurchaseOrder/POshipmentFetch",
                        dataType: "json",
                        contentType: 'application/json; charset-utf-8;',
                        success: function (response) {

                            if (response.context != null) {
                                var k = i - 1;
                                data[k].ShipDetail = JSON.stringify(response.context.ShipDetail);
                                i = k
                            }
                            gridinvoice(data);
                        }
                    });


                }

                gridinvoice(data);
            }
            else {
                gridinvoice([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_Invoice_InvoiceTax(res) {

        try {
            if (res != null) {
                var data = changedataType(res);
                //  setlocalStorage("tax_data", data);
                res.In_tax_amount = data.In_tax;
                for (var i = 0; i < data.length; i++) {
                    data[i].In_cgst_rate = (parseFloat(data[i].In_cgst_rate)).toFixed(2);
                    data[i].In_sgst_rate = (parseFloat(data[i].In_sgst_rate)).toFixed(2);
                    data[i].In_ugst_rate = (parseFloat(data[i].In_ugst_rate)).toFixed(2);
                    data[i].In_igst_rate = (parseFloat(data[i].In_igst_rate)).toFixed(2);
                    data[i].In_tax_rate = (parseFloat(data[i].In_tax_rate)).toFixed(2);
                    data[i].In_taxable_amount = (parseFloat(data[i].In_taxable_amount)).toFixed(2);
                    data[i].In_tax_amount = (parseFloat(data[i].In_tax_amount)).toFixed(2);

                }

                gridtax(data);

            }
            else {
                gridtax([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_Invoice_Attachmentdtl(res) {

        try {
            if (res != null) {
                var data = changedataType(res);

                gridattachment(data);

            }
            else {
                gridattachment([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function get_Invoice_details(Res) {

        var formval = form_Serialize("Purchase_form");
        var obj_val = JSON.parse(formval);
        obj_val.ioU_PO_rowid = Res.ioU_po_rowid;
        obj_val.ioU_PO_no = Res.ioU_PO_No;
        var orgcode = getlocalStorage('org_id');
        obj_val.IOU_agg_code = orgcode;
        var data = {};
        data.context = getContext();
        data.context.Header = obj_val;
        var Context = data.context;
        $.ajax({
            type: "POST",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, IOU_PO_rowid: Context.Header.ioU_PO_rowid, IOU_PONO: Context.Header.ioU_PO_no, IOU_agg_code: orgcode }),
            url: "/PAWHSNEWPurchaseOrder/PurchaseOrderfetch",
            dataType: "json",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {

                if (response.context != null) {
                    generate_Invoice_header(response.context.Header);
                    generate_Invoice_QtyDetail(response.context);
                    generate_Invoice_Attachmentdtl(response.context.AttchDetail);
                    enable();
                }
                else {

                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }

        });

    }
    function generate_Invoice_PaymentCollection(res) {
        enable();
    }
    function save_validate() {
        debugger;
        var validate_msg = "";
        var PO_NO = $('#txtpwnew_pono').val();
        var PO_Date = $('#txtpwnew_podate').val();

        if (PO_NO == '' || PO_NO == undefined) {
            validate_msg += "PO Number cannot be blank<br>"
        }
        if ($('#txtfarcusname').val() == '' || $('#txtfarcusname') == undefined) {
            validate_msg += "Buyer name cannot be blank<br>"
        }
        if (PO_Date == '' || PO_Date == undefined) {
            validate_msg += "Purchase Order date cannot be blank<br>"
        }
        var cus_type = $('#cmb_rec_Loca').data('kendoComboBox').value();
        if (cus_type == '' || cus_type == undefined) {
            validate_msg += "Kindly Select the Buyer Location<br>"
        }
        var grid_val = JSON.stringify($("#grid_invoice").data().kendoGrid._data);
        var Bind = {};
        Bind = grid_val;
        var result = JSON.parse(Bind);
        if (result.length == 0) {
            validate_msg += "Atleast one record needs to be entered";
        }
        $.each(result, function (key, value) {
            if (value.In_qty == "" || value.In_qty == undefined) {
                validate_msg += "Product Quantity cannot be blank <br>";
            }

            if (value.In_product_amount == "" || value.In_product_amount == undefined) {
                validate_msg += "Rate cannot be blank <br>";
            }
            if (value.In_tax == "" || value.In_tax == undefined) {
                validate_msg += "Tax cannot be blank <br>";
            }
            //if (value.In_gross_amount == "" || value.In_gross_amount == undefined) {
            //    validate_msg += "Cost cannot be blank <br>";
            //}
        });
        return validate_msg;
    }

</script>
<script>
    function generate_productlist_list(res) {
        if (res != null) {
            var data = changedataType(res);
            gridinvoice(data);
            gridtax(data);
        }
        else {
            gridinvoice([]);
            gridtax([]);
        }
    }
</script>
<script>
    function shipment(e, dataItem, grid) {

        $("#dialog").kendoWindow();
        var dialog = $("#dialog").data("kendoWindow");
        dialog.open().element.closest(".k-window").css({
            top: 121,
            left: 300, height: 400, width: 900
        });
        dialog.title("Shipment Details");
        dialog.bind("open", shipment);
        $("#shipment_uid").val(dataItem.uid);
        $("#product_code").val(dataItem.product_code);
        $("#btnsaveShipment").show();
        if (dataItem.In_podtl_rowid != "" && dataItem.unique_id == undefined || dataItem.unique_id == undefined) {
            var data = {};
            data.context = getContext();
            var tran_rowid = dataItem.In_podtl_rowid;

            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, In_podtl_rowid: tran_rowid }),
                url: "/PAWHSNEWPurchaseOrder/POshipmentFetch",
                dataType: "json",
                contentType: 'application/json; charset-utf-8;',
                success: function (response) {

                    if (response.context != null) {
                        var data = changedataType(response.context.ShipDetail);
                        grid_shipment(data);
                    }
                }
            });
        } else
            if (dataItem.unique_id == "" && dataItem.In_podtl_rowid == "" || dataItem.In_podtl_rowid == undefined) {

                grid_shipment([]);
            }
            else {
                var data = JSON.parse(dataItem.ShipDetail);
                grid_shipment(data);
            }
    }
    function shipmentView(e, dataItem, grid) {

        $("#dialog").kendoWindow();
        var dialog = $("#dialog").data("kendoWindow");
        dialog.open().element.closest(".k-window").css({
            top: 121,
            left: 300, height: 400, width: 900
        });
        dialog.title("Shipment Details");
        dialog.bind("open", shipment);
        $("#btnsaveShipment").hide();
        if (dataItem.In_podtl_rowid != "" && dataItem.unique_id == undefined || dataItem.unique_id == undefined) {
            var data = {};
            data.context = getContext();
            var tran_rowid = dataItem.In_podtl_rowid;

            var Context = data.context;
            $.ajax({
                type: "POST",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, In_podtl_rowid: tran_rowid }),
                url: "/PAWHSNEWPurchaseOrder/POshipmentFetch",
                dataType: "json",
                contentType: 'application/json; charset-utf-8;',
                success: function (response) {

                    if (response.context != null) {
                        var data = changedataType(response.context.ShipDetail);
                        grid_shipment(data);
                    }
                }
            });
        } else {
            var data = JSON.parse(dataItem.ShipDetail);
            grid_shipment(data);
        }



    }
</script>

<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }



    span.k-widget.k-combobox.k-header.form-control {
        width: 100% !important;
    }

    span.k-widget.k-datepicker.k-header.cusDate {
        width: 100% !important;
    }


    span.k-widget.k-combobox.k-header {
        width: 100% !important;
    }
</style>

