@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>RepaymentModeMaintenance</title>
</head>
<body>
    <form class="form-horizontal" id="frm_repaymain" data-role="validator" novalidate="novalidate">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title">RepaymentModeMaintenance</h4>
        </div>
        <div class="modal-header" style="height:49px">
            <div class="col-sm-12" style="margin-top:-7px">
                <div class="form-group" style="padding-bottom:10px">
                    <div class="col-sm-3">
                        <button type="button" class="btn btn-sm btn-primary" id="btnsave" onclick="validate('save')" style="width:85px">
                            Save
                        </button>
                        <button type="button" class="btn btn-sm btn-primary" id="btnClose" onclick=closeModal(); style="width:85px">
                            Cancel
                        </button>
                    </div>
                    <div class="col-sm-3">

                    </div>
                    <div class="col-sm-10">
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-body" style="height:550px">
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-12">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label for="cmb_repaymode" class="col-sm-3 control-label ">Repayment Mode</label>
                            <div class="col-sm-5">
                                <input id="cmb_repaymode" data-role="filtercombo" name="payment_mode" style="width:100%" />
                            </div>
                        </div>
                    </div>
                    <input type="hidden" id="txtloan_no" name="loan_no" class="form-control" maxlength="10">
                    <div class="col-sm-4" id="div_start">
                        <div class="form-group">
                            <label for="txt_start_date" class=" col-md-3 control-label required">Start Date:</label>
                            <div class=" col-sm-5">
                                <input class="cusDate" data-role='datepicker' id="txt_start_date" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="start_date" style="width:100%" />
                                <span data-for='valid' class='k-invalid-msg'></span>
                            </div>

                        </div>
                    </div>
                    <div class="col-sm-4" id="div_end">
                        <div class="form-group">
                            <label for="txt_end_date" class=" col-md-3 control-label required">End Date:</label>
                            <div class=" col-sm-5">
                                <input class="cusDate" data-role='datepicker' id="txt_end_date" onkeypress="return date_validate(event)" data-checkdate-msg="Enter Valid Date" name="end_date" style="width:100%" />
                                <span data-for='valid' class='k-invalid-msg'></span>
                            </div>
                            <button title="" data-placement="top" data-toggle="tooltip" class="btn btn-info" type="button" data-original-title="Refresh" onclick="validate('fetch')"> <span class="glyphicon glyphicon-refresh"></span></button>
                        </div>
                    </div>
                </div>
                <div class="col-sm-12" id="div_chq">
                    <button type="button" class="btn btn-sm btn-primary" id="btnClose" onclick="addnew();" style="width:85px">
                        Add
                    </button>
                </div>
                <div class="col-sm-12" id="div_chk">
                    <div id="grid_cheque"></div>
                </div>
                <div class="col-sm-6" id="div_nach">
                    <div id="grid_nach"></div>
                </div>

            </div>
        </div>
    </form>
</body>
</html>
<style>
    .breadcrumb > li + li:before {
        color: #E6E6E6;
    }
</style>
<script src="~/API_Scripts/FLRepaymentMaintenance_retrieveFLRepayment_Maintenance_APIClient.js"></script>
<script src="~/API_Scripts/FLRepaymentMaintenance_retrieveFLRepayment_Mode_APIClient.js"></script>
<script src="~/API_Scripts/FLRepaymentMaintenance_retrieveFLRepayment_Schedule_APIClient.js"></script>
<script src="~/API_Scripts/FLRepaymentMaintenance_saveFLRepayment_Maintenance_APIClient.js"></script>
<script src="~/API_Scripts/FLRepaymentMaintenance_saveFLRepayment_Mode_APIClient.js"></script>
<script src="~/API_Scripts/retrieveFLRepayment_Maintenance_Model.js"></script>
<script src="~/API_Scripts/retrieveFLRepayment_Mode_Model.js"></script>
<script src="~/API_Scripts/retrieveFLRepayment_Schedule_Model.js"></script>
<script src="~/API_Scripts/saveFLRepayment_Maintenance_Model.js"></script>
<script src="~/API_Scripts/saveFLRepayment_Mode_Model.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/API_Scripts/FlRepaymentmaintance.js"></script>
<script>
    $(document).ready(function () {
        debugger;
        kendodate_format();
        Screen_Id = "FLREPAY";
        permission = sec_Permission(Screen_Id);
        var container = $("#frm_repaymain");
        kendo.init(container);
        container.kendoValidator({
            rules: {
                checkdate: function (input) {
                    if (input.attr("data-role") == "datepicker") {
                        var res = isDate(input.val());
                        return res;
                    }
                    else {
                        return true;
                    }
                }
            }
        });
        $('#repaymentMainModal').on('hidden.bs.modal', function () {
            $('#repaymentMainModal').removeData();
        });

        var combo_data1 = "";
        $("#cmb_repaymode").empty();
        combo_data1 = grid_comboScreen_mastercodes("QCD_FL_Repaymode");
        filter_combobox("cmb_repaymode", combo_data1);

        var lan = getlocalStorage('loan_no');
        $("#txtloan_no").val(lan);
        console.log(lan);
        if (lan == '' || lan == undefined) {
            closeModal();
            kendoAlert('Please Select any Loan');
        }
        var click_count = 0;
        $("#txt_start_date").kendoDatePicker({
            //max: new Date(),// sets max date
            format: "dd/MM/yyyy"
        });
        $("#txt_end_date").kendoDatePicker({
            // max: new Date(),// sets max date
            format: "dd/MM/yyyy"
        });
        var sd = getlocalStorage("start_date");
        var ed = getlocalStorage("start_date");

        $("#txt_start_date").val(sd);
        $("#txt_end_date").val(ed);

    });
    $("#div_nach").hide();
    $("#div_chk").hide();
    $("#div_start").hide();
    $("#div_end").hide();
    $("#div_chq").hide();
    function closeModal() {
        $('#repaymentMainModal').modal("hide");
    }

</script>
<script>
    function load_master_code() {
        var data = {};
        data.screen_Id = "FLREPAY";
        var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
    }
</script>

<script>
    $(function () {
        $("#cmb_repaymode").change(function () {
            debugger;
            var val = $('#cmb_repaymode').data("kendoComboBox").value();
            if (val == "QCD_FL_CHEQUE") {
                grid_cheque();
                grid_nach([]);
                click_count = 0;
                $("#div_chk").show();
                $("#div_nach").hide();
                $("#div_start").hide();
                $("#div_end").hide();
                $("#div_chq").show();
            }
            if (val == "QCD_FL_NACH") {
                debugger;
                $("#div_nach").show();
                $("#div_chk").hide();
                grid_nach();
                grid_cheque([]);
                $("#div_start").show();
                $("#div_end").show();
                $("#div_chq").hide();
            }
            if (val == "QCD_FL_Cash") {
                debugger;
                $("#div_nach").show();
                $("#div_chk").hide();
                grid_nach();
                grid_cheque([]);
                $("#div_start").show();
                $("#div_end").show();
                $("#div_chq").hide();
            }
        });
    });
</script>

<script>
    function grid_nach(data) {
        $("#grid_nach").kendoGrid(
               {
                   dataSource: {
                       data: data,
                       schema: {
                           model: {
                               fields: {
                                   chq_no: { type: "string" },
                                   chq_date: { type: "date" },
                                   chq_amount: { type: "string", defaultValue: "0" },
                                   instalment_date: { type: "date", editable: false },
                                   instalment_amount: { type: "string", editable: false, defaultValue: "0" },
                                   duepayment_date: { type: "date" },
                                   box_no: { type: "string" },
                                   status_code: { type: "string" },
                                   status_desc: { type: "string" },
                                   mode_flag: { type: "string", defaultValue: "I" }
                               }
                           }
                       }
                   },
                   height: 400,
                   groupable: false,
                   dataBinding: setDefaultValues,

                   dataBound: function (e) {
                       resultData = e.sender._data;
                       var rows = $('#grid_nach').data('kendoGrid').tbody.children();
                       setColor(rows, resultData);
                       e.preventDefault();
                   },
                   sortable: true,
                   selectable: true,
                   navigatable: true,
                   columns: [
                    {
                        field: "chq_no",
                        title: "Cheque No",
                        width: 1,
                        hidden: true

                    },
                    {
                        field: "chq_date",
                        title: "Cheque Date",
                        width: 1,
                        format: "{0:dd/MM/yyyy}",
                        hidden: true
                    },
                    {
                        field: "chq_amount",
                        title: "Cheque Amount",
                        width: 1,
                        hidden: true
                    },
                    {
                        field: "instalment_date",
                        title: "Instalment Date",
                        width: 100,
                        format: "{0:dd/MM/yyyy}",
                    },


                    {
                        field: "instalment_amount",
                        title: "Instalment Amount",
                        width: 100,

                    },
                    {
                        field: "duepayment_date",
                        title: "Payment Date",
                        width: 100,
                        format: "{0:dd/MM/yyyy}",
                    },
                    {
                        field: "box_no",
                        title: "Box No",
                        width: 1,
                        hidden: true

                    },
                    {
                        field: "principle_amount",
                        title: "principle_amount",
                        width: 1,
                        hidden: true,

                    },
                 {
                     field: "interest_amount",
                     title: "interest_amount",
                     width: 1,
                     hidden: true,

                 },
                     {
                         field: "status_code",
                         title: "status_code",
                         width: 100,
                         hidden: true,

                     },

                   {
                       field: "status_desc",
                       title: "Status",
                       editor: function (container, options) {
                           combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "status_code", "grid_nach")
                       },
                       width: 100,
                       hidden: true
                   },
                   {
                       field: "mode_flag",
                       title: "mode_flag",
                       width: 1,
                       hidden: true,

                   },
                   ],
                   editable: true
               });
    }
</script>
<script>
    //var click_count = 0;
    var status_desc_list = "";
    function grid_cheque(data) {
        try {
            $("#grid_cheque").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                chq_no: { type: "string", validation: { required: { message: "Cheque No cannot be blank" } } },
                                chq_date: { type: "date", validation: { required: { message: "Cheque Date cannot be blank" } } },
                                chq_amount: { type: "string", validation: { required: { message: "Cheque Amount cannot be blank" } } },
                                //instalment_date: { type: "string", editable: false },
                                instalment_date: { type: "date", editable: false },
                                instalment_amount: { type: "string", editable: false },
                                duepayment_date: { type: "date" },
                                box_no: { type: "string", validation: { required: { message: "Box No cannot be blank" } } },
                                status_code: { type: "string" },
                                status_desc: { type: "string" },
                                principle_amount: { type: "string", defaultValue: "0" },
                                principle_amount: { type: "string", defaultValue: "0" },
                                mode_flag: { type: "string", defaultValue: "I" }
                            }
                        }
                    }
                },
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_cheque').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                    e.preventDefault();
                },
                sortable: true,

                selectable: true,
                navigatable: true,
                columns: [
                 {
                     field: "chq_no",
                     title: "Cheque No",
                     width: 100,

                 },
                 {
                     field: "chq_date",
                     title: "Cheque Date",
                     width: 100,
                     format: "{0:dd/MM/yyyy}",
                 },
                 {
                     field: "chq_amount",
                     title: "Cheque Amount",
                     width: 100
                 },
                 {
                     field: "instalment_date",
                     title: "Instalment Date",
                     width: 100,
                     format: "{0:dd/MM/yyyy}",
                 },


                 {
                     field: "instalment_amount",
                     title: "Instalment Amount",
                     width: 100,

                 },
                 {
                     field: "duepayment_date",
                     title: "Payment Date",
                     width: 100,
                     format: "{0:dd/MM/yyyy}",
                 },
                 {
                     field: "box_no",
                     title: "Box No",
                     width: 100,

                 },
                 {
                     field: "principle_amount",
                     title: "principle_amount",
                     width: 1,
                     hidden: true,

                 },
                 {
                     field: "interest_amount",
                     title: "interest_amount",
                     width: 1,
                     hidden: true,

                 },
                  {
                      field: "status_code",
                      title: "status_code",
                      width: 1,
                      hidden: true,

                  },

                {
                    field: "status_desc",
                    title: "Status",
                    editor: function (container, options) {
                        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "status_code", "grid_cheque")
                    },
                    width: 100,

                },
                {
                    field: "mode_flag",
                    title: "mode_flag",
                    width: 1,
                    hidden: true,

                },
                ],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }
    load_master_code();
    status_desc_list = grid_comboScreen_mastercodes("QCD_FL_PayChq");
</script>

<script>
    function retrieve_FLRepayment_Mode(paymode, count) {
        debugger;
        var formval = form_Serialize("frm_repaymain");
        var obj_val = JSON.parse(formval);
        var repay_mode = $('#cmb_repaymode').data("kendoComboBox").value();
        setlocalStorage("pay_type", paymode);
        if (obj_val != undefined) {
            obj_val.loan_no = $("#txtloan_no").val();
            obj_val.payment_mode = repay_mode + '/' + paymode + ',' + count;
            if (repay_mode == 'QCD_FL_CHEQUE') {
                obj_val.start_date = '0';
                obj_val.end_date = '0';
            }
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!

            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }

            var today = yyyy + '/' + mm + '/' + dd;
            //alert(today);
            //document.getElementById("DATE").value = today;
            if (repay_mode == 'QCD_FL_NACH') {
                debugger;
                var sd = getlocalStorage("start_date");
                var ed = getlocalStorage("end_date");
                $("#txt_start_date").val(sd);
                $("#txt_end_date").val(ed);

                //if ($("#txt_start_date").val() != '' && $("#txt_start_date").val() != undefined && $("#txt_start_date").val() != '0') {
                //    obj_val.start_date = getFormated_StringDate($("#txt_start_date").val());
                //}
                //else {

                //    //obj_val.start_date = today;
                //    $("#txt_start_date").val() = sd;
                //}
                //if ($("#txt_end_date").val() != '' && $("#txt_end_date").val() != undefined && $("#txt_end_date").val() != '0') {
                //    obj_val.end_date = getFormated_StringDate($("#txt_end_date").val());
                //}
                //else {
                //    //obj_val.end_date = today;
                //    $("#txt_end_date").val() = ed;
                //}
            }

            if (repay_mode == 'QCD_FL_Cash') {
                debugger;
                if ($("#txt_start_date").val() != '' && $("#txt_start_date").val() != undefined && $("#txt_start_date").val() != '0') {
                    obj_val.start_date = getFormated_StringDate($("#txt_start_date").val());
                }
                else {
                    obj_val.start_date = today;
                }
                if ($("#txt_end_date").val() != '' && $("#txt_end_date").val() != undefined && $("#txt_end_date").val() != '0') {
                    obj_val.end_date = getFormated_StringDate($("#txt_end_date").val());
                }
                else {
                    obj_val.end_date = today;
                }
            }
            var data_fetch = {};
            data_fetch.context = WebAPIProxy.getContext();
            data_fetch.context.Header = obj_val;
            retrieve_FLRepayment_Mode_details(data_fetch);
        }
    }
    function generate_FLRepayment_Mode_header(res) {
        try {
            if (res != null) {
                //console.log(res);
                debugger;
                $("#txtloan_no").val(res.loan_no);
                var fromDate = res.start_date;
                if (fromDate.includes("/")) {
                    fromDate = fromDate.split('/').reverse().join('/');
                }
                if (fromDate.includes("-")) {
                    fromDate = fromDate.split('-').reverse().join('-');
                    fromDate = fromDate.replace(/-/g, "/");
                }
                var sd = getlocalStorage("start_date");
                var ed = getlocalStorage("end_date");
                $("#txt_start_date").val(sd);
                $("#txt_end_date").val(ed);
                //$("#txt_start_date").val(fromDate);
                //var toDate = res.end_date;
                //if (toDate.includes("/")) {
                //    toDate = toDate.split('/').reverse().join('/');
                //}
                //if (toDate.includes("-")) {
                //    toDate = toDate.split('-').reverse().join('-');
                //    toDate = toDate.replace(/-/g, "/");
                //}
                //var enddate = new Date();
                //var ddd = enddate.getDate();
                //var mmm = enddate.getMonth() + 1; //January is 0!
                //var yyyy = enddate.getFullYear();

                //if (ddd < 10) {
                //    ddd = '0' + ddd
                //}

                //if (mmm < 10) {
                //    mmm = '0' + mmm
                //}

                //enddate = ddd + '/' + mmm + '/' + yyyy;
                ////alert(enddate);
                //$("#txt_end_date").val(enddate);
                setlocalStorage("repay_mode", res.payment_mode);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_FLRepayment_Mode_Detail(res) {
        try {
            debugger;
            var pay_mode = getlocalStorage('repay_mode');
            var pay_type = getlocalStorage('pay_type');

            if (res != null) {
                var data = changedataType(res);
                data.sort(function (obj1, obj2) {
                    return Date.parse(obj1.instalment_date) - Date.parse(obj2.instalment_date);
                });
                if (pay_mode == 'QCD_FL_CHEQUE') {
                    var ds = [];
                    var gridDataArray = $('#grid_cheque').data('kendoGrid')._data;
                    for (var index = 0; index < gridDataArray.length; index++) {
                        ds.push({ chq_no: gridDataArray[index].chq_no, chq_date: gridDataArray[index].chq_date, chq_amount: gridDataArray[index].chq_amount, instalment_date: gridDataArray[index].instalment_date, instalment_amount: gridDataArray[index].instalment_amount, duepayment_date: gridDataArray[index].duepayment_date, box_no: gridDataArray[index].box_no, principle_amount: gridDataArray[index].principle_amount, interest_amount: gridDataArray[index].interest_amount, status_code: gridDataArray[index].status_code, status_desc: gridDataArray[index].status_desc, mode_flag: gridDataArray[index].mode_flag });
                    }
                    grid_cheque(data);
                    var grid_newDataArray = $('#grid_cheque').data('kendoGrid')._data;
                    var ds_new = [];
                    for (var index = gridDataArray.length ; index < grid_newDataArray.length; index++) {
                        ds_new.push({ chq_no: grid_newDataArray[index].chq_no, chq_date: grid_newDataArray[index].chq_date, chq_amount: grid_newDataArray[index].chq_amount, instalment_date: grid_newDataArray[index].instalment_date, instalment_amount: grid_newDataArray[index].instalment_amount, duepayment_date: gridDataArray[index].duepayment_date, box_no: grid_newDataArray[index].box_no, principle_amount: grid_newDataArray[index].principle_amount, interest_amount: grid_newDataArray[index].interest_amount, status_code: grid_newDataArray[index].status_code, status_desc: grid_newDataArray[index].status_desc, mode_flag: grid_newDataArray[index].mode_flag });
                    }
                    var ds_1 = [];
                    ds_1 = ds.concat(ds_new);
                    grid_cheque(ds_1);
                }
                if (pay_mode == 'QCD_FL_NACH') {
                    grid_nach(data);
                }
                if (pay_mode == 'QCD_FL_Cash') {
                    grid_nach(data);
                }
            }
            else {
                if (pay_mode == 'QCD_FL_CHEQUE') {
                    grid_cheque([]);
                }
                if (repay_mode == 'QCD_FL_NACH') {
                    grid_nach([]);
                }
                if (repay_mode == 'QCD_FL_Cash') {
                    grid_nach([]);
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function save() {
        debugger;
        var formval = form_Serialize("frm_repaymain");
        var obj_val = JSON.parse(formval);

        var repymnt_mode = $('#cmb_repaymode').data('kendoComboBox').value();
        if (repymnt_mode == 'QCD_FL_NACH') {
            if (obj_val.hasOwnProperty('start_date')) {
                if (obj_val.start_date != '' && obj_val.start_date != undefined)
                    obj_val.start_date = getFormated_StringDate(obj_val.start_date);
            }
            if (obj_val.hasOwnProperty('end_date')) {
                if (obj_val.end_date != '' && obj_val.end_date != undefined)
                    obj_val.end_date = getFormated_StringDate(obj_val.end_date);
            }
        }
        if (repymnt_mode == 'QCD_FL_CHEQUE') {
            obj_val.start_date = '';
            obj_val.end_date = '';
        }
        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Header = obj_val;
        if (repymnt_mode == 'QCD_FL_CHEQUE') {
            click_count = 0;
            var grid_val = JSON.stringify($("#grid_cheque").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            $.each(result, function (index, value) {
                var cd_paydate = value.duepayment_date;
                var paydate = kendo.parseDate(cd_paydate);
                payvalue = kendo.toString(paydate, "MM/dd/yyyy");
                result[index].duepayment_date = payvalue;

                var cd_chq = value.chq_date;
                var date = kendo.parseDate(cd_chq);
                value = kendo.toString(date, "MM/dd/yyyy");
                result[index].chq_date = value;

                if ((result[index].instalment_date == null) || (result[index].instalment_date == "")) {
                    var d1 = new Date();
                    var date1 = kendo.parseDate(d1);
                    value = kendo.toString(date1, "MM/dd/yyyy");
                    result[index].instalment_date = value
                }
                else {
                    var d = result[index].instalment_date;
                    var date = kendo.parseDate(d);
                    value = kendo.toString(date, "MM/dd/yyyy");
                    result[index].instalment_date = value;
                }

                var mmode = result[index].mode_flag;
                if (mmode == "S") {
                    result[index].mode_flag = "U";
                }
            });
            var obj_grid_val = result;
            data.context.Detail = obj_grid_val;
        }
        if (repymnt_mode == 'QCD_FL_NACH') {
            var grid_val1 = JSON.stringify($("#grid_nach").data().kendoGrid._data);
            var Bind1 = {};
            Bind1 = grid_val1;
            var result1 = JSON.parse(Bind1);
            $.each(result1, function (index, value) {
                var nc_paydate = value.duepayment_date;
                var npaydate = kendo.parseDate(nc_paydate);
                value = kendo.toString(npaydate, "MM/dd/yyyy");
                result1[index].duepayment_date = value;

                result1[index].chq_date = '';
                if ((result1[index].instalment_date == null) || (result1[index].instalment_date == "")) {
                    var n_d1 = new Date();
                    var n_date1 = kendo.parseDate(n_d1);
                    value = kendo.toString(n_date1, "MM/dd/yyyy");
                    result1[index].instalment_date = value
                }
                else {
                    var n_d = result1[index].instalment_date;
                    var n_date = kendo.parseDate(n_d);
                    value = kendo.toString(n_date, "MM/dd/yyyy");
                    result1[index].instalment_date = value;
                }

                var mmode = result1[index].mode_flag;
                if (mmode == "S") {
                    result1[index].mode_flag = "U";
                }
            });
            var obj_grid_val1 = result1;
            data.context.Detail = obj_grid_val1;
        }

        save_FLRepayment_Mode_details(data);
    }
    function get_repay_details(res) {
        try {
            if (res != null) {
                obj_val.loan_no = res.loan_no;
                obj_val.payment_mode = res.payment_mode;
                obj_val.start_date = getFormated_StringDate(res.start_date);
                obj_val.end_date = getFormated_StringDate(res.end_date);
                var data_fetch = {};
                data_fetch.context = WebAPIProxy.getContext();
                data_fetch.context.Header = obj_val;
                retrieve_FLRepayment_Mode_details(data_fetch);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script>
    $("#cmb_repaymode").change(function () {
        var c = $('#cmb_repaymode');
        ddl = c.data('kendoComboBox').value();
        if (ddl != "" && ddl != undefined) {
            retrieve_FLRepayment_Mode('old', 0);
        }
    });

    function retrieveFLRepaymentMode() {
        retrieve_FLRepayment_Mode('new', 0);
    }

    function addnew() {
        //debugger;
        click_count = click_count + 1;
        retrieve_FLRepayment_Mode('new', parseInt(click_count));
    }

    function validate(type) {
        var mandatory_check = true;
        var pay_type = $('#cmb_repaymode');
        ddl_pay_type = pay_type.data('kendoComboBox').value();
        //var grid_val = JSON.stringify($("#grid_cheque").data().kendoGrid._data);
        //var Bind = {};
        //Bind = grid_val;
        //var result = JSON.parse(Bind);

        var grid_validate_msg = "";


        if (ddl == 'QCD_FL_CHEQUE') {
            var grid_val = JSON.stringify($("#grid_cheque").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            if (result.length == 0 && type == "save") {
                kendoAlert("Atleast one record needs to be entered");
                mandatory_check = false;
                return false;
            }
            $.each(result, function (key, value) {
                if (value.chq_no == "" || value.chq_no == undefined) {
                    grid_validate_msg += "Cheque no cannot be blank <br>";
                    mandatory_check = false;
                }
                if (value.chq_date == "" || value.chq_date == undefined) {
                    grid_validate_msg += "Cheque Date cannot be blank <br>";
                    mandatory_check = false;
                }
                if (value.chq_amount == "" || value.chq_amount == undefined) {
                    grid_validate_msg += "Cheque Amount be blank <br>";
                    mandatory_check = false;
                }
                if (value.box_no == "" || value.box_no == undefined) {
                    grid_validate_msg += "Box no be blank <br>";
                    mandatory_check = false;
                }
                if (mandatory_check == false) {
                    kendoAlert(grid_validate_msg);
                    return false;
                }
            });
        }
        if (ddl_pay_type != "" && ddl_pay_type != undefined) {
            if (ddl == 'QCD_FL_NACH') {
                if ($('#txt_start_date').val() == "" || $('#txt_start_date').val() == undefined) {
                    kendoAlert('Please Select the from date');
                    return false;
                }
                if ($('#txt_end_date').val() == "" || $('#txt_end_date').val() == undefined) {
                    kendoAlert('Please Select the end date');
                    return false;
                }
                if (type == "fetch") {
                    retrieveFLRepaymentMode();
                }
                if (type == "save") {
                    save();
                }
            }
            if (ddl == 'QCD_FL_CHEQUE') {
                if (mandatory_check == true) {
                    if (type == "save") {
                        save();
                    }
                }
            }
        }

    }
</script>
<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>