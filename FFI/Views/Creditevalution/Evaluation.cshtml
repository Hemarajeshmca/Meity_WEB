@{
    ViewBag.Form = "Credit Evaluation";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";
}
<style>
    .k-list .k-item {
        position: relative;
    }

    .k-item input {
        position: absolute;
        right: 0;
    }
</style>

<form id="Frm_Credit_Evaluation" class="form-horizontal">
    <div class="panel panel-default">
        <div class="panel-body" style="padding-top:6px;padding-bottom:2px">
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtmember_id" class="col-sm-5 control-label ">Member ID</label>
                        <div class="col-sm-6">
                            <input id="txtmember_id" type="text" value="" name="member_code" style="width: 100%" readonly>
                        </div>
                        @*<a data-toggle="modal"><span class="glyphicon glyphicon-search"></span></a>*@
                        <a class="HelpWindow fa fa-search fa-lg" role="button" id="pay_help1" data-toggle="modal" href="/HelpFilter/HelpFilter" hdrtitle="Farmer Details" searchid="S14" data-target="#HelpModal" onclick=transfer(this,"form","","form_control"); title="Search" style="font-size: 19px; margin-left: 0px; margin-top: 10px;"></a>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class=" form-group">
                        <label for="txtfarmer_code" class=" col-sm-5 control-label">Farmer Code</label>
                        <div class=" col-sm-6">
                            <input type="text" id="txtfarmer_code" name="farmer_code" class="form-control" maxlength="50" disabled>
                        </div>
                    </div>
                </div>


                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtfarmer_name" class="col-sm-5 control-label">Farmer Name</label>
                        <div class="col-sm-6">
                            <input type="text" id="txtfarmer_name" name="farmer_name" class="form-control" maxlength="50" disabled>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="cmb_loantype" class="col-sm-5 control-label required">Loan Type:</label>
                        <div class="col-sm-6">
                            <input id="cmb_loantype" value="" name="loan_type" style="width: 100%">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="cmb_loanAccno" class="col-sm-5 control-label required">Loan Account No:</label>
                        <div class="col-sm-6">
                            @*<input id="cmb_loanAccno" value="" style="width: 100%">*@
                            <select id="cmb_loanAccno" name="loan_no" multiple="multiple" style="width:100% ;height:50%"></select>
                            <script id="tagTemplate" type="text/x-kendo-template">
                                <span>
                                    #: desc #
                                    @*<input type="checkbox" data-bind="checked: checked" />*@
                                </span>
                            </script>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="cmb_loanqustn" class="col-sm-5 control-label required">Questionnaire Name:</label>
                        <div class="col-sm-6">
                            <input id="cmb_loanqustn" name="evaluationmap_id" value="" style="width: 100%">
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="padding-bottom:15px">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="txtcredit_rate" class="col-sm-5 control-label required">Credit Rating:</label>
                        <div class="col-sm-6">
                            <input type="text" id="txtcredit_rate" name="credit_rate" class="form-control" maxlength="50" disabled>
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="cmb_creditrate" class="col-sm-5 control-label required">Credit Rating:</label>
                        <div class="col-sm-6">
                            <input id="cmb_creditrate" name="credit_status_desc" value="" style="width: 100%">
                        </div>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="form-group">
                        <button title="" data-placement="top" data-toggle="tooltip" class="btn btn-info" type="button"
                                data-original-title="Refresh" onclick="mandatory()">
                            <span class="glyphicon glyphicon-refresh"></span>
                        </button>
                    </div>
                </div>
                <div class="col-xs-12">
                    @*<div id="gd_cr_evolve">*@
                    <div id="grid_cr_evolve">
                    </div>
                    @*</div>*@
                </div>
                <input type="hidden" id="creditevaluation_id">
                <input type="hidden" id="status_code">
                <input type="hidden" id="status_desc">
                <input type="hidden" id="row_timestamp">
                <input type="hidden" id="mode_flag">
            </div>

        </div>
    </div>
</form>
<script src="~/API_Scripts/CreditEvaluation.js"></script>
<script src="~/API_Scripts/Credit_evalution_retrieveCreditevalution_APIClient.js"></script>
<script src="~/API_Scripts/Credit_evalution_saveCreditevalution_APIClient.js"></script>
<script src="~/API_Scripts/retrieveCreditevalution_Model.js"></script>
<script src="~/API_Scripts/saveCreditevalution_Model.js"></script>
<script src="~/API_Scripts/UmoldITWebAPIProxy.js"></script>
<script src="~/CommonScripts/HelpFile.js"></script>
<script src="~/CommonScripts/Common_func.js"></script>
<script>
    var permission = "";
    $(document).ready(function () {
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $("#Frm_Credit_Evaluation");
        kendo.init(container);
        container.kendoValidator({
        });
        // $("#form_design").css("padding-top", "95px");
        $(".file_attach").attr("hdrtitle", "Evaluation");
        $(".notes").attr("hdrtitle", "Evaluation");
        $("#lblForm_menuid").text("FLEVAL");
        master_capital()
        kendodate_format();
        //load_master_code();
        var data = [];
        grid_cr_evolve_details(data);

        $("#bottom_menus").hide();
        $("#bottomFooter").show();
        mergeGridRows('#grid_cr_evolve', "Evalution catagery");

        //load_master_code('', '');
        load_combo();

        //$("#divScreen").click(function () {
        //    var values = $('#cmb_loanAccno').val();
        //    alert(values);

        //});

        $('#HelpModal').on('hide.bs.modal', function (e) {
            if ($("#txtmember_id").val() != undefined && $("#txtmember_id").val() != "") {
                fetch_loantype();
            }
        });
        var cmb_loantype = [];
        $("#cmb_loantype").empty();
        cmb_loantype = grid_comboScreen_mastercodes("QCD_LOANTYPE");
        filter_combobox("cmb_loantype", cmb_loantype);
        $("#cmb_loanAccno").kendoMultiSelect({
            dataSource: cmb_loantype,
            dataTextField: "desc",
            dataValueField: "desc",
            tagTemplate: kendo.template($("#tagTemplate").html()),
            change: function () {
                var dataItems = this.dataItems();

                this.tagList.children().each(function (index) {
                    kendo.bind(this, dataItems[index]);
                });

                //console.log(dataItems);
            }
        });


    });


</script>
<script>
    function load_master_code(member_id, loantype) {
        try {
            var data = {};
            if ((member_id == '' || member_id == undefined) && (loantype == '' || loantype == undefined)) {
                data.screen_Id = "FLEVAL";
            }
            else {
                if (member_id != '' && member_id != undefined) {
                    data.screen_Id = "FLEVAL" + " " + member_id;
                }
                if ((member_id != '' && member_id != undefined) && (loantype != '' && loantype != undefined)) {
                    data.screen_Id = "FLEVAL" + " " + member_id + "," + loantype;
                }
            }
            var tab_values = ajaxcall_param("/Home/screenId_mastercodelist", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


</script>
<script>
    function grid_cr_evolve_details(data) {
        $("#grid_cr_evolve").kendoGrid(
                {
                    dataSource: {
                        data: data,
                        schema: {
                            model: {
                                fields: {
                                    evalution_category_code: { type: "string" },
                                    evalution_category_desc: { type: "string", editable: false },
                                    parameter: { type: "string", editable: false },
                                    rating: { type: "string", editable: true },
                                    Weightage: { type: "string", editable: false },
                                    maxscore: { type: "string", editable: false },
                                    score: {
                                        type: "string", editable: true,
                                        //validation: {
                                        //    required: true,
                                        //    productnamevalidation: function (input) {
                                        //        var row = input.closest("tr");
                                        //        var grid = row.closest("[data-role=grid]").data("kendoGrid");
                                        //        var dataItem = grid.dataItem(row);
                                        //        if (input.is("[name='score']") && input.val() != "") {
                                        //            if (input.val() >= parseFloat(dataItem.maxscore)) {
                                        //                input.attr("data-productnamevalidation-msg", "Weightage should be less than or equal to Max Score");
                                        //                return false
                                        //            }
                                        //        }

                                        //        return true;
                                        //    },
                                        //}
                                    },
                                    mode_flag: { type: "string", defaultValue: "I" },
                                }
                            }
                        }
                    },
                    //toolbar: "<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>",
                    height: 300,
                    groupable: false,
                    dataBinding: setDefaultValues,

                    dataBound: function (e) {
                        resultData = e.sender._data;
                        var rows = $('#grid_cr_evolve').data('kendoGrid').tbody.children();
                        setColor(rows, resultData);
                        mergeGridRows('#grid_cr_evolve', "catagery");
                        var datalength = e.sender.dataSource.data().length;
                        var totalsum = 0;
                        if (datalength > 0) {
                            for (var i = 0; i < datalength; i++) {
                                totalsum += parseFloat(e.sender.dataSource.data()[i].rating);
                            }
                        }
                        $("#txtcredit_rate").val(totalsum);
                    },
                    save: function (data) {

                        if (parseFloat(data.values.score) > parseFloat(data.model.maxscore)) {
                            var test = data.model.set("rating",parseFloat(0));

                        }
                        else {
                            if (data.values.Weightage) {

                                var test = data.model.set("rating", ((parseFloat(data.values.weightage) * parseFloat(data.model.score)) / parseFloat(data.values.maxscore)).toFixed(2));
                            }
                            else {

                                var test = data.model.set("rating", ((parseFloat(data.model.weightage) * parseFloat(data.values.score)) / parseFloat(data.model.maxscore)).toFixed(2));
                            }


                        }
                      

                        //var datalength = data.sender.dataSource.data().length;
                        //var totalsum = 0;
                        //if (datalength > 0) {
                        //    for (var i = 0; i < datalength; i++) {
                        //        totalsum += parseFloat(data.sender.dataSource.data()[i].rating);

                        //        if (parseFloat(data.values.score) >= parseFloat(data.sender.dataSource.data()[i].maxscore)) {
                                    
                        //            if (data.values.score) {
                        //                 data.model.set("score", 0);
                        //            }
                        //            kendoAlert("Weightage Should Not Exceed Max Score");
                        //            return false
                        //        }
                        //    }
                        //}
                        //$("#txtcredit_rate").val(totalsum);
                    },
                    edit: OnEdit,
                    sortable: true,
                    //selectable: true,
                    navigatable: true,
                    columns: [
                                {
                                    field: "evaluationdtl_id",
                                    title: "evaluationdtl_id",
                                    hidden: true,
                                },
                                {
                                    field: "evalution_category_code",
                                    title: "evalution_category_code",
                                    hidden: true,
                                },
                                //{
                                //    field: "evalution_category_desc",
                                //    title: "Evalution catagery",
                                //    width: 100,
                                //    editor: function (container, options) {
                                //        combo_editor_man(container, "cmb_" + options.field, eval(options.field + "_list"), options.field, "evalution_category_code", "grid_cr_evolve")
                                //    },
                                //    footerTemplate: "Total"
                                // },
                                {
                                    field: "evalution_category_desc",
                                    title: "Evalution catagery",
                                    width: 100
                                },
                                {
                                    field: "evalution_parameter",
                                    title: "Questions",
                                    width: 100
                                },
                                {
                                    field: "weightage",
                                    title: "Weightage",
                                    width: 100,
                                    //footerTemplate: "100"
                                },
                                {
                                    field: "maxscore",
                                    title: "Max Score",
                                    width: 100,
                                    //template:"<input id='score'  type='Text'  >"
                                    //footerTemplate: "300"
                                },
                                {
                                    field: "score",
                                    title: "Score",
                                    width: 100,
                                   
                                    //template: "<input id='score'  type='Text'  >"
                                    //footerTemplate: "240",
                                },
                                {
                                    field: "rating",
                                    title: "Rating",
                                    width: 100,
                                    //template: "<input id='score'  type='Text'  >"
                                    //editor: function (container, options) {
                                    //    item_rate(container, options.field, '9', '2');
                                    //},
                                },
                                {
                                    field: "mode_flag",
                                    title: "Mode",
                                    hidden: true
                                }
                    ],
                    editable: true
                    //editable: "inline"
                });



        //$(".k-dropdown-operator").css('display', 'none');
        //$("#closure_grid .k-input").attr('disabled', 'false');
    }
    //load_master_code();
    //evalution_category_desc = grid_comboScreen_mastercodes("QCD_FL_EvalCate");

    function mergeGridRows(grid, colTitle) {

        $('#grid_cr_evolve > .k-grid-content > table').each(function (index, item) {

            var dimension_col = 1;
            // First, scan first row of headers for the "Dimensions" column.
            $('#grid_cr_evolve >.k-grid-header > .k-grid-header-wrap>table').find('th').each(function () {

                if ($(this).text() == colTitle) {

                    // first_instance holds the first instance of identical td
                    var first_instance = null;

                    $(item).find('tr').each(function () {

                        // find the td of the correct column (determined by the catagery)
                        var dimension_td = $(this).find('td:nth-child(' + dimension_col + ')');

                        if (first_instance == null) {
                            first_instance = dimension_td;
                        } else if (dimension_td.text() == first_instance.text()) {
                            // if current td is identical to the previous
                            // then remove the current td
                            dimension_td.remove();
                            // increment the rowspan attribute of the first instance
                            first_instance.attr('rowspan', typeof first_instance.attr('rowspan') == "undefined" ? 2 : first_instance.attr('rowspan') + 1);
                        } else {
                            // this cell is different from the last
                            first_instance = dimension_td;
                        }
                    });
                    return;
                }
                dimension_col++;
            });

        });
    }

    function OnEdit(e) {
        setDefaultValues(e);
        //e.container.find("input[name='fat_percent']").attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');
        var grid_validate_msg = "";
        grid_validate_msg = "Score Should Not Exceed Max Score";
        //e.container.find("input[name='milk_amount']").attr('onkeypress', 'return false');
        e.container.find("input[name='score']").focusout(function () {
            if (parseFloat($(this).val()) > parseFloat(e.model.maxscore)) {
                     
                kendoAlert(grid_validate_msg);
                return false;
            }
            else {
                ////var rate = e.container.find("input[name='milk_rate']");
                //if ($("#txtcredit_rate").val() != "" && $("#txtcredit_rate").val() != undefined) {
                //    $("#txtcredit_rate").val((parseFloat(e.model.rating) + parseFloat($("#txtcredit_rate").val())).toFixed(2));
                //}
                //else {
                //    $("#txtcredit_rate").val((parseFloat($(this).val())).toFixed(2));
                //}
                var grid = $("#grid_cr_evolve").data("kendoGrid");
                var gridData = grid.dataSource.view();
                var credit_rate = 0;
                for (var i = 0; i < gridData.length; i++) {
                    if (gridData[i].rating != '') {
                        credit_rate += gridData[i].rating != undefined ? parseFloat(gridData[i].rating) : parseFloat(0);
                    }
                }
                $('#txtcredit_rate').val(credit_rate).toFixed(2);
            }
        });
        

    }

</script>

<script>
    function mandatory() {
        try {
            var mandatory_check = true;

            var grid_validate_msg = "";

            if ($('#cmb_loantype').data("kendoComboBox").value() == "") {
                grid_validate_msg += "Loan Type cannot be blank <br>";
                mandatory_check = false;
            }
            if ($("#txtmember_id").val() == "") {
                grid_validate_msg += "Member ID cannot be blank <br>";
                mandatory_check = false;
            }
            if ($("#cmb_loanAccno").val() == "" || $("#cmb_loanAccno").val() == undefined) {
                grid_validate_msg += "Loan Account No cannot be blank <br>";
                mandatory_check = false;
            }
            if ($("#cmb_loanqustn").data("kendoComboBox").value() == "") {
                grid_validate_msg += "Questionnaire Name cannot be blank <br>";
                mandatory_check = false;
            }

            if (mandatory_check == false) {
                kendoAlert(grid_validate_msg);
                return false;
            }
            else {
                return listLoad();
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function listLoad() {
        try {
            var formval = form_Serialize("Frm_Credit_Evaluation");
            var obj_val = JSON.parse(formval);
            var c = $('#cmb_loantype');
            if (c.data('kendoComboBox').value() != "" && c.data('kendoComboBox').value() != undefined) {
                obj_val.loan_type = c.data('kendoComboBox').value();
            }
            else {
                obj_val.loan_type = "0";
            }
            if ($("#creditevaluation_id").val() != "" && $("#creditevaluation_id").val() != undefined) {
                obj_val.creditevaluation_id = $("#creditevaluation_id").val();
            }
            else {
                obj_val.creditevaluation_id = 0;
            }
            obj_val.fpoorgn_code = getlocalStorage('org_id');
            if ($("#txtmember_id").val() != "" && $("#txtmember_id").val() != undefined) {
                obj_val.member_code = ($("#txtmember_id").val());
            }
            else {
                obj_val.member_code = '0';
            }
            var loan_no = $('#cmb_loanAccno').val();
            if (loan_no != "" && loan_no != undefined) {
                obj_val.loan_no = loan_no;
            }
            else {
                obj_val.loan_no = "0";
            }
            var loanqustn = $('#cmb_loanqustn');
            if (loanqustn.data('kendoComboBox').value() != "" && loanqustn.data('kendoComboBox').value() != undefined) {
                obj_val.questionnairesmap_id = loanqustn.data('kendoComboBox').value();
            }
            else {
                obj_val.questionnairesmap_id = "0";
            }
            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            retrieve_creditevaluation_details(data);
            var colCount = $("#Disbursement_grid").find('.k-grid-header colgroup > col').length;

            //If There are no results place an indicator row
            if ($("#Disbursement_grid").data("kendoGrid").dataSource._view.length == 0) {
                $("#Disbursement_grid").find('.k-grid-content tbody')
                    .append('<tr class="kendo-data-row"><td colspan="' +
                        colCount +
                   '" style="text-align:center; padding-top:10px;background-color:#AFE4FA"><b>No pending records available for the selected status; please try later!!!</b></td></tr>');
                return false;
            }
            return false;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_creditevaluation_header(res) {

    }
    function generate_creditevaluation_detail(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_cr_evolve_details(data);
            }
            else {
                grid_cr_evolve_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script>
    function form_control() {
        var control_Name = [
            { "dataCol": "fpomember_code", "controlId": "txtmember_id", "type": "Text" },
            { "dataCol": "farmer_code", "controlId": "txtfarmer_code", "type": "Text" },
            { "dataCol": "member_name", "controlId": "txtfarmer_name", "type": "Text" }

        ];
        return control_Name;

    }
    function trans_input_data() {
        var trans_coll = [
            { "trasfer": "Yes", "dataCol": "fpofarmer_code", "controlId": "txtmember_id", "grid_id": "", "grid_row_col": "" },
             //{ "trasfer": "Yes", "dataCol": "bank_acc_type", "controlId": "cmbacc_type", "grid_id": "", "grid_row_col": "" },
            { "trasfer": "No", "dataCol": "", "controlId": "", "grid_id": "", "grid_row_col": "" }
        ];

        return trans_coll;
    }
</script>


<script>
    function save() {

        try {
            if ($("#creditevaluation_id").val() == "") {
                $("#creditevaluation_id").val('0');
            }
            var formval = form_Serialize("MapMilk_DNew");
            var obj_val = JSON.parse(formval);

            if ($("#txtmember_id").val() != "" && $("#txtmember_id").val() != undefined) {
                obj_val.member_code = $("#txtmember_id").val();
            }
            else {
                obj_val.member_code = 0;
            }
            if ($("#txtfarmer_code").val() != "" && $("#txtfarmer_code").val() != undefined) {
                obj_val.farmer_code = $("#txtfarmer_code").val();
            }
            else {
                obj_val.farmer_code = 0;
            }
            if ($("#txtcredit_rate").val() != "" && $("#txtcredit_rate").val() != undefined) {
                obj_val.credit_rate = $("#txtcredit_rate").val();
            }
            else {
                obj_val.credit_rate = 0;
            }
            if ($("#creditevaluation_id").val() == undefined || $("#creditevaluation_id").val() == "") {
                obj_val.creditevaluation_id = "0";
            }
            else {
                obj_val.creditevaluation_id = $("#creditevaluation_id").val();
            }
            //if ($("#cmb_loanAccno").val() == undefined || $("#cmb_loanAccno").val() == "") {
            //    obj_val.loan_no = "0";
            //}
            //else {
            //    var loanno = $("#cmb_loanAccno").text();
            //    obj_val.loan_no = loanno.toString();
            //}
            if ($("#cmb_loanAccno").val() == undefined || $("#cmb_loanAccno").val() == "") {
                obj_val.loan_no = "0";
            }
            else {
                var loanno = "";
                var values = $("#cmb_loanAccno").val();
                console.log(values);
                for (var i = 0; i < values.length; i++) {
                    if (i == 0) {
                        loanno += values[i];
                    }
                    else {

                        loanno += "," + values[i];
                    }
                }
                obj_val.loan_no = loanno;
            }
            if (obj_val.status_code == undefined) {
                obj_val.status_code = "A";
            }
            if (obj_val.row_timestamp == undefined) {
                obj_val.row_timestamp = "0";
            }
            if ($("#mode_flag").val() != "" && $("#mode_flag").val() != undefined) {
                var mode = $("#mode_flag").val();
                if (mode == "S") {
                    mode = "U";
                }
                obj_val.mode_flag = mode;
            }
            else {
                obj_val.mode_flag = 'I';
            }
            obj_val.fpoorgn_code = getlocalStorage('org_id');
            var c = $('#cmb_loantype');
            obj_val.loan_type = c.data('kendoComboBox').value();
            var credit_status = $('#cmb_creditrate');
            obj_val.credit_status = credit_status.data('kendoComboBox').value();
            var evaluationmap_id = $('#cmb_loanqustn');
            obj_val.evaluationmap_id = evaluationmap_id.data('kendoComboBox').value();

            var grid_val = JSON.stringify($("#grid_cr_evolve").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            $.each(result, function (index, value) {
                var evaluationdtl_id = value.evaluationdtl_id;
                if (evaluationdtl_id == undefined) {
                    result[index].evaluationdtl_id = "0";
                }
                var mmode = result[index].mode_flag;
                if (mmode == "S") {
                    result[index].mode_flag = "U";
                }

            });
            var obj_grid_val = result;

            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            data.context.Detail = obj_grid_val;

            var grid = $("#grid_cr_evolve").data("kendoGrid");
            var gridData = grid.dataSource.view();
            var savetotal =true;
            for (var i = 0; i < gridData.length; i++) {
                if (gridData[i].score != '') {
                    if (gridData[i].score != undefined) {
                        
                        if (parseFloat(gridData[i].score) > parseFloat(gridData[i].maxscore))
                        {
                            savetotal=false
                        }                      

                    }
                }
            }
            if(savetotal)
            {
                save_creditevaluation_details(data);
            }
            else {
                kendoAlert("Weightage  should be less than or equal to Max Score");

            }

            
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function get_creditevaluation_details(res) {
        var formval = form_Serialize("Frm_Credit_Evaluation");
        var obj_val = JSON.parse(formval);

        if (res.loan_type != "" && res.loan_type != undefined) {
            obj_val.loan_type = res.loan_type;
        }
        else {
            obj_val.loan_type = "0";
        }
        if (res.loan_no != "" && res.loan_no != undefined) {
            obj_val.loan_no = res.loan_no;
        }
        else {
            obj_val.loan_no = "0";
        }
        if (res.evaluationmap_id != "" && res.evaluationmap_id != undefined) {
            obj_val.evaluationmap_id = res.evaluationmap_id;
        }
        else {
            obj_val.evaluationmap_id = 0;
        }
        if (res.creditevaluation_id != "" && res.creditevaluation_id != undefined) {
            obj_val.creditevaluation_id = res.creditevaluation_id;
        }
        else {
            obj_val.creditevaluation_id = 0;
        }
        obj_val.fpoorgn_code = res.fpoorgn_code;

        if (res.member_code != "" && res.member_code != undefined) {
            obj_val.member_code = res.member_code;
        }
        else {
            obj_val.member_code = 0;
        }
        var loan_type = $('#cmb_loanAccno').val();
        if (loan_type != "" && loan_type != undefined) {
            obj_val.loan_type = loan_type;
        }
        else {
            obj_val.loan_type = "0";
        }
        var loanqustn = $('#cmb_loanqustn');
        if (loanqustn.data('kendoComboBox').value() != "" && loanqustn.data('kendoComboBox').value() != undefined) {
            obj_val.questionnairesmap_id = loanqustn.data('kendoComboBox').value();
        }
        else {
            obj_val.questionnairesmap_id = "0";
        }
        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Header = obj_val;
        retrieve_creditevaluation_details(data);
    }
</script>

<script>
    $("#cmb_loantype").change(function () {
        fetch_loanno();
        $("#cmb_loanAccno").empty();
        var  cmb_loanAccno = grid_comboScreen_mastercodes("FARMERLOAN");
        var multiselect = $("#cmb_loanAccno").data("kendoMultiSelect");
        multiselect.setDataSource(cmb_loanAccno);
    });
    function fetch_loantype() {
        //var frmr_id = $("#txtfarmer_code").val();
        //var ln_type = $('#cmb_loantype').data("kendoComboBox").value();
        //load_master_code(frmr_id, ln_type);

        //var cmb_loantype = "";
        //$("#cmb_loantype").empty();
        //cmb_loantype = grid_comboScreen_mastercodes("QCD_LOANTYPE");
        //filter_combobox("cmb_loantype", cmb_loantype);
        //load_combo
        var frmr_id = $("#txtfarmer_code").val();
        var ln_type = $('#cmb_loantype').data("kendoComboBox").value();
        load_master_code(frmr_id, ln_type);
        var cmb_loantype = "";
        $("#cmb_loantype").data("kendoComboBox").value('')
        cmb_loantype = grid_comboScreen_mastercodes("QCD_LOANTYPE");
        filter_combobox("cmb_loantype", cmb_loantype);
        var list_in = [];
        var multiselect1 = $("#cmb_loanAccno").data("kendoMultiSelect");
        multiselect1.setDataSource(list_in);
        $("#cmb_loanqustn").data("kendoComboBox").value('')
        load_combo();
    }
    function fetch_loanno() {
        var frmr_id = $("#txtfarmer_code").val();
        var ln_type = $('#cmb_loantype').data("kendoComboBox").value();
        load_master_code(frmr_id, ln_type);
        load_combo();
    }
</script>
<script>
    function load_combo() {
        //var cmb_loantype = "";
        //$("#cmb_loantype").empty();
        //cmb_loantype = grid_comboScreen_mastercodes("QCD_LOANTYPE");
        //filter_combobox("cmb_loantype", cmb_loantype);

        var cmb_creditrate = "";
        $("#cmb_creditrate").empty();
        cmb_creditrate = grid_comboScreen_mastercodes("QCD_FL_CreditRate");
        filter_combobox("cmb_creditrate", cmb_creditrate);

        var cmb_loanqustn = "";
        $("#cmb_loanqustn").empty();
        cmb_loanqustn = grid_comboScreen_mastercodes("QUSTIONNAIRE");
        filter_combobox("cmb_loanqustn", cmb_loanqustn);
    }
</script>