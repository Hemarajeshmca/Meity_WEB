#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\REM\ExpenseList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "107a505ced902724bb8a88a289d5477f21cbcf42"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_REM_ExpenseList), @"mvc.1.0.view", @"/Views/REM/ExpenseList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"107a505ced902724bb8a88a289d5477f21cbcf42", @"/Views/REM/ExpenseList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_REM_ExpenseList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("expense_list"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\REM\ExpenseList.cshtml"
  
    ViewBag.List = "Expense";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "107a505ced902724bb8a88a289d5477f21cbcf425067", async() => {
                WriteLiteral("\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n");
                WriteLiteral("                <div id=\"Expenses_grid\"></div>\r\n");
                WriteLiteral("        </div>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    $(document).ready(function () {
        $('#btn_View').hide();
        $("".adv_filter"").attr(""hdrtitle"", ""Expenses List"");
        $("".adv_filter"").attr(""fltid"", ""Expense"");
        $("".Export"").attr(""hdrtitle"", ""Expenses List"");
        $("".Export"").attr(""SubTreeId"", ""EXPENSE"");
        list_grid_id = ""Expenses_grid"";

        ExpenseGrid();

        listpageloadfetch();

        //Screen_Id = ""EXPENSE"";
        //permission = sec_Permission(Screen_Id);
        //page_load_list_permission(permission);
        setlocalStorage(""ls_pageList"", """");
        //filterhover();
    });
</script>

<script>

        function listpageloadfetch() {
            try{
                var formval = form_Serialize(""expense_list"");
                var obj_val = JSON.parse(formval);
                obj_val.FilterBy_Option = ""ALL"";
                obj_val.FilterBy_Code = ""."";
                if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != """") {");
            WriteLiteral(@"
                    obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
                }
                else {
                    obj_val.FilterBy_FromValue = ""."";
                }
                obj_val.FilterBy_ToValue = ""."";

                var data = {};
                data.context = getContext();
                data.context.Filter = obj_val;
                var Context = data.context;
                $.ajax({
                    type: ""POST"",
                    url: '/REM/ExpenceListfetch',
                    dataType: 'json',
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, FilterBy_Option: Context.Filter.FilterBy_Option, FilterBy_Code: Context.Filter.FilterBy_Code, FilterBy_FromValue: Context.Filter.FilterBy_FromValue, FilterBy_ToValue: Context.Filter.FilterBy_Tovalue }),
                    contentType: 'application/json; charset=utf-8',
                    success: func");
            WriteLiteral(@"tion (response) {
                        //var list = JSON.parse(response);
                        if (response.context != null) {
                            generate_Expence_list(response.context.List);
                        }
                        else {
                            ExpenseGrid([]);
                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });            
            }
            catch (err) {
                javascript_log4j_root(arguments.callee.name, err);
            }
        }

        var status_Priority = [];
        function ExpenseGrid(data) {
            try {
                $(""#Expenses_grid"").kendoGrid(
                 {
                     dataSource: {
                         data: data,
                         pageSize: 20,
                         change: function (e) {
                  ");
            WriteLiteral(@"           setTimeout(function () {
                                 var gd = $(""#Expenses_grid"").data(""kendoGrid"");
                                 filter_row(gd);
                                 $('.k-i-close').css('display', 'none');
                                 $('button.k-button-icon').css('display', 'none');
                                 $('#Expenses_grid .k-input').prop('disabled', false);
                                 $('#Expenses_grid .k-input').prop('readonly', true);

                             }, 1);
                         },
                     },
                     toolbar: ""<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>"",
                     excelExport: function (e) {
                         var gd = $(""#Expenses_grid"").data(""kendoGrid"");
                         var len = gd.dataSource._data.length;
                        ");
            WriteLiteral(@" var chkall = $('#chkall').is(':checked');
                         var chkfilter = $('#chkfilter').is(':checked');
                         var chktemp = $('#chktemp').is(':checked');
                         var twokendobox = true;
                         gd.dataSource.pageSize(len);
                         if (e.sender.dataSource._data.length == len) {
                             twokendobox = false;
                             exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                         }
                         else {
                             exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                         }
                         gd.dataSource.pageSize('10');
                         return false;
                     },
                     filterable: {
                         enabled: true,
                         delay: 1500,
                         mode: ""menu, row"",
                         height: 200,
         ");
            WriteLiteral(@"                click: function (e) {
                             var gd = $(""#Expenses_grid"").data(""kendoGrid"");
                             filter_row(gd);
                         }
                     },
                     filterMenuInit: function (e) {
                         var gd = $(""#Expenses_grid"").data(""kendoGrid"");
                         filter_row(gd);
                     },

                     height: 450,
                     sortable: true,
                     selectable: true,
                     change: selectRow,
                     selectable: ""singl"",   //  Grid Row Selection
                     pageable: {
                         refresh: false,
                         pageSizes: true,
                         buttonCount: 5
                     },
                     navigatable: true,
                     groupable: false,
                     columns: [
                         {
                             field: ""Out_expense_rowid"",
     ");
            WriteLiteral(@"                        title: ""expense_rowid"",
                             width: 1,
                             hidden: true,
                         },

                          {
                              field: ""Out_expense_id"",
                              title: ""Expense ID"",
                              filterable: {
                                  cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
                                  }
                              }
                          },
                           {
                               field: ""Out_business_desc"",
                               title: ""Business"",
                               filterable: {
                                   cell: {
                                       operator: ""contains"",
                                       inputWidth: 1500
                                   }
                              ");
            WriteLiteral(@" }
                           },
                          {
                              field: ""Out_financial_year"",
                              title: ""finyear_code"",
                              width: 1,
                              hidden: true,
                          },
                          {
                              field: ""Out_financial_year"",
                              title: ""Financial Year"",
                              filterable: {
                                  cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
                                  }
                              }
                          },
                          {
                              field: ""Out_total_expenses"",
                              title: ""Total Expenses"",
                              hidden:true,
                              filterable: {
                                  cell: {
   ");
            WriteLiteral(@"                                   operator: ""contains"",
                                      inputWidth: 1500
                                  }
                              }
                          },
                          {
                              field: ""Out_status_code"",
                              title: ""status_code"",
                              width: 1,
                              hidden: true,
                          },
                     {
                         field: ""Out_status_desc"",
                         title: ""Status"",
                         filterable: {
                             cell: {
                                 operator: ""contains"",
                                 inputWidth: 1500
                             }
                         }
                     },
                     ]
                 });

                $("".k-dropdown-operator"").css('display', 'none');
                $(""#Expenses_grid .k-input"").attr('");
            WriteLiteral(@"disabled', 'false');
            }
       catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: ""--Select Value--""
        });
    }

    function selectRow() {
        try{
            var grid = $(""#Expenses_grid"").data(""kendoGrid"");
            var selectedItem = grid.dataItem(grid.select());
            setlocalStorage(""ls_pageList"", selectedItem);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>



<script>
    $(""#btn_Edit"").bind(""click"", function () {
        getSerializedSelectedRows('edit');
    });

    $(""#btn_View"").bind(""click"", function () {
        getSerializedSelectedRows('view');
    });

    $(""#btn_new"").bind(""click"", function () {
        btn_onClick('Create');
        loc");
            WriteLiteral(@"ation.href = ""../REM/ExpenseForm"";
    });

    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage(""ls_pageList"") != undefined) {
                var items = getlocalStorage(""ls_pageList"");
                if (items.length == 0) {
                    kendoAlert(""Please select records"");
                }

                else {
                    if (mode == ""edit"") {
                        btn_onClick('Edit');
                        location.href = ""../REM/ExpenseForm"";
                    }
                    else if (mode == ""view"") {
                        btn_onClick('View');
                        location.href = ""../REM/ExpenseForm"";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script>
    function generate_Expence_list(res) {
        try {
            if (res != null) {
                var data =");
            WriteLiteral(@" changedataType(res);
                $(""#gd_expense"").empty();
                $(""#gd_expense"").append(""<div id='Expenses_grid'></div>"");
                ExpenseGrid(data);
            }
            else {
                ExpenseGrid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function listRefresh() {
        try {
            setlocalStorage('flt_condition', """");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>








");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
