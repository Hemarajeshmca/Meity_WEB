#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FarmerProfile\FarmerProfile_List.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a1d1e4ab7e47e7c2dc113387d750bffad6c053f7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FarmerProfile_FarmerProfile_List), @"mvc.1.0.view", @"/Views/FarmerProfile/FarmerProfile_List.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a1d1e4ab7e47e7c2dc113387d750bffad6c053f7", @"/Views/FarmerProfile/FarmerProfile_List.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_FarmerProfile_FarmerProfile_List : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_farmer_profile"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FarmerProfile\FarmerProfile_List.cshtml"
  
    ViewBag.List = "Farmer Profile";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    <style>
        #loader {
            position: fixed;
            left: 0px;
            top: 0px;
            width: 100%;
            height: 100%;
            z-index: 9999;
            opacity: 0.5;
            background: url('../../images/LoadingImg.gif') 50% 50% no-repeat rgb(0,0,0);
        }
    </style>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1d1e4ab7e47e7c2dc113387d750bffad6c053f76077", async() => {
                WriteLiteral(@"
    <div class=""row"">
        <div class=""col-xs-12"">
            <div id=""gd_farmer"">
                <div id=""farmer_Grid""></div>
                <div id=""pager""></div>
            </div>
        </div>
    </div>
        <div id=""loader""></div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a1d1e4ab7e47e7c2dc113387d750bffad6c053f77912", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    click_act_name = ""FarmerProfile_Form"";
    click_ctrl_name = ""FarmerProfile"";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>
<script>
    var menuId = """";
    var permission = """";
    $(document).ready(function () {
        $(""#loader"").fadeOut(0);
        menuId = getlocalStorage(""MenuId"");
        $("".adv_filter"").attr(""hdrtitle"", ""Farmer Profile List Record"");
        $("".adv_filter"").attr(""fltid"", ""farMst"");
        $("".Export"").attr(""hdrtitle"", ""Farmer Profile  List"");
        $("".Export"").attr(""SubTreeId"", ""FAR_PRF"");
        list_grid_id = ""farmer_Grid"";
        Screen_Id = ""FARMPREF"";
        permission = sec_Permission(Screen_Id);
        //page_load_list_permission(permission);
        //listpageloadfetch(0,20);
        setlocalStorage(""ls_pageList"", """");
        $(""#btn_new"").attr(""disabled"", true);
        filterhover();
        role_ri()
    });

    $(document).ready(function () {
        // getLanguageListMode(""ACT_FAR_REG");
            WriteLiteral(@""", ""farmer_Grid"", ""enUS"", ""taIN"");

    });

    function get_hindi_lang() {
        getLanguageListMode(""FARMPREF"", ""farmer_Grid"", ""hi_IN"", ""en_US"");
        Overwritegrid();
    }


    function get_english_lang() {
        getLanguageListMode(""FARMPREF"", ""farmer_Grid"", ""en_US"", ""ta_IN"");
        Overwritegrid();
    }
    function role_ri() {
        /*  Prema added for fpo based abd ri user base loading*/
        var role = getlocalStorage(""orgn_level"")
        if (role == ""ORG_FO"") {
            debugger;
            filter_combobox(""cmb_RIBelong"", getlocalStorage(""rilist""));
            filter_combobox(""cmb_FPOBelong"", getlocalStorage(""fpolist""));
            $(""#cmb_FPOBelong"").data(""kendoComboBox"").value(""ALL"");
            var cmb_ri = $(""#cmb_RIBelong"").data(""kendoComboBox"");
            cmb_ri.value(getlocalStorage(""org_id""));
            $(""#RI"").show();
            $(""#cmb_RIBelong"").data(""kendoComboBox"").enable(false);
            $(""#FPO"").show();
            $(""#cmb_");
            WriteLiteral(@"FPOBelong"").data(""kendoComboBox"").enable(true);
            fpoload();
            listpageloadfetch(0, 20);
        }
        if (role == ""ORG_PF"") {
            debugger;
            filter_combobox(""cmb_RIBelong"", getlocalStorage(""rilist""));
            $(""#cmb_RIBelong"").data(""kendoComboBox"").value(""ALL"");
            filter_combobox(""cmb_FPOBelong"", getlocalStorage(""fpolist""));
            $(""#cmb_FPOBelong"").data(""kendoComboBox"").value(""ALL"");
            $(""#RI"").show();
            $(""#FPO"").show();
            $(""#cmb_RIBelong"").data(""kendoComboBox"").enable(true);
            $(""#cmb_FPOBelong"").data(""kendoComboBox"").enable(true);
            fpoload();
            listpageloadfetch(0, 20);
        }
        if (role == ""ORG_FPO"") {
            debugger;
            filter_combobox(""cmb_RIBelong"", getlocalStorage(""rilist""));
            filter_combobox(""cmb_FPOBelong"", getlocalStorage(""fpolist""));
            var cmb_ri = $(""#cmb_RIBelong"").data(""kendoComboBox"");
            cmb");
            WriteLiteral(@"_ri.value(getlocalStorage(""parent_code""));
            $(""#RI"").show();
            $(""#cmb_RIBelong"").data(""kendoComboBox"").enable(false);
            $(""#FPO"").show();
            $(""#cmb_FPOBelong"").data(""kendoComboBox"").enable(false);
            var cmap_insel = $(""#cmb_FPOBelong"").data(""kendoComboBox"");
          //  cmap_insel.value(getlocalStorage(""org""));
            cmap_insel.value(getlocalStorage(""org_code""));
            listpageloadfetch(0, 20);
        }
        /*  prema ended*/
    }
    function fpoload() {
        var data = {};
            data.userId = getlocalStorage(""User_Id_Value"");
        var orgnid = $(""#cmb_RIBelong"").data(""kendoComboBox"").value();
            var user_code = data.userId;
            var data1 = {User_code: user_code, orgn_code: orgnid}
            $.ajax({
            url: '");
#nullable restore
#line 125 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FarmerProfile\FarmerProfile_List.cshtml"
             Write(Url.Action("GetFPOlist", "Login"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""post"",
            contentType: 'application/x-www-form-urlencoded',
            data: data1,
            success: function (response1) {
            debugger;
                var url_path = JSON.parse(response1);
                var itemArrFPO = [];
                for (var i = 0; i < url_path.Table.length; i++) {
                    var list = {};
                    list.id = url_path.Table[i].serial_number;
                    list.code = url_path.Table[i].dist_code;
                    list.desc = url_path.Table[i].Member_district_name;
                    itemArrFPO.push(list);
                }
                filter_combobox(""cmb_FPOBelong"", itemArrFPO);
            },
                error: function (er)
                {
                alert(er)
                console.log(er)
                }
            });
    }
</script>
<script>
    function listgrid(data) {
        try {
            $(""#farmer_Grid"").kendoGrid({
                dataSource: {");
            WriteLiteral(@"
                    data: data,
                    pageSize: 200,
                    change: function (e) {
                        setTimeout(function () {
                            var gd = $(""#farmer_Grid"").data(""kendoGrid"");
                            filter_row(gd);
                            $('.k-i-close').css('display', 'none');
                            $('button.k-button-icon').css('display', 'none');
                            $('#farmer_Grid .k-input').prop('disabled', false);
                            $('#farmer_Grid .k-input').prop('readonly', true);

                        }, 1);
                    },
                },
                toolbar: ""<button type= 'button' id = 'Exportclick' class = 'k-grid-excel' style = 'display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>"",
                excelExport: function (e) {
                    var gd = $(""#farmer_Grid"").data(""kendoGrid"");
                    v");
            WriteLiteral(@"ar len = gd.dataSource._data.length;
                    var chkall = $('#chkall').is(':checked');
                    var chkfilter = $('#chkfilter').is(':checked');
                    var chktemp = $('#chktemp').is(':checked');
                    var twokendobox = true;
                    gd.dataSource.pageSize(len);
                    if (e.sender.dataSource._data.length == len) {
                        twokendobox = false;
                        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    }
                    else {
                        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    }
                    gd.dataSource.pageSize('10');
                    return false;
                },
                //filterable: {
                //    enabled: true,
                //    delay: 1500,
                //    mode: ""menu, row"",
                //    height: 200,
                //    click: function");
            WriteLiteral(@" (e) {
                //        var gd = $(""#farmer_Grid"").data(""kendoGrid"");
                //        filter_row(gd);
                //    }
                //},
                filterMenuInit: function (e) {
                    var gd = $(""#farmer_Grid"").data(""kendoGrid"");
                    filter_row(gd);
                },
                change: selectRow,
                height: 460,
                sortable: false,
                selectable: true,
                selectable: ""singl"",   //  Grid Row Selection  
                pageable: {
                    refresh: false,
                    //pageSizes: true,
                    buttonCount: 5,
                    pageSizes: [""All"", 100, 200, 500, 2000]
                },
                navigatable: true,
                groupable: false,
                filterable: true,
                resizable: true,
                columns: [

                    {
                        field: ""out_farmer_rowid"",
            ");
            WriteLiteral(@"            title: ""Farmer Rowid"", 
                        hidden: true,
                    },
                   
                    {
                        field: ""out_farmer_code"",
                        title: ""Farmer Code"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 200
                    },
                    {
                        field: ""out_fpo_name"",
                        title: ""Fpo Name"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            ");
            WriteLiteral(@"}
                        },
                        width: 200
                    },
                    {
                        field: ""out_member_id"",
                        title: ""Member ID"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 200
                    },
                    {
                        field: ""out_version_no"",
                        title: ""version no"", 
                        hidden: true,
                    },
                    {
                        field: ""out_photo_farmer"",
                        title: ""photo_farmer"", 
                        hidden: true,
                    },

                    {
                        field: ""out_farmer");
            WriteLiteral(@"_name"",
                        title: ""Farmer First Name"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 200,
                    },
                    {
                        field: ""out_sur_name"",
                        title: ""Sur Name"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 160,

                    },
                    {
                        field: ""out_fhw_name"",
              ");
            WriteLiteral(@"          title: ""Father/Husband/Wife's Name"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 180,

                    },

                    {
                        field: ""out_farmer_dob"",
                        title: ""DOB"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 100,
                    },
                    {
                        field: ""out_farmer_addr1"",
                        t");
            WriteLiteral(@"itle: ""Permanent Address 1"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 230,
                    },
                    {
                        field: ""out_farmer_addr2"",
                        title: ""Permanent Address 2"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 160,
                    },



                    {
                        field: ""out_farmer_ll_name"",
                     ");
            WriteLiteral(@"   title: ""Farmer Tamil Name"", 
                        hidden: true,
                    },
                    {
                        field: ""out_sur_ll_name"",
                        title: ""Sur Tamil Name"", 
                        hidden: true,

                    },
                    {
                        field: ""out_fhw_ll_name"",
                        title: ""Father/Husband/Wife's tamil Name"", 
                        hidden: true,

                    },

                    {
                        field: ""out_farmer_ll_addr1"",
                        title: ""Permanent Address 1"", 
                        hidden: true,
                    },
                    {
                        field: ""out_farmer_ll_addr2"",
                        title: ""Permanent Address 2"", 
                        hidden: true,
                    },

                    {
                        field: ""out_farmer_country"",
                        title: ""Country_c"", 
         ");
            WriteLiteral(@"               hidden: true,
                    },

                    {
                        field: ""out_farmer_country_desc"",
                        title: ""Country"",
                        hidden: true,
                    },

                    {
                        field: ""out_farmer_state"",
                        title: ""State"",
                        hidden: true                         
                    },
                    {
                        field: ""out_farmer_state_desc"",
                        title: ""State"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 160
                    },
                    {
                        field: ""out_farmer_dist"",
 ");
            WriteLiteral(@"                       title: ""District"", 
                        hidden: true,
                    },
                    {
                        field: ""out_farmer_dist_desc"",
                        title: ""District"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 160
                    },
                    {
                        field: ""out_farmer_taluk"",
                        title: ""Taluk"", 
                        hidden: true,
                    },
                    {
                        field: ""out_farmer_taluk_desc"",
                        title: ""Taluk"",
                        filterable: {
                            extra: false,
                            oper");
            WriteLiteral(@"ators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 160
                    },
                    {
                        field: ""out_farmer_panchayat"",
                        title: ""Gram Panchayat"", 
                        hidden: true,
                    },
                    {
                        field: ""out_farmer_panchayat_desc"",
                        title: ""Gram Panchayat"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 200
                    },

                    {
                        fiel");
            WriteLiteral(@"d: ""out_farmer_village"",
                        title: ""Village"", 
                        hidden: true,
                    },
                    {
                        field: ""out_farmer_village_desc"",
                        title: ""Village"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 160
                    },


                    {
                        field: ""out_farmer_pincode"",
                        title: ""Pincode"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
   ");
            WriteLiteral(@"                         }
                        },
                        width: 100
                    },
                    {
                        field: ""out_farmer_pincode_desc"",
                        title: ""Pincode Desc."", 
                        hidden: true,
                    },
                    {
                        field: ""out_marital_status"",
                        title: ""Marital"", 
                        hidden: true,
                    },
                    {
                        field: ""out_marital_status_desc"",
                        title: ""Marital Desc."", 
                        hidden: true,
                    },


                    {
                        field: ""out_gender_flag"",
                        title: ""Gender"", 
                        hidden: true,
                    },
                    {
                        field: ""out_gender_flag_desc"",
                        title: ""Gender"",
                        filte");
            WriteLiteral(@"rable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 100
                    },

                    {
                        field: ""out_reg_mobile_no"",
                        title: ""Farmer Mobile Number"", 
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 140
                    },
                    {
                        field: ""out_reg_note"",
                        title: ""Reg.Note"", 
                        hidden: true,
     ");
            WriteLiteral(@"                   width: 200 
                    },
                    {
                        field: ""out_status_code"",
                        title: ""Status"",  
                        hidden: true,
                    },
                    {
                        field: ""out_status_desc"",
                        title: ""Status"",
                        filterable: {
                            extra: false,
                            operators: {
                                string: {
                                    contains: ""Contains""
                                }
                            }
                        },
                        width: 120, 
                    },
                    {
                        field: ""out_row_timestamp"",
                        title: ""Time stamp"", 
                        hidden: true,
                    },
                ]

            });
            $("".k-dropdown-operator"").css('display', 'none');
   ");
            WriteLiteral(@"         $(""#LVMarker .k-input"").attr('disabled', 'false');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function selectRow() {
        try {
            var grid = $(""#farmer_Grid"").data(""kendoGrid"");
            var selectedItem = grid.dataItem(grid.select());
            setlocalStorage(""ls_pageList"", selectedItem);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Overwritegrid() {
        try {
            var formval = form_Serialize(""frm_farmer_profile"");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = ""ALL"";
            obj_val.FilterBy_Code = ""."";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != """") {
                obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_");
            WriteLiteral(@"FromValue = ""."";
            }
            obj_val.FilterBy_ToValue = ""."";
            obj_val.from_index = 0;
            obj_val.to_index = 0;
            obj_val.record_count = ""10"";
            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.orgnId = $(""#cmb_FPOBelong"").data(""kendoComboBox"").value();
            data.context.userId = $(""#cmb_RIBelong"").data(""kendoComboBox"").value();
            data.context.locnId = getlocalStorage(""User_Id_Value"");
            data.context.Filter = obj_val;
            var Context = data.context;
            $.ajax({
                type: ""POST"",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Filter: Context.Filter }),
                url: ""/FarmerProfile/GetFarmersList"",
                dataType: ""json"",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
  ");
            WriteLiteral(@"                  debugger;
                    if (response.context.List != null) {
                        generate_farmerprofile_list(response);
                        $(""#loader"").fadeOut(1000);
                        langcodeloc(""FARMPREF"");
                    }
                    else {
                        listgrid([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });


        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err.message);
        }
    }
    function listpageloadfetch(st_index, end_index) {
        try {
            var formval = form_Serialize(""frm_farmer_profile"");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = ""ALL"";
            obj_val.FilterBy_Code = ""."";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condit");
            WriteLiteral(@"ion') != """") {
                obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_FromValue = ""."";
            }
            obj_val.FilterBy_ToValue = ""."";
            obj_val.from_index = st_index;
            obj_val.to_index = end_index;
            obj_val.record_count = ""10"";
            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.orgnId = $(""#cmb_FPOBelong"").data(""kendoComboBox"").value();
            data.context.userId = $(""#cmb_RIBelong"").data(""kendoComboBox"").value();
            data.context.locnId = getlocalStorage(""User_Id_Value"");
            data.context.Filter = obj_val;
            var Context = data.context;
            $.ajax({
                type: ""POST"",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Filter: Context.Filter }),
                url: ""/Far");
            WriteLiteral(@"merProfile/GetFarmersList"",
                dataType: ""json"",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {                  
                    if (response.context.List != null) {
                        generate_farmerprofile_list(response);
                        $(""#loader"").fadeIn();
                        Overwritegrid();
                    }
                    else {
                        listgrid([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });


        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err.message);
        }
    }
    $(""#cmb_FPOBelong"").change(function () {
        $(""#listpageloadfetch"").fadeIn();
        listpageloadfetch(0, 20);
    });
    $(""#cmb_RIBelong"").change(function () {
        $(""#cmb_FPOBelong"").data");
            WriteLiteral(@"(""kendoComboBox"").value(""ALL"")
        fpoload();
        $(""#listpageloadfetch"").fadeIn();
        listpageloadfetch(0, 20);
    });
    var pager_click = true;
    function generate_farmerprofile_list(res) {
        try {
            if (res.context.List == null) {
                var row_count = res.context.Filter.out_record_count;
                if (pager_click == true) {
                    $(""#gd_farmer"").empty();
                    $(""#gd_farmer"").append(""<div id='farmer_Grid'></div>"");
                    $(""#gd_farmer"").append(""<div id='pager'></div>"");
                    //SetPager(row_count);
                }
                else {
                }
                listgrid([]);
            }
            else {
                var data = changedataType(res.context.List);
                var row_count = res.context.Filter.out_record_count;
                if (pager_click == true) {
                    $(""#gd_farmer"").empty();
                    $(""#gd_farmer"").append(""<");
            WriteLiteral(@"div id='farmer_Grid'></div>"");
                    $(""#gd_farmer"").append(""<div id='pager'></div>"");
                    //SetPager(row_count);
                }
                else {
                }
                listgrid(data);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var gridRowID = -1;
    function sel_checkbox() {
        try {
            gridRowID++;
            return '<input id=""chk_sel_' + gridRowID + '"" class=""checkbox"" type=""checkbox"" />';
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<script>
    $(""#btn_Edit"").bind(""click"", function () {
        getSerializedSelectedRows('edit');
    });

    $(""#btn_View"").bind(""click"", function () {
        getSerializedSelectedRows('view');
    });

    $(""#btn_new"").bind(""click"", function () {
        btn_onClick('Create');
        location.href = ""../F");
            WriteLiteral(@"armerProfile/FarmerProfile_Form"";
    });

    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage(""ls_pageList"") != undefined) {
                var items = getlocalStorage(""ls_pageList"");
                if (items.length == 0) {
                    kendoAlert(""Please select records"");
                }

                else {
                    if (mode == ""edit"") {
                        btn_onClick('Edit');
                        location.href = ""../FarmerProfile/FarmerProfile_Form"";
                    }
                    else if (mode == ""view"") {
                        btn_onClick('View');
                        location.href = ""../FarmerProfile/FarmerProfile_Form"";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<script>
    var pager_ds = [];
    function SetPager(no_of_rec) {
        try {
        ");
            WriteLiteral(@"    var arr = [];
            var obj = {};
            var pages = no_of_rec / 20;
            for (var i = 0 ; i < pages; i++) {
                obj[i] = ""page_"" + i;
                arr.push(obj);
            }
            pager_ds = new kendo.data.DataSource({
                data: arr,
                pageSize: 1
            });

            SetPagerDS(pager_ds, no_of_rec);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function SetPagerDS(page_source, noofrecords) {
        try {
            $(""#pager"").kendoPager({
                dataSource: page_source,
                change: function (o) {
                    fetchPageDetail('pager');
                    return;
                },
                refresh: false,
                pageSize: 1,
                input: true,
                numeric: true,
                info: true,
                messages: {
                    of: ""of {0}"",
         ");
            WriteLiteral(@"           display: '<span style=""color:blue; font-weight : bold "">Total No of Records : </span>' + '<span style=""color:red"" >' + noofrecords + '</span>' //""<B>Total No of Records :</B> "" +   noofrecords + "" data items""
                }
            });
            page_source.read();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function fetchPageDetail(pager_id) {
        try {
            var st_index = getStartIndex(pager_id);
            var end_index = getEndIndex(pager_id, st_index);
            pager_click = false;
            listpageloadfetch(st_index, end_index);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


</script>

<script>
    function generate_attribute_group_list(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                listgrid(data);
            }
            else ");
            WriteLiteral(@"{
                listgrid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function listRefresh() {
        try {
            setlocalStorage('flt_condition', """");
            pager_click = true;
            listpageloadfetch(0, 100);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function list_pager_refresh() {
        try {
            listpageloadfetch(0, 100);
            pager_click = true;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
   
</script>


");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
