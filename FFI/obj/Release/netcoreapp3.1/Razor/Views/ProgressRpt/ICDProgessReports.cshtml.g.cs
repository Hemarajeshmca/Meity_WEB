#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\ProgressRpt\ICDProgessReports.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "3a53d1dd06aca6f5d259ab64606520316395f4f6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_ProgressRpt_ICDProgessReports), @"mvc.1.0.view", @"/Views/ProgressRpt/ICDProgessReports.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3a53d1dd06aca6f5d259ab64606520316395f4f6", @"/Views/ProgressRpt/ICDProgessReports.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_ProgressRpt_ICDProgessReports : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_ICDprogressreport"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/Common_func.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/HelpFile.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/ExportExcel.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(" \r\n");
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\ProgressRpt\ICDProgessReports.cshtml"
  
    ViewBag.Form = "ICD Progress Report";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<style>
    #display_loading {
        position: absolute;
        top: 30%;
        left: 50%;
        transform: translate(-50%, 50%);
        display: none;
    }

    body {
        background-color: #ffffff;
    }
        button#btnExport {
        background-color: #00c0ef;
        border-color: #00acd6;
        margin-top: -6%;
        display: inline-block;
        padding: 6px 12px;
        margin-bottom: 0;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
        color: #fff;
    }
</style>

<style>
    a.k-button.k-but");
            WriteLiteral(@"ton-icontext.k-grid-Edit, a.k-button.k-button-icontext.k-grid-View, a.k-button.k-button-icontext.k-grid-Delete, a.k-button.k-button-icontext.k-grid-edit {
        background-color: #00c0ef;
        border-color: #00c0ef;
    }
</style>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/jszip/2.4.0/jszip.min.js""></script>
 
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3a53d1dd06aca6f5d259ab64606520316395f4f67183", async() => {
                WriteLiteral(@"
    <div class=""panel panel-default"">
        <div class=""panel-body"" style=""padding-top:6px;padding-bottom:2px"">
            <div class=""row"" style=""padding-bottom:15px;padding-top:12px;"">
                <div class=""col-sm-12"">
                  
                    <div class=""col-sm-3"">
                        <div class=""form-group"">
                            <button id=""refreshicd""");
                BeginWriteAttribute("title", " title=\"", 1923, "\"", 1931, 0);
                EndWriteAttribute();
                WriteLiteral(@" data-placement=""top"" data-toggle=""tooltip"" class=""btn btn-info"" type=""button""
                                    data-original-title=""Refresh"" onclick=""listRefreshicd()"" style=""margin-left: 318%; margin-top: 5%;"">
                                Generate Report
                            </button>
");
                WriteLiteral("                            <div id=\"display_loading\" style=\"z-index: 999;\"><img src=\"https://i.stack.imgur.com/rBLb3.gif\" style=\"height:100px; width:100px;\"></div>\r\n                            <button id=\"btnExport\"");
                BeginWriteAttribute("title", " title=\"", 2573, "\"", 2581, 0);
                EndWriteAttribute();
                WriteLiteral(" data-placement=\"top\" data-toggle=\"tooltip\" class=\"btn btn-info\" type=\"button\" data-original-title=\"Export\" style=\"margin-left: 360%;  background-color: #00c0ef ;border-color: #00acd6; margin-top: -19% ;\">\r\n");
                WriteLiteral(@"                                Export to Excel
                            </button>
                        </div> 
                    
                      
                    </div>


          <div class=""row"">
                            <div class=""col-xs-12"">
                                <div id=""grid_icdprogress"">
                                    <div id=""icdprogress_grid""></div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3a53d1dd06aca6f5d259ab64606520316395f4f610760", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3a53d1dd06aca6f5d259ab64606520316395f4f611800", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3a53d1dd06aca6f5d259ab64606520316395f4f612840", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>
    click_act_name = ""home "";
    click_ctrl_name = ""home"";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;

</script>
<script>
    var menuId = """";
    var permission = """";
    $(document).ready(function () {
        debugger;
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $(""#frm_ICDprogressreport"");
        kendo.init(container);
        container.kendoValidator({
        });
        $(""#Topsubheader"").show();
        $(""#bottomFooter"").show();
        $(""#bottom_menus"").hide();
        $(""#btndiv"").show();
        $(""#frmlayerdiv"").hide();
        $(""#divCreate"").hide();
        $(""#divEdit"").hide();
        $(""#divView"").show();
        $(""#DocStat"").show();
        $("".edtviw_item"").show();
        $("".create_item"").hide();

        $("".Export"").attr(""hdrtitle"", ""ICD Progress Report"");
        $("".Export"").attr(""SubTreeId"", ""PROGRESSICD"");

        Screen_Id = ""PROGRESSICD"";
        permission = ");
            WriteLiteral(@"sec_Permission(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage(""ls_pageList"", """");

        var role = getlocalStorage(""orgn_level"");
        if (role == ""ORG_FO"") {
            debugger;
            $(""#RIform"").show();
            $(""#FPOform"").show();
            filter_combobox(""cmb_RIBelongform"", getlocalStorage(""rilist""));
            filter_combobox(""cmb_FPOBelongform"", getlocalStorage(""fpolist""));
            var cmb_riform3 = $(""#cmb_RIBelongform"").data(""kendoComboBox"");
            cmb_riform3.value(getlocalStorage(""org_id""));
            $(""#cmb_RIBelongform"").data(""kendoComboBox"").enable(false);
            $(""#cmb_FPOBelongform"").data(""kendoComboBox"").value(""All"");
            $(""#cmb_FPOBelongform"").data(""kendoComboBox"").enable(true);
            fpoload();
        }
        if (role == ""ORG_PF"") {
            debugger;
            $(""#RIform"").show();
            $(""#FPOform"").show();
            filter_combobox(""cmb_RIBelongform"", getloc");
            WriteLiteral(@"alStorage(""rilist""));
            $(""#cmb_RIBelongform"").data(""kendoComboBox"").value(""ALL"");
            filter_combobox(""cmb_FPOBelongform"", getlocalStorage(""fpolist""));
            $(""#cmb_FPOBelongform"").data(""kendoComboBox"").value(""ALL"");
            $(""#cmb_RIBelongform"").data(""kendoComboBox"").enable(true);
            $(""#cmb_FPOBelongform"").data(""kendoComboBox"").enable(true);
            fpoload();
        }
        if (role == ""ORG_FPO"") {
            debugger;
            $(""#RIform"").show();
            $(""#FPOform"").show();
            filter_combobox(""cmb_RIBelongform"", getlocalStorage(""rilist""));
            filter_combobox(""cmb_FPOBelongform"", getlocalStorage(""fpolist""));
            var cmb_riform3 = $(""#cmb_RIBelongform"").data(""kendoComboBox"");
            cmb_riform3.value(getlocalStorage(""parent_code""));
            $(""#cmb_RIBelongform"").data(""kendoComboBox"").enable(false);
            $(""#cmb_FPOBelongform"").data(""kendoComboBox"").enable(false);
            var cmap_inself");
            WriteLiteral(@"orm = $(""#cmb_FPOBelongform"").data(""kendoComboBox"");
            cmap_inselform.value(getlocalStorage(""org_code""));
        }
            function fpoload() {
        var data = {};
            data.userId = getlocalStorage(""User_Id_Value"");
        var orgnid = $(""#cmb_RIBelongform"").data(""kendoComboBox"").value();
            var user_code = data.userId;
            var data1 = {User_code: user_code, orgn_code: orgnid}
            $.ajax({
            url: '");
#nullable restore
#line 177 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\ProgressRpt\ICDProgessReports.cshtml"
             Write(Url.Action("GetFPOlist", "Login"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            type: ""post"",
            contentType: 'application/x-www-form-urlencoded',
            data: data1,
            success: function (response1) {
            debugger;
                var url_path = JSON.parse(response1);
                var itemArrFPO = [];
                for (var i = 0; i < url_path.Table.length; i++) {
                    var list = {};
                    list.id = url_path.Table[i].serial_number;
                    list.code = url_path.Table[i].dist_code;
                    list.desc = url_path.Table[i].Member_district_name;
                    itemArrFPO.push(list);
                }
                filter_combobox(""cmb_FPOBelongform"", itemArrFPO);
            },
                error: function (er)
                {
                alert(er)
                console.log(er)
                }
            });
        }
        $(""#cmb_RIBelongform"").change(function () {
            debugger;
            $(""#cmb_FPOBelongform"").val("""");
         ");
            WriteLiteral("   $(\"#cmb_icdfpocode\").val(\"\");\r\n            var selected_value = $(this).val();\r\n            var data1 = { RI_Code: selected_value }\r\n            $.ajax({\r\n                url: \'");
#nullable restore
#line 208 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\ProgressRpt\ICDProgessReports.cshtml"
                 Write(Url.Action("GetFPOlistRIBASE", "Login"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                type: ""post"",
                contentType: 'application/x-www-form-urlencoded',
                data: data1,
                success: function (response1) {
                    debugger;
                    var url_path = JSON.parse(response1);
                    var itemArrFPO = [];
                    for (var i = 0; i < url_path.Table.length; i++) {
                        var list = {};
                        list.id = url_path.Table[i].serial_number;
                        list.code = url_path.Table[i].dist_code;
                        list.desc = url_path.Table[i].Member_district_name;
                        itemArrFPO.push(list);
                    }
                    filter_combobox(""cmb_FPOBelongform"", itemArrFPO);
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }
            });
        });
        $(""#btnExport"").kendoButton({
            click: function () ");
            WriteLiteral(@"{
                debugger;
                ExportButtonClick();
            }
        })
        var list_in = """";
        var list_in = [
            { ""code"": ""Fpo Name"", ""desc"": ""Fpo Name"" }
        ];
        Alldropdownload();
    });

    function Alldropdownload() {

        load_master_code();
        var fpolist = """";
        $(""#cmb_icdfpocode"").empty();
        fpolist = grid_comboScreen_mastercodes(""ORGFPO"");
        //filter_combobox(""cmb_icdfpocode"", fpolist);
        mul_filter_combobox(""cmb_icdfpocode"", fpolist);
    }



    $(function () {
        $('#refreshicd').click(function () {
            debugger;
            $('#refreshicd').hide();
            /* $('#lblprog').show();*/
            $(""#display_loading"").show();
            $("".panel-default"").css(""opacity"", 0.2);
            setTimeout(function () {
                $("".panel-default"").css(""opacity"", 1);
                $(""#display_loading"").css({ ""display"": ""none"" });
            }, 9000);
      ");
            WriteLiteral(@"      var parent = $(""#cmb_RIBelongform"").data(""kendoComboBox"").value();
            var cmb_fpocode = $(""#cmb_FPOBelongform"").data(""kendoComboBox"").value();  //$(""#cmb_icdfpocode"").val();
            var user_code = getlocalStorage(""User_Id_Value"");
            var data = { fpocode: cmb_fpocode, parentcode: parent, User: user_code };
            $.ajax({
                type: ""POST"",
                data: data,
                url: ""/ProgressRpt/Geticddetails"",
                dataType: ""json"",
                contentType: 'application/x-www-form-urlencoded',
                success: function (Data2) {
                    debugger;
                    /* $('#lblprog').hide();*/
                    $(""#display_loading"").hide();
                    $('#refreshicd').show();
                  //  $(""#exportExcel"").show();
                    var columns = [];
                    var chkval = Data2;
                    var arr = [];
                    var tablecount = 0;
                    $");
            WriteLiteral(@".each(chkval, function (i, e) {
                        debugger;
                        tablecount++;
                        $.each(e, function (key, val) {
                            arr.push(val);

                        });

                    });

                    for (var k = 0; k < 12; k++) {
                        $(""#example"" + k).remove();
                    }
                    for (var j = 0; j < tablecount; j++) {
                        if (j == 0) { Data1 = Data2.Table; }
                        else if (j == 1) { Data1 = Data2.Table1; }
                        else if (j == 2) { Data1 = Data2.Table2; }
                        else if (j == 3) { Data1 = Data2.Table3; }
                        else if (j == 4) { Data1 = Data2.Table4; }
                        else if (j == 5) { Data1 = Data2.Table5; }
                        else if (j == 6) { Data1 = Data2.Table6; }
                        else if (j == 7) { Data1 = Data2.Table7; }
                        else i");
            WriteLiteral(@"f (j == 8) { Data1 = Data2.Table8; }
                        else if (j == 9) { Data1 = Data2.Table9; }
                        else if (j == 10) { Data1 = Data2.Table10; }
                        else if (j == 11) { Data1 = Data2.Table11; }
                        else if (j == 12) { Data1 = Data2.Table12; }
                        else if (j == 13) { Data1 = Data2.Table13; }
                        else if (j == 14) { Data1 = Data2.Table14; }
                        else if (j == 15) { Data1 = Data2.Table15; }
                        else if (j == 16) { Data1 = Data2.Table16; }
                        else if (j == 17) { Data1 = Data2.Table17; }
                        else if (j == 18) { Data1 = Data2.Table18; }
                        else if (j == 19) { Data1 = Data2.Table19; }
                        else if (j == 20) { Data1 = Data2.Table20; }
                        else if (j == 21) { Data1 = Data2.Table21; }
                        else if (j == 22) { Data1 = Data2.Table22; }
        ");
            WriteLiteral(@"                else if (j == 23) { Data1 = Data2.Table23; }
                        else if (j == 24) { Data1 = Data2.Table24; }
                        else if (j == 25) { Data1 = Data2.Table25; }
                        else if (j == 26) { Data1 = Data2.Table26; }
                        else if (j == 27) { Data1 = Data2.Table27; }
                        else if (j == 28) { Data1 = Data2.Table28; }
                        else if (j == 29) { Data1 = Data2.Table29; }
                        else if (j == 30) { Data1 = Data2.Table30; }
                        else if (j == 31) { Data1 = Data2.Table31; }
                        else if (j == 32) { Data1 = Data2.Table32; }
                        else if (j == 33) { Data1 = Data2.Table33; }
                        else if (j == 34) { Data1 = Data2.Table34; }
                        else if (j == 35) { Data1 = Data2.Table35; }
                        else if (j == 36) { Data1 = Data2.Table36; }
                        else if (j == 37) { Data1 = ");
            WriteLiteral(@"Data2.Table37; }
                        else if (j == 38) { Data1 = Data2.Table38; }
                        else if (j == 39) { Data1 = Data2.Table39; }
                        else if (j == 40) { Data1 = Data2.Table40; }
                        else if (j == 41) { Data1 = Data2.Table41; }
                        else if (j == 42) { Data1 = Data2.Table42; }
                        else if (j == 43) { Data1 = Data2.Table43; }
                        else if (j == 44) { Data1 = Data2.Table44; }
                        else if (j == 45) { Data1 = Data2.Table45; }
                        else if (j == 46) { Data1 = Data2.Table46; }
                        else if (j == 47) { Data1 = Data2.Table47; }
                        var data = Data1;
                        var i = 0;

                        var entryIndex = ""entries["" + i + ""]"";
                        for (var key in data[0]) {

                            var propType = typeof data[0][key];

                            if (key != """);
            WriteLiteral(@""") {
                                columns.push({
                                    field: entryIndex,
                                    title: key,
                                    type: propType,
                                    filterable: {
                                        extra: false,
                                        operators: {
                                            string: {
                                                contains: ""Contains""
                                            }
                                        }
                                    },
                                    width: 200,
                                });
                            }
                            i = i + 1;
                            entryIndex = ""entries["" + i + ""]"";

                        }
                        var rows = [];
                        var data1 = Data1;

                        $.each(data1, function (i, e) {
    ");
            WriteLiteral(@"                        var entryArray = [];
                            $.each(e, function (key, val) {
                                entryArray.push(val);
                            });
                            rows.push(kendo.observable({
                                entries: entryArray
                            }));


                        });

                        var viewModel = kendo.observable({
                            gridRows: rows

                        });

                        var configuration = {
                            //dataBound: onDataBound,
                            height: 170,
                            navigatable: true,
                            groupable: false,
                            editable: false,
                            sortable: true,
                            scrollable: true,
                            filterable: true,
                            pagable: true,
                            pageSize: 5,
  ");
            WriteLiteral(@"                          resizable: true,
                            persistSelection: true,
                            selectable: ""false"",
                            columns: columns,
                            toolbar: Data1[0].FPO,
                            rows: viewModel
                        };

                        $('#icdprogress_grid').append('<div id=""example' + j + '""  style=""position:relative;margin-top:10px"" class=""k-content""><table id=""grid' + j + '""  data-bind=""source: gridRows"" style=""position:relative;overflow:scroll;width:100%""></table></div>');
                        var timeEditGrid = $(""#grid"" + j).kendoGrid(configuration).data(""kendoGrid"");
                        kendo.bind($(""#grid"" + j), viewModel);
                    }
                },
                error: function (er) {
                    $('#lblprog').hide();
                    $('#refresh').show();
                    alert(er)
                    console.log(er)
                }
         ");
            WriteLiteral(@"   });

            return false;
        });
    });


    function populateGrid(response) {
        debugger;
        try {
            var columns = generateColumns(response);
            var gridOptions = {
                dataSource: {
                    transport: {
                        read: function (options) {
                            options.success(response);
                        }
                    },
                    pageSize: 10,
                    page: 1
                },

                sortable: true,
                resizable: true,
                selectable: true,
                scrollable: true,
                navigatable: true,
                columns: columns,
                editable: true
            };
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }

        // reuse the same grid, swapping its options as needed
        var grid = $(""#icdprogress_grid"").data(""kendoGrid"");");
            WriteLiteral(@"
        if (grid) {
            grid.setOptions(gridOptions);
        } else {
            $(""#icdprogress_grid"").kendoGrid(gridOptions);
        }
    }


    function generateColumns(response) {
        debugger;
        var columnNames = Object.keys(response[0]);
        return columnNames.map(function (name) {
            debugger;
            // var isIdColumn = name.indexOf(""ID"") > -1 || name.indexOf(""Id"") > -1;
            var isIdColumn = false;
            return {
                field: name,
                width: isIdColumn ? 50 : 180,
                title: isIdColumn ? ""Id"" : name
            };
        })
    }

</script>
<script>
    function load_master_code() {
        try {
            var data = {};
            data.screen_Id = ""PROGRESSICD"";
            var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    } 

");
            WriteLiteral(@"    function ExportButtonClick() {
        debugger
        var k = 0; 
        $(""#grid"" + k).data(""kendoGrid"");
        var grid = $(""#grid"" + k).data(""kendoGrid"");
        if (grid.dataSource.total() == 0) { 
            kendoAlert('No records available in the Grid to Export!!!');
        }
        else {
            grid.bind(""excelExport"", function (e) { 

                var sheet = e.workbook.sheets[0];
                e.workbook.fileName = ""ICD Report.xlsx""; 
                var grid1 = $(""#grid"" + k).data(""kendoGrid"");
                var data = grid1.dataSource.data();
                var gridColumns = grid1.columns;
                var columns = gridColumns.map(function (col) {
                    return {
                        value: col.title ? col.title : col.field,
                        autoWidth: true,
                        background: ""#7a7a7a"",
                        color: ""#fff""
                    };
                });

                var rows = [{ cells:");
            WriteLiteral(@" columns, type: ""header"" }];

                for (k = 0; k < 12; k++)
                { 
                    var grid2 = $(""#grid"" + k).data(""kendoGrid"");
                    if (grid2 != undefined) {
                        var data1 = grid2.dataSource.data();
                        // var gridColumns = grid1.columns;

                        for (var i = 0; i < data1.length; i++) {
                            var rowCells = [];
                            for (var j = 0; j < 32; j++) {
                                var cellValue = data1[i].entries[j];
                                rowCells.push({ value: cellValue });
                            }
                            rows.push({ cells: rowCells, type: ""data"" });
                        }

                        sheet.rows = rows;

                    }
                }
            });

            grid.saveAsExcel();

        }
          
        kendoAlert('Exported Sucessfully');
    }
</script>


<script>
");
            WriteLiteral(@"    function listpageloadfetch() {
        try {

            var formval = form_Serialize(""frm_ICDprogressreport"");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = ""ALL"";
            obj_val.FilterBy_Code = ""."";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != """") {
                obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_Fromvalue = ""."";
            }
            obj_val.FilterBy_Tovalue = ""."";
            if (obj_val.status_option == """" || obj_val.status_option == undefined) {
                obj_val.status_option = ""V"";
            }

            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Filter = obj_val;
            var colCount = $(""#icdprogress_grid"").find('.k-grid-header colgroup > col').length;
        }
        catch (err) {
            javascript_log4");
            WriteLiteral(@"j_root(arguments.callee.name, err);
        }
    }


</script>

<script>

    function listRefreshicd() {
        debugger;
        try {
            setlocalStorage('flt_condition', """");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function listclear() {
        try {
            listgrid([]);

            $(""#cmb_icdfpocode"").empty;

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<style>
    .k-footerTemplate {
        text-align: right;
    }
</style>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
