#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\Share\Share.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e6ce38a11e97813dc2fe02ad6184771e84b816a3"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Share_Share), @"mvc.1.0.view", @"/Views/Share/Share.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e6ce38a11e97813dc2fe02ad6184771e84b816a3", @"/Views/Share/Share.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_Share_Share : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("ShareCert_Dsptch_form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveShareDespatch_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/saveShareDespatch_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Share_App_retrieveShareDespatch_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Share_App_saveShareDespatch_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/ShareCertificateDispatch.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\Share\Share.cshtml"
  
    ViewBag.Form = "Share Certificate Despatch";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e6ce38a11e97813dc2fe02ad6184771e84b816a36857", async() => {
                WriteLiteral(@"
    <div class=""panel panel-default"">
        <div class=""panel-body"" style=""padding-top:6px;padding-bottom:2px"">
            <div class=""row"" style=""padding-bottom:15px"">
                <div class=""col-sm-6"">
                    <div class=""form-group"">
                        <label for=""cmb_share"" class=""col-sm-4 control-label required"">Despatch Status:</label>
                        <div class=""col-sm-5"">
                            <input id=""cmb_share"" name=""In_despatch_status"" data-role=""filtercombo"" style=""width:100%"" />
                        </div>
                       
                    </div>
                </div>

                <div class=""col-xs-6"">
                    <div class=""form-group"">
                        <label for=""txtValidity"" class="" col-md-4 control-label "">Despatch Date:</label>
                        <div class="" col-sm-4"">
                            <input class=""cusDate"" data-role='datepicker' id=""txtValidity"" name=""In_despatch_date"" onkeypress");
                WriteLiteral(@"=""return date_validate(event)"" data-checkdate-msg=""Enter Valid Date"" name=""valid_until"" style=""width:100%"" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                        </div>
                        <div class="" col-sm-2"">
                            <input type=""checkbox"" id=""apply_all""> Apply to all
                        </div>
                        <button");
                BeginWriteAttribute("title", " title=\"", 1613, "\"", 1621, 0);
                EndWriteAttribute();
                WriteLiteral(@" data-placement=""top"" data-toggle=""tooltip"" class=""btn btn-info"" type=""button"" data-original-title=""Refresh"" onclick=""fetchSharecert()""> <span class=""glyphicon glyphicon-refresh""></span></button>
                    </div>
                </div>

            </div>
            <div class=""col-xs-12"">
                <div id=""grid_Sahre_Cert_disp_list"">
                </div>
            </div>
        </div>

    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e6ce38a11e97813dc2fe02ad6184771e84b816a310396", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e6ce38a11e97813dc2fe02ad6184771e84b816a311436", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e6ce38a11e97813dc2fe02ad6184771e84b816a312476", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e6ce38a11e97813dc2fe02ad6184771e84b816a313516", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e6ce38a11e97813dc2fe02ad6184771e84b816a314556", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e6ce38a11e97813dc2fe02ad6184771e84b816a315596", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>
    var permission = """";
    $(document).ready(function () {
        master_userRoleNew2();
        kendodate_format()
        var data = [];
        gridShareCertDisp(data);

        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $(""#ShareCert_Dsptch_form"");
        kendo.init(container);
        container.kendoValidator({
            rules: {
                checkdate: function (input) {
                    if (input.attr(""data-role"") == ""datepicker"") {
                        var res = isDate(input.val());
                        return res;
                    }
                    else {
                        return true;
                    }
                }
            }
        });
        $(""#RIform"").hide();
        $(""#FPOform"").hide();
        load_master_code();
        var share_dis = """";
        $(""#cmb_share"").empty();
        share_dis = grid_comboScreen_mastercodes(""QCD_SHA_CERT_DESP_STAT"");
        filter_com");
            WriteLiteral(@"bobox(""cmb_share"", share_dis);

        Screen_Id = ""SHRDIS"";
        permission = sec_Master_Permission(Screen_Id);
        $(""#txtValidity"").kendoDatePicker({
            max: new Date(), // sets max date to Jan 1st, 2013
            format: ""dd/MM/yyyy""
        });
    });
</script>
<script>
    function load_master_code() {
        var data = {};
        data.screen_Id = ""SHRDIS"";
        var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));
    }

    $(function () {
        $('#cmb_share').change(function () {
            var opt = $(this).val();
            if (opt == 'QCD_SHA_CERT_DESP_PEND') {
                $('#divUserRole3 #btnnew').attr(""disabled"", false);
                $('#apply_all').removeAttr(""disabled"");
                //fetchSharecert();

            } else {
                // $('#divUserRole3 #btnnew').hide();
                $('#divUserRole3 #btnnew').attr(""disabled"", true);
                $('#apply_all').attr(""checked"", f");
            WriteLiteral(@"alse);
                $('#apply_all').attr(""disabled"", true);
               // fetchSharecert();

            }
        });
    });

</script>
<script>
    //var data = [];
    function gridShareCertDisp(data) {
        try {
            $(""#grid_Sahre_Cert_disp_list"").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_shareapp_date: { type: ""string"", editable: false },
                                In_shareapp_no: { type: ""string"", editable: false },
                                In_member_name: { type: ""string"", editable: false },
                                In_despatch_status: { type: ""string"", editable: true },
                                In_certificate_no: { type: ""string"", editable: false },
                                In_fpomember_code: { type: ""string"", editable: false },
                               ");
            WriteLiteral(@" In_despatch_date: { type: ""date"", editable: true },
                                In_despatch_awb_no: { type: ""string"", editable: true },
                                In_despatch_remark: { type: ""string"", editable: true },
                                In_mode_flag: { type: ""string"", defaultValue: ""I"" }
                            }
                        }
                    }
                },

                height: 400,
                groupable: false,
                sortable: true,
                edit: OnEdit,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: ""In_shareapp_rowid"",
                        title: ""shareapp_rowid"",
                        hidden: true
                    },
                   
                    {
                        field: ""In_shareapp_no"",
                        title: ""Application No"",
                        width: 100
        ");
            WriteLiteral(@"            },
                    {
                        field: ""In_shareapp_date"",
                        title: ""Applied Date"",
                        width: 100
                    },
                    {
                        field: ""In_member_name"",
                                            
                        title: ""ShareHolder Name"",
                        width: 100
                    },
                    {
                        field: ""In_fpomember_code"",
                        title: ""Member ID"",
                        width: 100
                    },
                    {
                        field: ""In_farmer_code"",
                        title: ""farmer_code"",
                        hidden: true
                    },
                    {
                        field: ""In_certificate_no"",
                        title: ""Share Certificate No"",
                        width: 100
                    },
                    {
                ");
            WriteLiteral(@"        field: ""In_despatch_date"",
                        title: ""Despatched On"",
                        width: 100,
                        format: ""{0:dd/MM/yyyy}"",
                    },
                    {
                        field: ""In_despatch_awb_no"",
                        title: ""Despatch Reference No"",
                        width: 100
                    },
                    {
                        field: ""In_process_status"",
                        title: ""process_status"",
                        hidden: true
                    },
                    {
                        field: ""In_process_status_desc"",
                        title: ""Despatch Status"",
                        editor: function (container, options) {
                            combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""In_process_status"", ""grid_Sahre_Cert_disp_list"")
                        },
                        width: 100
       ");
            WriteLiteral(@"             },
                    {
                        field: ""In_despatch_remark"",
                        title: ""Remarks"",
                        width: 100
                    },
                    {
                        field: ""In_row_timestamp"",
                        title: ""row_timestamp"",
                        hidden: true
                    },
                    {
                        field: ""In_mode_flag"",
                        title: ""Mode"",
                        hidden: true
                    }],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }

    load_master_code();
    In_process_status_desc_list = grid_comboScreen_mastercodes(""QCD_SHA_CERT_DESP_STAT"");
    //payment_status_desc_list = grid_comboScreen_mastercodes(""QCD_STAT_PYMT"");

    function OnEdit(e) {
        setDefaultValues(e);

        e.container.find(""input[name='In_despatch_date']"").kendoDatePicker({
    ");
            WriteLiteral(@"        max: new Date(), // sets max date to Jan 1st, 2013
            format: ""dd/MM/yyyy""
        });

    }



</script>
<script>
    function fetchSharecert() {
        var mandatory_check = true;

        var grid_validate_msg = """";

        if ($('#cmb_share').data(""kendoComboBox"").value() == """") {
            grid_validate_msg += ""Despatch Status cannot be blank <br>"";
            mandatory_check = false;
        }

        if (mandatory_check == false) {
            kendoAlert(grid_validate_msg);
            return false;
        }
        var formval = form_Serialize(""ShareCert_Dsptch_form"");
        var obj_val = JSON.parse(formval);
        var org_id = getlocalStorage('org_id');
        obj_val.fpoorgn_code = org_id;
        obj_val.In_despatch_date = $(""#txtValidity"").val();
        if (obj_val.hasOwnProperty('In_despatch_date')) {
            if (obj_val.In_despatch_date != '')
                obj_val.In_despatch_date = getFormated_StringDate(obj_val.In_despatch_da");
            WriteLiteral(@"te);
            else
                obj_val.In_despatch_date = ""0"";

        }


        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Header = obj_val;
        var Context = data.context;
        $.ajax({
            type: ""POST"",
            data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, fpoorgn_code: Context.Header.fpoorgn_code, despatch_status: Context.Header.In_despatch_status, despatch_date: Context.Header.In_despatch_date }),
            url: ""/Share/Sharefetch"",
            dataType: ""json"",
            contentType: 'application/json; charset=utf-8',
            success: function (response) {
                debugger;
                if (response.context != null) {
                    generate_Share_dispatch_detail(response.context.Detail);
                }
                else {

                }
            },
            error: function (er) {
           ");
            WriteLiteral(@"     alert(er)
                console.log(er)
            }

        });
        var colCount = $(""#grid_Sahre_Cert_disp_list"").find('.k-grid-header colgroup > col').length;

        //If There are no results place an indicator row
        if (($(""#grid_Sahre_Cert_disp_list"").data(""kendoGrid"").dataSource._view.length == 0) && (obj_val.despatch_status == ""QCD_SHA_CERT_DESP_PEND"")) {
            $(""#grid_Sahre_Cert_disp_list"").find('.k-grid-content tbody')
                .append('<tr class=""kendo-data-row""><td colspan=""' +
                    colCount +
                    '"" style=""text-align:center; padding-top:10px;background-color:#AFE4FA""><b> There are no printed FPO Share certificates awaiting for despatch </b></td></tr>');
        }
        else if (($(""#grid_Sahre_Cert_disp_list"").data(""kendoGrid"").dataSource._view.length == 0) && (obj_val.despatch_status == ""QCD_SHA_CERT_DESP_DONE"")) {
            $(""#grid_Sahre_Cert_disp_list"").find('.k-grid-content tbody')
                .append('<");
            WriteLiteral(@"tr class=""kendo-data-row""><td colspan=""' +
                    colCount +
                    '"" style=""text-align:center; padding-top:10px;background-color:#AFE4FA""><b> There are no Despatch completed FPO Share certificates lists.</b></td></tr>');
        }

        return false;
    }

    function GridValidation() {
        var grid_val = JSON.stringify($(""#grid_Sahre_Cert_disp_list"").data().kendoGrid._data);
        var Bind = {};
        Bind = grid_val;
        var result = JSON.parse(Bind);

        if (result.length == 0) {
            kendoAlert(""Atleast one record needs to be entered"");
            return false;
        }
        var datecount = 0;
        var refcount = 0;
        var Nval = 0;
        $.each(result, function (index, value) {

            if (result[index].In_process_status == ""QCD_SHA_CERT_DESP_DONE"") {
                if ((result[index].In_despatch_date == null) && (result[index].In_despatch_awb_no == """")) {

                    datecount++;
           ");
            WriteLiteral(@"         refcount++;
                }
                else if ((result[index].In_despatch_date != null) && (result[index].In_despatch_awb_no == """")) {
                    refcount++;
                }
                else if ((result[index].In_despatch_date == null) && (result[index].In_despatch_awb_no != """")) {
                    datecount++;
                }

            }
            else {
                Nval++;
            }

        });


        if (datecount > 0) {
            kendoAlert(""Despatch Date Cannot be Empty"");

        }
        if (refcount > 0) {
            kendoAlert(""Despatch ref.no Cannot be Empty"");
        }
        if (datecount + refcount > 0) {
            return false;
        }
        if (Nval == result.length) {
            kendoAlert(""Change the Despatch Status"");
            return false;
        }
        else if (datecount + refcount == 0) {
            return true;
        }

    }

    function save() {
        debugger;
      ");
            WriteLiteral(@"  if (GridValidation()) {


            var formval = form_Serialize(""ShareCert_Dsptch_form"");
            var obj_val = JSON.parse(formval);
            var org_id = getlocalStorage('org_id');
            obj_val.In_fpoorgn_code = org_id;
            if (obj_val.hasOwnProperty('In_despatch_date')) {
                if (obj_val.In_despatch_date != '')
                    obj_val.In_despatch_date = getFormated_StringDate(obj_val.In_despatch_date);
            }
            var grid_val = JSON.stringify($(""#grid_Sahre_Cert_disp_list"").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            if (result.length == 0) {
                kendoAlert(""Atleast one record needs to be entered"");
                //mandatory_check = false;
                return false;
            }
            $.each(result, function (index, value) { 
                var shareapp_rowid = value.In_shareapp_rowid;
                if (shareapp");
            WriteLiteral(@"_rowid == undefined) {
                    result[index].In_shareapp_rowid = ""0"";
                }

                if (result[index].In_despatch_date == null) {
                    var d1 = new Date();
                    var date1 = kendo.parseDate(d1);
                    value = kendo.toString(date1, ""yyyy/MM/dd"");
                    result[index].In_despatch_date = value
                }
                else {
                    var d = value.In_despatch_date;
                    var date = kendo.parseDate(d);
                    value = kendo.toString(date, ""yyyy/MM/dd"");
                    result[index].In_despatch_date = value;
                }


                var d1 = new Date();
                var date1 = kendo.parseDate(d1);
                value1 = kendo.toString(date1, ""yyyy/MM/dd"");
                result[index].In_row_timestamp = value1;

                var mmode = result[index].In_mode_flag;
                if (mmode == ""S"") {
                    result[index");
            WriteLiteral(@"].In_mode_flag = ""U"";
                }



            });
            var obj_grid_val = result;
            var data_save = {};
            data_save.context = WebAPIProxy.getContext();

             data_save.context.Header = obj_val;
            data_save.context.Detail = obj_grid_val;
            var Context = data_save.context;
            $.ajax({
                type: ""POST"",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header, Detail: Context.Detail }),
                url: ""/Share/ShareSave"",
                dataType: ""json"",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    var Res = JSON.parse(response);
                    if (Res.context != null) {
                        kendoAlert(""Dispatch Details saved successfully"");
                        get_Share_dispatch_details();
         ");
            WriteLiteral(@"           }
                    else {
                        kendoAlert(Res.ApplicationException.errorDescription);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });

        }
        else {
            return false;
        }
    }

    function generate_Share_dispatch_detail(res) {
        if ($(""#txtValidity"").val() != """") {
            var date = $(""#txtValidity"").val();
            var code = date.split(""/"");
            var applydate = code[1] + '/' + code[0] + '/' + code[2];
        }
        if (res != null) {
            if ($('#apply_all').is(':checked')) {
                if (applydate != """" && applydate != undefined) {
                    var result = changedataType(res);
                    $.each(result, function (index, value) {

                        var date = kendo.parseDate(applydate);
                        value = kendo.to");
            WriteLiteral(@"String(date, ""MM/dd/yyyy"");
                        result[index].In_despatch_date = value;
                    });
                    if (result.length == 0) {
                        var data = changedataType(res);
                        gridShareCertDisp(data);
                    }
                    else {
                        gridShareCertDisp(result);
                    }
                }

                else {

                    var data = changedataType(res);
                    $.each(data, function (index, value) {

                        var d = value.In_despatch_date;
                        var date = kendo.parseDate(d);
                        value = kendo.toString(date, ""MM/dd/yyyy"");
                        data[index].In_despatch_date = value;
                    });
                    gridShareCertDisp(data);
                }

            }
            else {

                var data = changedataType(res);
                $.each(data, function (i");
            WriteLiteral(@"ndex, value) {

                    var d = value.In_despatch_date;
                    var date = kendo.parseDate(d);
                    value = kendo.toString(date, ""MM/dd/yyyy"");
                    data[index].In_despatch_date = value;
                });
                gridShareCertDisp(data);
            }
        }
        else {
            gridShareCertDisp([]);
        }

    }

    function get_Share_dispatch_details() {
        fetchSharecert();
    }
</script>

<script>
    $('#apply_all').click(function () {
        if ($(this).is(':checked')) {
            if ($(""#txtValidity"").val() != """") {
                var date = $(""#txtValidity"").val();
                var code = date.split(""/"");
                var applydate = code[1] + '/' + code[0] + '/' + code[2];
            }

            if (applydate != """" && applydate != undefined) {

                var grid_val = JSON.stringify($(""#grid_Sahre_Cert_disp_list"").data().kendoGrid._data);
                var Bind ");
            WriteLiteral(@"= {};
                Bind = grid_val;
                var res = JSON.parse(Bind);
                var result = changedataType(res);
                $.each(result, function (index, value) {

                    var date = kendo.parseDate(applydate);
                    value = kendo.toString(date, ""MM/dd/yyyy"");
                    result[index].In_despatch_date = value;
                });
                if (result.length == 0) {
                    var data = changedataType(res);
                    gridShareCertDisp(data);
                }
                else {
                    gridShareCertDisp(result);
                }
            }

            else {

                var data = changedataType(res);
                $.each(data, function (index, value) {

                    var d1 = value.In_despatch_date;
                    //var fncode1 = d1.split(""/"");
                    //var correctdate1 = fncode1[1] + '/' + fncode1[0] + '/' + fncode1[2];

                    va");
            WriteLiteral(@"r date = kendo.parseDate(d1);
                    value = kendo.toString(date, ""MM/dd/yyyy"");
                    data[index].In_despatch_date = value;
                });
                gridShareCertDisp(data);
            }

        }
    });
</script>

<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
