#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\DividendStructureDefinition\DividendStructureDefinitionForm.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d69df8e74ddb9e3d51204342c8493031664c6d35"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DividendStructureDefinition_DividendStructureDefinitionForm), @"mvc.1.0.view", @"/Views/DividendStructureDefinition/DividendStructureDefinitionForm.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d69df8e74ddb9e3d51204342c8493031664c6d35", @"/Views/DividendStructureDefinition/DividendStructureDefinitionForm.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_DividendStructureDefinition_DividendStructureDefinitionForm : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("Dividend_Structure"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Dividend_Management_retrieveDividendStructure_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Dividend_Management_retrieveDividendStructureList_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Dividend_Management_saveDividendStructure_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveDividendStructure_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveDividendStructureList_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/saveDividendStructure_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/DividendStructure.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/HelpFile.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\DividendStructureDefinition\DividendStructureDefinitionForm.cshtml"
  
    ViewBag.Form = "Dividend Structure Definition";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d69df8e74ddb9e3d51204342c8493031664c6d359054", async() => {
                WriteLiteral(@"
    <div class=""panel panel-default"">
        <div class=""row"" style=""padding-top:6px;padding-bottom:2px"">
            <section class=""col-md-12"">
                <div id=""tab_list"" class=""col-md-12"">
                    <ul class=""nav nav-tabs"">
                        <li class=""active"">
                            <a href=""#Structuredetalis""");
                BeginWriteAttribute("id", " id=\"", 571, "\"", 576, 0);
                EndWriteAttribute();
                WriteLiteral(@" role=""tab"" data-toggle=""tab"">
                                Dividend Structure
                            </a>
                        </li>
                    </ul>
                    <div class=""tab-content"">
                        <div class=""tab-pane fade active in"" id=""Structuredetalis"">
                            <div class=""panel panel-default"">
                                <div class=""panel-body"" style=""padding-top:6px;padding-bottom:2px"">
                                    <div class=""row"" style=""padding-top:5px; padding-bottom:5px"">
                                        <div class=""col-sm-4"">
                                            <div class="" form-group"">
                                                <label for=""txtapplied_on"" class="" col-sm-5 control-label required"">Record Date</label>
                                                <div class="" col-sm-6"">
                                                    <input class=""cusDate"" data-role='datepicker' id=""txtapp");
                WriteLiteral(@"lied_on"" name=""report_date"" onkeypress=""return date_validate(event)"" data-checkdate-msg=""Enter Valid Date"" name=""valid_until"" style=""width:100%"" />
                                                    <span data-for='valid' class='k-invalid-msg'></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""row"" style=""padding-top:5px; padding-bottom:5px"">
                                        <div class=""col-sm-4"">
                                            <div class=""form-group"">
                                                <label for=""cmb_fy"" class=""col-sm-5 control-label required"">Financial year</label>
                                                <div class=""col-sm-6"">
                                                    <input id=""cmb_fy"" name=""finyear_code"" style=""width: 100%"" data-role=""filtercomb");
                WriteLiteral(@"o"">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""row"" style=""padding-top:5px; padding-bottom:5px"">
                                        <div class=""col-sm-4"">
                                            <div class="" form-group"">
                                                <label for=""txtFrom"" class=""  col-sm-5 control-label required"">Period From</label>
                                                <div class="" col-sm-6"">
                                                    <input class=""cusDate"" data-role='datepicker' id=""txtFrom"" name=""period_from"" onkeypress=""return date_validate(event)"" data-checkdate-msg=""Enter Valid Date"" style=""width:100%"" />
                                                    <span data-for='valid' class='k-invalid-msg'></span>
                                          ");
                WriteLiteral(@"      </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""row"" style=""padding-top:5px; padding-bottom:5px"">
                                        <div class=""col-sm-4"">
                                            <div class=""form-group"">
                                                <label for=""txtTo"" class=""col-sm-5 control-label required"">Period To</label>
                                                <div class=""col-sm-6"">
                                                    <input class=""cusDate"" data-role='datepicker' id=""txtTo"" name=""period_to"" onkeypress=""return date_validate(event)"" data-checkdate-msg=""Enter Valid Date"" style=""width:100%"" />
                                                    <span data-for='valid' class='k-invalid-msg'></span>
                                                </div>
                                            <");
                WriteLiteral(@"/div>
                                        </div>
                                    </div>
                                    <div class=""row"" style=""padding-top:5px; padding-bottom:5px"">
                                        <div class=""col-sm-4"">
                                            <div class=""form-group"">
                                                <label for=""cmb_divident"" class=""col-sm-5 control-label required"">Dividend Type</label>
                                                <div class=""col-sm-6"">
                                                    <input id=""cmb_divident"" name=""dividend_type"" style=""width: 100%"" data-role=""filtercombo"">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""row"" style=""padding-top:5px; padding-bottom:5px"">
                                        ");
                WriteLiteral(@"<div class=""col-sm-4"">
                                            <div class="" form-group"">
                                                <label for=""txtDividentPercent"" class="" col-sm-5 control-label required"">Dividend %</label>
                                                <div class="" col-sm-6"">
                                                    <input id=""txtDividentPercent"" name=""dividend_percent"" type=""text"" class=""form-control"" data-toggle=""tooltip"" data-placement=""bottom""");
                BeginWriteAttribute("value", " value=\"", 6191, "\"", 6199, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""row"" style=""padding-top:5px; padding-bottom:5px"">
                                        <div class=""col-xs-12"">
                                            <div id=""Bankgrid""></div>
                                        </div>
                                    </div>
                                    <div class=""col-sm-4"">
                                        <div class=""form-group"" style=""display:none;"">
                                            <button");
                BeginWriteAttribute("title", " title=\"", 6929, "\"", 6937, 0);
                EndWriteAttribute();
                WriteLiteral(@" data-placement=""top"" data-toggle=""tooltip"" class=""btn btn-info"" type=""button"" data-original-title=""Refresh""> <span class=""glyphicon glyphicon-refresh""></span></button>
                                        </div>
                                    </div>

                                    <div class=""col-sm-4"">
                                        <input type=""hidden"" name=""declared_date"" id=""declared_date""");
                BeginWriteAttribute("value", " value=\"", 7362, "\"", 7370, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                        <input type=\"hidden\" name=\"payor_bank_code\" id=\"payor_bank_code\"");
                BeginWriteAttribute("value", " value=\"", 7478, "\"", 7486, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                        <input type=""hidden"" id=""dividendstru_rowid"" name=""dividendstru_rowid"" />
                                        <input type=""hidden"" id=""payor_bank_acc_type"" name=""payor_bank_acc_type"" />
                                        <input type=""hidden"" name=""payor_bank_acc_no"" id=""payor_bank_acc_no""");
                BeginWriteAttribute("value", " value=\"", 7830, "\"", 7838, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                        <input type=\"hidden\" name=\"payor_ifsc_code\" id=\"payor_ifsc_code\"");
                BeginWriteAttribute("value", " value=\"", 7946, "\"", 7954, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                        <input type=\"hidden\" name=\"status_code\" id=\"status_code\"");
                BeginWriteAttribute("value", " value=\"", 8054, "\"", 8062, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                        <input type=\"hidden\" name=\"status_desc\" id=\"status_desc\"");
                BeginWriteAttribute("value", " value=\"", 8162, "\"", 8170, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                        <input type=\"hidden\" name=\"row_timestamp\" id=\"row_timestamp\"");
                BeginWriteAttribute("value", " value=\"", 8274, "\"", 8282, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                        <input type=\"hidden\" name=\"fpoorgn_code\" id=\"fpoorgn_code\"");
                BeginWriteAttribute("value", " value=\"", 8384, "\"", 8392, 0);
                EndWriteAttribute();
                WriteLiteral(">\r\n                                        <input type=\"hidden\" name=\"mode_flag\" id=\"mode_flag\"");
                BeginWriteAttribute("value", " value=\"", 8488, "\"", 8496, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d69df8e74ddb9e3d51204342c8493031664c6d3521375", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d69df8e74ddb9e3d51204342c8493031664c6d3522415", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d69df8e74ddb9e3d51204342c8493031664c6d3523455", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d69df8e74ddb9e3d51204342c8493031664c6d3524495", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d69df8e74ddb9e3d51204342c8493031664c6d3525535", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d69df8e74ddb9e3d51204342c8493031664c6d3526575", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d69df8e74ddb9e3d51204342c8493031664c6d3527615", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d69df8e74ddb9e3d51204342c8493031664c6d3528656", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d69df8e74ddb9e3d51204342c8493031664c6d3529697", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>
    click_act_name = ""DividendStructureDefinition"";
    click_ctrl_name = ""DividendStructureDefinition"";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>
<script>
    $(document).ready(function () {
        debugger;
        kendodate_format();
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $(""#Dividend_Structure"");
        kendo.init(container);
        container.kendoValidator({
        });
        Screen_Id = ""SETUPDIV"";
        permission = sec_Permission(Screen_Id);
        $('bottom_menus').hide();
        $('#divUserRole #btnRnew').hide();
        $(""#frmlayerdiv #txtcommon_id"").hide();
        $(""#frmlayerdiv #common_id"").hide();

        setlocalStorage(""status"", ""Active"");
        setlocalStorage('status_code', ""A"");

        load_master_code();
        Bankgrid([]);
        var FY = """";
        $(""#cmb_fy"").empty();
        FY = grid_comboScreen_mastercodes(""FY"");
        filter_combob");
            WriteLiteral(@"ox(""cmb_fy"", FY);

        var startDate = $(""#txtFrom"").kendoDatePicker({
            format: ""dd/MM/yyyy""
        });
        $(""#txtFrom"").kendoDatePicker({
            max: new Date(),
            format: ""dd/MM/yyyy""
            , change: onchange
        });
        function onchange() {
            var newDateTime = startDate.val().split('/');
            var mindate = newDateTime[1] + '/' + newDateTime[0] + '/' + newDateTime[2];
            $(""#txtTo"").kendoDatePicker({
                format: ""dd/MM/yyyy"",
                min: mindate
            });
        };

        $(""#txtTo"").change(function () {
            var startDate = document.getElementById(""txtFrom"").value;
            var endDate = document.getElementById(""txtTo"").value;
            if ((Date.parse(endDate) < Date.parse(startDate))) {
                alert(""Period To should be greater than Period From"");
                document.getElementById(""txtTo"").value = """";
            }
        });

        $('#txtDi");
            WriteLiteral(@"videntPercent').keypress(function (event) {
            var $this = $(this);
            if ((event.which != 46 || $this.val().indexOf('.') != -1) &&
                ((event.which < 48 || event.which > 57) &&
                    (event.which != 0 && event.which != 8))) {
                event.preventDefault();
            }

            var text = $(this).val();
            if (text.indexOf('.') != -1) {
                setTimeout(function () {
                    if ($this.val().substring($this.val().indexOf('.')).length > 3) {
                        $this.val($this.val().substring(0, $this.val().indexOf('.') + 3));
                    }
                }, 1);
                if ((text.indexOf('.') != -1) &&
                    (text.substring(text.indexOf('.')).length > 2) &&
                    (event.which != 0 && event.which != 8) &&
                    ($(this)[0].selectionStart >= text.length - 2)) {
                    event.preventDefault();
                }
            }
    ");
            WriteLiteral(@"        else {
                if ($this.val().length > 2) {
                    if (event.which != 46) {
                        event.preventDefault();
                    }
                }
            }

        });

        $('#txtDividentPercent').bind(""paste"", function (e) {
            var text = e.originalEvent.clipboardData.getData('Text');
            if ($.isNumeric(text)) {
                if ((text.substring(text.indexOf('.')).length > 3) && (text.indexOf('.') > -1)) {
                    e.preventDefault();
                    $(this).val(text.substring(0, text.indexOf('.') + 3));
                }
            }
            else {
                e.preventDefault();
            }
        });

        var Div_type = """";
        $(""#cmb_divident"").empty();
        Div_type = grid_comboScreen_mastercodes(""QCD_SHA_DIV_TYPE"");//QCD_SHA_DIV_TYPE
        filter_combobox(""cmb_divident"", Div_type);

        if (getlocalStorage('btn_clk_val') == ""Create"") {
            $('#d");
            WriteLiteral(@"ivCreate #review').hide();
            $(""#txtcommon_id"").hide();
            $(""#mode_flag"").val(""I"");
            $(""#bottom_menus"").hide();
            $(""#DocStat"").val(""New"");

        }
        else if (getlocalStorage('btn_clk_val') == ""View"" || getlocalStorage('btn_clk_val') == ""Edit"") {
            $('#divEdit #reviewEd').hide();
            if (getlocalStorage(""ls_pageList"") != undefined) {
                var data = getlocalStorage(""ls_pageList"");
                var formval = form_Serialize(""Bank_form"");
                var obj_val = JSON.parse(formval);
                obj_val.IOU_dividendstru_rowid = data.Out_dividendstru_rowid;
                obj_val.IOU_fpoorgn_code = data.Out_fpoorgn_code;
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                //retrieve_DividendStructure_details(data);
                var Context = data.context;
                $.ajax({
                    ty");
            WriteLiteral(@"pe: ""POST"",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header }),
                    url: ""/DividendStructureDefinition/SingleFetchData"",
                    dataType: ""json"",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;

                        if (response.context != null) {
                            generate_DividendStructure_header(response.context.Header);
                        }
                        else {
                            console.log(""Issue where Dropped"");
                        }
                    },
                    error: function (er) {
                        console.log(er);
                    }

                });


                $(""#mode_flag"").val(""S"");
                setlocalStorage('doc_no', $(""#fpoorgn_code"").val());");
            WriteLiteral(@"
                setlocalStorage('doc_row_id', $(""#dividendstru_rowid"").val());
            }
        }
    });
</script>
<script>
    var bank_acc_type_desc_list = """";
    var bank_desc_list = """";
    var status_desc_list = """";
    function Bankgrid(data) {
        try {
            $(""#Bankgrid"").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                bank_acc_no: { type: ""string"", validation: { required: { message: ""Account. No cannot be blank"" } } },
                                bank_acc_type: { type: ""string"", required: true },
                                branch_code: { type: ""string"" },
                                bank_acc_type_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is");
            WriteLiteral(@"(""[name='bank_acc_type_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Bank Account cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                bank_code: { type: ""string"", required: true },
                                bank_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='bank_desc']"")) {
     ");
            WriteLiteral(@"                                           var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Bank cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },


                                ifsc_code: { type: ""string"", editable: false, validation: { required: { message: ""IFSC Code cannot be blank"" } } },


                                bank_acc_purpose: { type: ""string"", required: true },
                                bank_acc_purpose_desc: {
                                    validation: {
                                        dropdow");
            WriteLiteral(@"nlistValidation: function (input) {
                                            if (input.is(""[name='bank_acc_purpose_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Account Purpose cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },


                                status_code: { type: ""string"", defaultValue: ""A"" },
                                status_desc: { type: ""string"", defaultValue: getlocalStorage('status'), editable: false },
                                mode_fl");
            WriteLiteral(@"ag: { type: ""string"", defaultValue: ""I"" }
                            }
                        }
                    }
                },
                toolbar: ""<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>"",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#Bankgrid').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
                        {
                            name: ""Delete"",
                            id: ""Delete"",
                            imageClass: ""fa fa-close"",
                            click: function (e) {
    ");
            WriteLiteral(@"                            var grid = $(""#Bankgrid"").data(""kendoGrid"");
                                var dataItem = $(""#Bankgrid"").data(""kendoGrid"").dataItem($(e.target).closest(""tr""));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },

                    ], title: ""Action"", width: ""35px"",
                },
                {
                    field: ""bank_code"",
                    title: ""BANK"",
                    hidden: true,
                    width: 1
                },
                {
                    field: ""bank_desc"",
                    title: ""Bank"",
                    editor: function (container, options) {
                        combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""bank_code"", ""Bankgrid"")
                    },
                    width: 100
                },
");
            WriteLiteral(@"                {
                    field: ""branch_code"",
                    title: ""Branch"",
                    editor: '<div class=""input-group input-group-sm""><input type=""text"" readonly name=""branch_code"" maxlength=""50"" style=""width:190px;color:black""  onkeypress=""return speical_char(event)"" data-bind=""value:branch_code""/><span class=""input-group-btn"" style=""padding-right: 150px;""><a class=""HelpWindow fa fa-search fa-lg"" data-toggle=""modal"" href=""/HelpFilter/HelpFilter"" hdrtitle=""Bank Details"" searchid=""S08"" data-target=""#HelpModal"" onclick=transfer(this,""grid"",""Bankgrid"",""Bankgrid"") title=""Search"" style=""font-size: 15px; padding-left: 10px;""></a> </span> </div>',
                    width: 180,
                },
                {
                    field: ""ifsc_code"",
                    title: ""IFSC Code"",
                    width: 100
                },
                {
                    field: ""bank_acc_no"",
                    title: ""Account No"",
                    width: 10");
            WriteLiteral(@"0,
                    editor: function (container, options) {
                        numeric_editor(container, options.field, '16', '0');
                    },

                },
                {
                    field: ""dflt_cr_acc"",
                    title: ""Remarks"",
                    width: 100,
                    hidden: true
                },
                {
                    field: ""bank_acc_type"",
                    title: ""Account Type On"",
                    hidden: true,
                    width: 1
                },
                {
                    field: ""bank_acc_type_desc"",
                    title: ""Account Type"",
                    editor: function (container, options) {
                        combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""bank_acc_type"", ""Bankgrid"")
                    },
                    width: 100
                },
                {
                    field: ""ba");
            WriteLiteral(@"nk_acc_purpose"",
                    title: ""bank_acc_purpose"",
                    hidden: true
                },
                {
                    field: ""bank_acc_purpose_desc"",
                    title: ""Account Purpose"",
                    editor: function (container, options) {
                        combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""bank_acc_purpose"", ""Bankgrid"")
                    },
                    width: 100,
                    hidden: true
                },
                {
                    field: ""status_code"",
                    title: ""Status"",
                    hidden: true,
                    width: 1

                },
                {
                    field: ""status_desc"",
                    title: ""Status"",
                    editor: function (container, options) {
                        combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), opt");
            WriteLiteral(@"ions.field, ""status_code"", ""Bankgrid"")
                    },
                    width: 100
                },
                {
                    field: ""mode_flag"",
                    title: ""Mode"",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
        load_master_code();
        bank_acc_type_desc_list = grid_comboScreen_mastercodes(""QCD_BANKACCTYPE"");
        bank_desc_list = grid_comboScreen_mastercodes(""BANK"");
        bank_acc_purpose_desc_list = grid_comboScreen_mastercodes(""QCD_BANKACCPUR"");
    }

</script>

<script>
    function load_master_code() {
        try {
            debugger;
            var data = {};
            var context = WebAPIProxy.getContext();
            data.userId = context.userId
            data.orgnId = context.orgnId
            data.locnId = context.locnId
            data.local");
            WriteLiteral(@"eId = context.localeId
            data.screen_Id = ""SETUPDIV"";
            var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<script>
    function save() {
        debugger;
        try {
            var mandatory_check = true;
            if ($(""#mode_flag"").val() == ""S"") {
                $(""#mode_flag"").val('U');
            }
            var formval = form_Serialize(""Dividend_Structure"");
            var obj_val = JSON.parse(formval);
            if (obj_val.dividendstru_rowid == undefined || obj_val.dividendstru_rowid == '') {
                obj_val.IOU_dividendstru_rowid = 0;
            }
            else {
                obj_val.IOU_dividendstru_rowid = obj_val.dividendstru_rowid;
            }
            if (obj_val.status_code == undefined || obj_val.status_code == '') {
                obj_val.In_status_code ");
            WriteLiteral(@"= ""A"";
            }
            if (obj_val.hasOwnProperty('period_from')) {
                if (obj_val.period_from != '')
                    obj_val.In_period_from = getFormated_StringDate(obj_val.period_from);
            }
            if (obj_val.hasOwnProperty('period_to')) {
                if (obj_val.period_to != '')
                    obj_val.In_period_to = getFormated_StringDate(obj_val.period_to);
            }
            if (obj_val.hasOwnProperty('report_date')) {
                if (obj_val.report_date != '')
                    obj_val.In_report_date = getFormated_StringDate(obj_val.report_date);
            }
            if (obj_val.hasOwnProperty('declared_date')) {
                if (obj_val.declared_date != '')
                    obj_val.In_declared_date = getFormated_StringDate(obj_val.declared_date);
            }

            obj_val.In_dividend_percent = obj_val.dividend_percent;
            obj_val.In_dividend_type = obj_val.dividend_type;
            obj_val");
            WriteLiteral(@".In_finyear_code = obj_val.finyear_code;
            obj_val.In_mode_flag = obj_val.mode_flag;

            var org_id = getlocalStorage('org_id');
            obj_val.IOU_fpoorgn_code = org_id;
            var grid_val = JSON.stringify($(""#Bankgrid"").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            var grid_validate_msg = """";

            if (result.length == 0) {
                kendoAlert(""No bank details entered; cannot save the Dividend Setup"");
                mandatory_check = false;
                return false;
            }
            $.each(result, function (key, value) {
                if (value.bank_desc == """") {
                    grid_validate_msg += ""Bank Name cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (value.ifsc_code == """") {
                    grid_validate_msg += ""Ifsc Code cannot be blank <br>"";
                    ");
            WriteLiteral(@"mandatory_check = false;
                }
                if (value.bank_acc_no == """") {
                    grid_validate_msg += ""Bank Account No cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (value.bank_acc_type_desc == """") {
                    grid_validate_msg += ""Bank Account Type cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (mandatory_check == false) {
                    kendoAlert(grid_validate_msg);
                    return false;
                }
            });

            if (result.length > 1) {
                kendoAlert(""you can add one bank only"");
                return false;
            }
            if (mandatory_check == true) {
                $.each(result, function (index, value) {
                    var dividendstru_rowid = value.dividendstru_rowid;
                    if (dividendstru_rowid == undefined) {
                        result");
            WriteLiteral(@"[index].IOU_dividendstru_rowid = ""0"";
                    }
                    var mmode = result[index].mode_flag;
                    if (mmode == ""S"") {
                        result[index].In_mode_flag = ""U"";
                    } else {
                        result[index].In_mode_flag = result[index].mode_flag;
                    }

                });
                var obj_grid_val = result;

                obj_val.In_payor_bank_code = result[0].bank_code;
                obj_val.In_payor_bank_acc_type = result[0].bank_acc_type;
                obj_val.In_payor_bank_acc_no = result[0].bank_acc_no;
                obj_val.In_payor_ifsc_code = result[0].ifsc_code;

                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                //save_DividendStructure_details(data);

                var Context = data.context;

                $.ajax({
                    type: ""POST"",
                ");
            WriteLiteral(@"    data: JSON.stringify({ orgnId: Context.orgnId, locnId: Context.locnId, userId: Context.userId, localeId: Context.localeId, Header: Context.Header }),
                    url: ""/DividendStructureDefinition/SaveDividend"",
                    dataType: ""json"",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        debugger;
                        if (response != null) {
                            //generate_FpoMap_Map(response)
                            kendoAlert(""Dividend Structure Saved Successfully"");
                            get_div_struct_details(response.context.Header);
                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }
                });
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
     ");
            WriteLiteral(@"   }
    }

</script>
<script>
    function generate_DividendStructure_header(res) {
        debugger;
        try {

            if (res != null) {
                $(""#dividendstru_rowid"").val(res.IOU_dividendstru_rowid);
                $(""#fpoorgn_code"").val(res.IOU_fpoorgn_code);
                //var fromDate = res.In_period_from.split('/').reverse().join('/');
                var fromDate = res.In_period_from;
                $(""#txtFrom"").val(fromDate);
                //var toDate = res.In_period_to.split('/').reverse().join('/');
                var toDate = res.In_period_to;
                $(""#txtTo"").val(toDate);
                //var rec_date = res.In_report_date.split('/').reverse().join('/');
                var rec_date = res.In_report_date;
                $(""#txtapplied_on"").val(rec_date);
                $('#cmb_fy').data(""kendoComboBox"").value(res.In_finyear_code);
                $('#cmb_divident').data(""kendoComboBox"").value(res.In_dividend_type);
                $");
            WriteLiteral(@"(""#txtDividentPercent"").val(res.In_dividend_percent);
                $(""#DocStat "").val(res.In_status_desc);
                Bankgrid([]);
                var ifscbranch = res.In_payor_ifsc_code.split('/');
                var itemGrid = $(""#Bankgrid"").data(""kendoGrid"");
                var ds = { bank_code: res.In_payor_bank_code, bank_desc: res.In_payor_bank_desc, ifsc_code: ifscbranch[0], branch_code: ifscbranch[1], bank_acc_no: res.In_payor_bank_acc_no, dflt_cr_acc: '', bank_acc_type: res.In_payor_bank_acc_type, bank_acc_type_desc: res.In_payor_bank_acc_type_desc, status_code: res.In_status_code, status_desc: res.In_status_desc, mode_flag: res.In_mode_flag };
                itemGrid.dataSource.add(ds);
            }
            else {
                Bankgrid([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function fetch() {
        try {

            var formval = form_Serialize(""Dividend_Structur");
            WriteLiteral(@"e"");
            var obj_val = JSON.parse(formval);
            obj_val.period_from = $(""#txtFrom"").val();
            obj_val.period_to = $(""#txtTo"").val();

            if (obj_val.hasOwnProperty('period_from')) {
                if (obj_val.period_from != '')
                    obj_val.period_from = getFormated_StringDate(obj_val.period_from);
            }
            if (obj_val.hasOwnProperty('period_to')) {
                if (obj_val.period_to != '')
                    obj_val.period_to = getFormated_StringDate(obj_val.period_to);
            }
            var data_fetch = {};
            data_fetch.context = WebAPIProxy.getContext();
            data_fetch.context.Header = obj_val;
            retrieve_DividendStructure_details(data_fetch);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function get_div_struct_details(res) {
        try {
            var formval = form_Serialize(""Bank_form"");
            ");
            WriteLiteral(@"var obj_val = JSON.parse(formval);
            obj_val.IOU_dividendstru_rowid = res.IOU_dividendstru_rowid;
            obj_val.IOU_fpoorgn_code = res.IOU_fpoorgn_code;          
            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            //retrieve_DividendStructure_details(data);
            var Context = data.context;
            $.ajax({
                type: ""POST"",
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, Header: Context.Header }),
                url: ""/DividendStructureDefinition/SingleFetchData"",
                dataType: ""json"",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;

                    if (response.context != null) {
                        generate_DividendStructure_header(response.context.Header);
         ");
            WriteLiteral(@"           }
                    else {
                        console.log(""Issue where Dropped"");
                    }
                },
                error: function (er) {
                    console.log(er);
                }

            });
            $(""#mode_flag"").val('S');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>
<script>
    function grid_control() {
        var control_Name = [
            { ""dataCol"": ""branch_name"", ""grid_row_col"": ""branch_code"" },
            { ""dataCol"": ""ifsc_code"", ""grid_row_col"": ""ifsc_code"" },
            { ""dataCol"": """", ""grid_row_col"": ""bank_code"" },
            { ""dataCol"": """", ""grid_row_col"": ""bank_desc"" },
            { ""dataCol"": """", ""grid_row_col"": ""bank_acc_no"" },
            { ""da");
            WriteLiteral(@"taCol"": """", ""grid_row_col"": ""bank_acc_type"" },
            { ""dataCol"": """", ""grid_row_col"": ""bank_acc_type_desc"" },
            { ""dataCol"": """", ""grid_row_col"": ""bank_acc_purpose"" },
            { ""dataCol"": """", ""grid_row_col"": ""bank_acc_purpose_desc"" },
            { ""dataCol"": """", ""grid_row_col"": ""dflt_dr_acc"" },
            { ""dataCol"": """", ""grid_row_col"": ""status_code"" },
            { ""dataCol"": """", ""grid_row_col"": ""status_desc"" },
            { ""dataCol"": """", ""grid_row_col"": ""mode_flag"" },
            { ""dataCol"": """", ""grid_row_col"": ""uid"" },
        ];
        return control_Name
    }

    function controlName() {
        var control_Name = [
        ];
        return control_Name
    }

    function trans_input_data() {
        var trans_coll = [
            { ""trasfer"": ""NO"", ""dataCol"": """", ""controlId"": """", ""grid_id"": """", ""grid_row_col"": """" },
            { ""trasfer"": ""Yes"", ""dataCol"": ""bank_code"", ""controlId"": """", ""grid_id"": ""Bankgrid"", ""grid_row_col"": """" },

        ];
   ");
            WriteLiteral("     return trans_coll;\r\n    }\r\n</script>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
