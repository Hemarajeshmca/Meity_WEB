#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\Creditevalution\Category.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Creditevalution_Category), @"mvc.1.0.view", @"/Views/Creditevalution/Category.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bc2ee294a02c71a6001275cd712ef8fe0f7ef66c", @"/Views/Creditevalution/Category.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_Creditevalution_Category : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_questionaremap"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Credit_evalution_retrieveCreditevalutionSetup_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Credit_evalution_retrieveCreditevalutionSetupList_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Credit_evalution_saveCreditevalutionSetup_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveCreditevalutionSetup_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveCreditevalutionSetupList_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/saveCreditevalutionSetup_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/EvalutionMap.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/HelpFile.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/Common_func.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\Creditevalution\Category.cshtml"
  
    ViewBag.Form = "CE-Category & Questions Mapping";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c9184", async() => {
                WriteLiteral(@"
    <div class=""panel panel-default"">
        <div class=""panel-body"" style=""padding-top:6px;padding-bottom:2px"">
            <div class=""row"" style=""padding-bottom:15px"">

                <div class=""col-sm-4"">
                    <div class=""form-group"">
                        <label for=""cmbloan_type"" class=""col-sm-5 control-label required"">Loan Type:</label>
                        <div class=""col-sm-7"">
                            <input id=""cmbloan_type"" name=""loan_type"" style=""width: 100%"" onchange=""fetch()"">
                        </div>
                    </div>
                </div>
                <div class=""col-sm-4"">
                    <div class=""form-group"">
                        <label for=""txtRoleDesc"" class=""col-sm-5 control-label required"">Questionnaire Name:</label>
                        <div class=""col-sm-7"">
                            <input type=""text"" id=""txt_questionnaire"" name=""questionnaire"" class=""form-control"">
                        </div>
        ");
                WriteLiteral(@"                <input type=""hidden"" id=""evaluationmap_id"" name=""evaluationmap_id"" />
                        <input type=""hidden"" id=""mode_flag"" name=""mode_flag"" value=""I"">
                        <input type=""hidden"" id=""status_code"" name=""status_code"">
                        <input type=""hidden"" id=""row_timestamp"">
                    </div>
                </div>
                <div class=""col-xs-12"">
                    <div id=""grid_Drop_list"">
                    </div>
                </div>
            </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c12443", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c13483", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c14523", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c15563", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c16603", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c17643", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c18683", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c19724", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c20765", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bc2ee294a02c71a6001275cd712ef8fe0f7ef66c21806", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    $(document).ready(function () {

        // $(""#form_design"").css(""padding-top"", ""95px"");
        $("".file_attach"").attr(""hdrtitle"", ""CE-Category & Questions Mapping"");
        $("".notes"").attr(""hdrtitle"", ""CE-Category & Questions Mapping"");
        $(""#lblForm_menuid"").text(""FLCEQUES"");
        master_capital()
        kendodate_format();
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $(""#frm_questionaremap"");
        kendo.init(container);
        container.kendoValidator({
        });
        Screen_Id = ""FLCEQUES"";
        load_master_code();
        gridQuestionare([]);
        //loan type
        var loan_type = """";
        $(""#cmbloan_type"").empty();
        loan_type = grid_comboScreen_mastercodes(""QCD_LOANTYPE"");
        filter_combobox(""cmbloan_type"", loan_type);
        $("".create_item"").show();
        $(""#bottom_menus"").show();
        $(""#frmlayerdiv"").hide();

        if (getlocalStorage('btn_clk_val') == ""Crea");
            WriteLiteral(@"te"") {
            $('#divCreate #review').hide();
            $(""#bottom_menus"").hide();
            $(""#status_code"").val(""A"");
            $(""#DocStat"").val(""New"");

        }
        else if (getlocalStorage('btn_clk_val') == ""View"" || getlocalStorage('btn_clk_val') == ""Edit"") {
            if (getlocalStorage(""ls_pageList"") != undefined) {
                var data = getlocalStorage(""ls_pageList"");
                var formval = form_Serialize(""frm_questionaremap"");
                var obj_val = JSON.parse(formval);
                if (obj_val != undefined) {
                    obj_val.evaluationmap_id = data.evaluationmap_id;
                    obj_val.questionnaire = data.questionnaire;
                    obj_val.loan_type = data.loan_type;
                    $('#cmbloan_type').data(""kendoComboBox"").value(data.loan_type);
                    $(""#evaluationmap_id"").val(data.loanapp_rowid);
                    var data = {};
                    data.context = WebAPIProxy.getContext()");
            WriteLiteral(@";
                    data.context.Header = obj_val;
                    retrieve_CreditevalutionSetup_details(data);
                    $(""#txtMode"").val(""U"");
                    $(""#div_Comments"").show();
                    setlocalStorage('doc_no', $(""#cmbloan_type"").val());
                    //localStorage.docno = $(""#evaluationmap_id"").val();
                    setlocalStorage('doc_row_id', $(""#evaluationmap_id"").val());
                    $(""#cmbloan_type"").data(""kendoComboBox"").enable(false);
                    $(""#txt_questionnaire"").attr(""readonly"");
                    $(""#txt_questionnaire"").prop(""disabled"", true);
                }
            }
        }
        
    });


</script>
<script>
    function load_master_code() {
        try {
            debugger;
            var data = {};
            var context = WebAPIProxy.getContext();
            data.userId = context.userId
            data.orgnId = context.orgnId
            data.locnId = context.locnId
  ");
            WriteLiteral(@"          data.localeId = context.localeId
            data.screen_Id = ""FLCEQUES"";
            var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>
<script>
    click_act_name = ""CategoryList"";
    click_ctrl_name = ""Creditevalution"";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script>
    function gridQuestionare(data) {
        try {
            $(""#grid_Drop_list"").kendoGrid(
                    {
                        dataSource: {
                            data: data,
                            schema: {
                                model: {
                                    fields: {
                                        catagery: {
                                            validation: {
                                                dropdownlistValidation: function (input");
            WriteLiteral(@") {
                                                    if (input.is(""[name='element_desc']"")) {
                                                        var isValid = true;
                                                        input.attr(""data-dropdownlistValidation-msg"", ""Check List Element cannot be blank""); if (input.val().length <= 0) {
                                                            isValid = false;
                                                        }
                                                        return isValid;
                                                    }
                                                    return true;
                                                }
                                            }
                                        },
                                        row_slno: { type: ""string"", validation: { required: { message: ""serial No. cannot be blank"" } } },
                                        evalution_parameter: {");
            WriteLiteral(@" type: ""string"", validation: { required: { message: ""Evaluation cannot be blank"" } } },
                                        weightage: {
                                            type: ""string"",
                                            //validation: {
                                            //    required: true,                                               
                                            //    productnamevalidation: function (input) {

                                            //        var row = input.closest(""tr"");
                                            //        var grid = row.closest(""[data-role=grid]"").data(""kendoGrid"");
                                            //        var dataItem = grid.dataItem(row);
                                            //        if (input.is(""[name='weightage']"") && input.val() != """") {
                                            //            if (input.val() >= 100) {
                                            //            ");
            WriteLiteral(@"    var items = this.dataSource.data();
                                            //                for (var i = 0; i < items.length; i++) {
                                            //                    console.log(parseInt(items[i].weightage));
                                            //                    if (items[i].weightage > 100) {
                                            //                        if (data.model.evaluationmapdtl_id == items[i].evaluationmapdtl_id) {
                                            //                            items[i].set(""weightage"", 0);
                                            //                        }

                                            //                    }
                                            //                }                                                          
                                            //                kendoAlert('Weightage should be less than or equal to 100');
                                 ");
            WriteLiteral(@"           //                return false;
                                            //            }
                                            //        }

                                            //        return true;
                                            //    },
                                            //    messages: {
                                            //        custom: ""Weightage should be less than or equal to Max Score""
                                            //    }
                                            //}
                                        },
                                        maxscore: { type: ""string"", validation: { required: { message: ""serial No. cannot be blank"" } } },
                                        mode_flag: { type: ""string"", defaultValue: ""I"" },
                                    }
                                }
                            }
                        },
                        toolbar: ""<a class='k-gr");
            WriteLiteral(@"id-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>"",
                        height: 400,
                        groupable: false,
                        dataBinding: setDefaultValues,

                        dataBound: function (e) {
                            resultData = e.sender._data;
                            var rows = $('#grid_Drop_list').data('kendoGrid').tbody.children();
                            setColor(rows, resultData);
                        },
                        //change: onChange,
                        //edit: OnEdit,
                        save: function (data) {
                            if (data.values.weightage) {
                                if (parseInt(data.values.weightage) < 101)
                                {

                                    var datalength = data.sender.dataSource.data().length;
                                    var totalsum = 0;
                                    if (datalength >");
            WriteLiteral(@" 0) {
                                        for (var i = 0; i < datalength; i++) {
                                            console.log(parseFloat(data.sender.dataSource.data()[i].weightage));
                                            console.log(data.model.weightage)
                                            if (parseInt(data.sender.dataSource.data()[i].evaluationmapdtl_id) == parseInt(data.model.evaluationmapdtl_id))
                                            {
                                                console.log(data.values.weightage);
                                                parseFloat(totalsum) += parseFloat(data.values.weightage);
                                            }
                                            else {
                                                if (data.sender.dataSource.data()[i].weightage != 'NaN')
                                                {
                                                    totalsum += parseFloat(data.sender.data");
            WriteLiteral(@"Source.data()[i].weightage);
                                                }
                                               
                                            }
                                            
                                        }
                                    }
                                    console.log(totalsum);
                                    if (totalsum > 100)
                                    {
                                        $('#grid_Drop_list').data('kendoGrid').dataSource.read();
                                        $('#grid_Drop_list').data('kendoGrid').refresh();
                                        kendoAlert('Total Weightage should be equal to 100');
                                        return false;
                                    }
                                    return true;

                                }
                                else {
                                    var items = this.data");
            WriteLiteral(@"Source.data();
                                    for (var i = 0; i < items.length; i++) {
                                        console.log(parseInt(data.values.weightage));
                                        if (parseInt(data.values.weightage) > 100) {
                                            $('#grid_Drop_list').data('kendoGrid').dataSource.read();
                                            $('#grid_Drop_list').data('kendoGrid').refresh();
                                            //if (data.model.evaluationmapdtl_id == items[i].evaluationmapdtl_id)
                                            //{                                               
                                            //    data.model.weightage = 0;                                               
                                            //}
                                            //this.refresh();
                                            
                                        }
                       ");
            WriteLiteral(@"             }
                               
                                    kendoAlert('Weightage should be less than or equal to 100');
                                    return false;
                                }
                              
                            }
                                                    
                            
                        },
                        sortable: true,
                        selectable: true,
                        navigatable: true,
                        columns: [
                             {
                                 field: ""row_slno"",
                                 title: ""Sl No"",
                                 width: 50,
                             },
                              {
                                  field: ""evaluationmapdtl_id"",
                                  title: ""evaluationmapdtl_id"",
                                  hidden: true,
                           ");
            WriteLiteral(@"       width: 100,
                              },
                              {
                                  field: ""evalution_category_code"",
                                  title: ""evalution_category_code element code"",
                                  width: 100,
                                  hidden: true
                              },
                               {
                                   field: ""evalution_category_desc"",
                                   title: ""Evaluation Category"",
                                   width: 200,
                                   editor: function (container, options) {
                                       combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""evalution_category_code"", ""grid_Drop_list"")
                                   },
                               },
                            {
                                field: ""evalution_parameter"",
            ");
            WriteLiteral(@"                    title: ""Evaluation Parameters"",
                                width: 200,
                            },
                            {
                                field: ""weightage"",
                                title: ""Weightage"",
                                width: 200,
                                editor: editNumberWithoutSpinners,
                           

                            },
                            {
                                field: ""maxscore"",
                                title: ""Max Score"",
                                width: 200,
                            },

                            {
                                field: ""status_code"",
                                title: ""Status"",
                                hidden: true,
                                width: 300,
                            },
                              {
                                  field: ""status_desc"",
                ");
            WriteLiteral(@"                  title: ""status_desc"",
                                  hidden: true,
                                  width: 200,
                              },
                               {
                                   field: ""mode_flag"",
                                   title: ""Mode"",
                                   hidden: true
                               }
                        ],
                        editable: true
                    });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }


        $("".k-dropdown-operator"").css('display', 'none');
        $(""#closure_grid .k-input"").attr('disabled', 'false');
    }
    function OnEdit(e) {   

        setDefaultValues(e);
        //e.container.find(""input[name='fat_percent']"").attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');
        //var grid_validate_msg = """";
        //grid_validate_msg = ""Weightage Should Not Exceed Ma");
            WriteLiteral(@"x Score"";
        //e.container.find(""input[name='milk_amount']"").attr('onkeypress', 'return false');
        //e.container.find(""input[name='weightage']"").focusout(function () {
        //    if (parseFloat($(this).val()) > 100) {
        //        e.model.weightage = 0;
        //        kendoAlert(grid_validate_msg);
        //        return false;
        //    }
            //else {
            //    //var rate = e.container.find(""input[name='milk_rate']"");
            //    if ($(""#txtcredit_rate"").val() != """" && $(""#txtcredit_rate"").val() != undefined) {
            //        $(""#txtcredit_rate"").val(parseFloat(e.model.rating) + parseFloat($(""#txtcredit_rate"").val()));
            //    }
            //    else {
            //        $(""#txtcredit_rate"").val(parseFloat($(this).val()));
            //    }
            //}
        //});
        //e.container.find(""input[name='weightage']"").focusout(function () {
        //    var grid = $(""#grid_Drop_list"").data(""kendoGrid"");
       ");
            WriteLiteral(@" //    var gridData = grid.dataSource.view();
        //    var total = 0;
        //    for (var i = 0; i < gridData.length; i++) {
        //        if (gridData[i].weightage != '') {
        //            total += gridData[i].weightage != undefined ? parseFloat(gridData[i].weightage) : parseFloat(0);
        //            if (parseFloat(total) > 100) {
        //                //gridData[i].weightage = 0;                  
        //                kendoAlert(""Total Weightage should be equal to 100"");
        //                return false;
        //            }
        //        }
        //    }
        //});
       

       
    }

    function onChange(arg) {
        
        setDefaultValues(e);
        //e.container.find(""input[name='fat_percent']"").attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');
        var grid_validate_msg = """";
        grid_validate_msg = ""Milk Accepted should not greater than Milk Despatched"";
        //e.container.find(""inpu");
            WriteLiteral(@"t[name='milk_amount']"").attr('onkeypress', 'return false');
        e.container.find(""input[name='score']"").focusout(function () {
            if (parseFloat($(this).val()) > parseFloat(e.model.maxscore)) {
                e.model.score = 0;
                kendoAlert(grid_validate_msg);
                return false;
            }
            else {
                //var rate = e.container.find(""input[name='milk_rate']"");
                if ($(""#txtcredit_rate"").val() != """" && $(""#txtcredit_rate"").val() != undefined) {
                    $(""#txtcredit_rate"").val(parseFloat(e.model.rating) + parseFloat($(""#txtcredit_rate"").val()));
                }
                else {
                    $(""#txtcredit_rate"").val(parseFloat($(this).val()));
                }
            }
        });
    }
    load_master_code();
    evalution_category_desc_list = grid_comboScreen_mastercodes(""QCD_FL_EvalCate"");

    var gridRowID = -1;
    function sel_checkbox() {
        gridRowID++;
        retu");
            WriteLiteral(@"rn '<input id=""chk_sel_' + gridRowID + '"" class=""checkbox"" type=""checkbox"" />';
    }


    function editNumberWithoutSpinners(container, options) {
        $('<input data-text-field=""' + options.field + '"" ' +
                'data-value-field=""' + options.field + '"" ' +
                'data-bind=""value:' + options.field + '"" ' +
                'data-format=""' + options.format + '""/>')
                .appendTo(container)
                .kendoNumericTextBox({
                    spinners: false
                });
    }

</script>
<script>
    function fetch() {
        load_master_code();
        var c = $('#cmbloan_type');
        ddl = c.data('kendoComboBox').value();
        if (ddl != """" && ddl != undefined) {
            var org_id = getlocalStorage('org_id');
            var formval = form_Serialize(""frm_questionaremap"");
            var obj_val = JSON.parse(formval);

            if (obj_val.loan_type != """" || obj_val.loan_type != undefined);
            {
             ");
            WriteLiteral(@"   obj_val.loan_type = ddl;
            }

            if (obj_val.evaluationmap_id == """" || obj_val.evaluationmap_id == undefined) {
                obj_val.evaluationmap_id = 0;
            }
            if (obj_val.questionnaire == """" || obj_val.questionnaire == undefined) {
                obj_val.questionnaire = ""0"";
            }
            var data1 = {};
            data1.context = WebAPIProxy.getContext();
            data1.context.Header = obj_val;
            retrieve_CreditevalutionSetup_details(data1);
        }
        else {
            gridQuestionare([]);
            $(""#txt_questionnaire"").val('');
        }
    }
    function generate_CreditevalutionSetup_header(res) {
        if (res != null) {
            console.log(res.evaluationmap_id)
            $(""#evaluationmap_id"").val(res.evaluationmap_id);
            $(""#status_code"").val(res.status_code);
            if (res.evaluationmap_id != 0)
                $(""#txt_questionnaire"").val(res.questionnaire);
      ");
            WriteLiteral(@"      $(""#mode_flag"").val(res.mode_flag);
            $('#cmbloan_type').data(""kendoComboBox"").value(res.loan_type);
        }
    }
    function generate_CreditevalutionSetup_detail(res) {
        if (res != null) {
            load_master_code();
            // subelement_desc_list = grid_comboScreen_mastercodes(""CHEKLIST"");
            var data = changedataType(res);
            gridQuestionare(data);
        }
        else {
            gridQuestionare([]);
        }
    }
    function get_evalutionSetup_details(res) {
       // fetch();
    }
    function save() {
        try {
            $(""#cmbloan_type"").data(""kendoComboBox"").enable(true);
            $(""#txt_questionnaire"").removeAttr(""readonly"");
            $(""#txt_questionnaire"").prop(""disabled"", false);
            var mandatory_check = true;
            if ($(""#mode_flag"").val() == ""S"") {
                $(""#mode_flag"").val('U');
            }

            if ($(""#mode_flag"").val() == """") {
                $(""#mode_");
            WriteLiteral(@"flag"").val('I');
            }
            var c = $('#cmbloan_type');
            loantype = c.data('kendoComboBox').value();
            if (loantype == '' || loantype == undefined) {
                kendoAlert(""Loan type cannot be blank"");
                return false;
            }
            var formval = form_Serialize(""frm_questionaremap"");
            var obj_val = JSON.parse(formval);
            if (obj_val.evaluationmap_id == undefined || obj_val.evaluationmap_id == '') {
                obj_val.evaluationmap_id = 0;
            }
            if (obj_val.status_code == undefined || obj_val.status_code == '') {
                obj_val.status_code = ""A"";
            }
            if (obj_val.questionnaire == """" || obj_val.questionnaire == undefined) {
                obj_val.questionnaire = ""0"";
            }
            if (obj_val.loan_type != """" || obj_val.loan_type != undefined);
            {
                obj_val.loan_type = loantype;
            }
            if (obj_");
            WriteLiteral(@"val.row_timestamp != """" || obj_val.row_timestamp != undefined);
            {
                obj_val.row_timestamp = '0';
            }

            var grid_val = JSON.stringify($(""#grid_Drop_list"").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            var grid_validate_msg = """";

            if (result.length == 0) {
                kendoAlert(""Atleast one record needs to be entered"");
                return false;
            }
            $.each(result, function (key, value) {
                if (value.row_slno == """" || value.row_slno == undefined) {
                    grid_validate_msg += ""Serial No. cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (value.evalution_parameter == """" || value.evalution_parameter == undefined) {
                    grid_validate_msg += ""Evaluation parameter cannot be blank <br>"";
                    mandatory_check ");
            WriteLiteral(@"= false;
                }
                if (value.evalution_category_code == """" || value.evalution_category_code == undefined) {
                    grid_validate_msg += ""Evaluation category cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (value.weightage == """" || value.weightage == undefined) {
                    grid_validate_msg += ""Weightage cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (value.maxscore == """" || value.maxscore == undefined) {
                    grid_validate_msg += ""Maximum score cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (mandatory_check == false) {
                    kendoAlert(grid_validate_msg);
                    return false;
                }
            });

            if (mandatory_check == true) {
                $.each(result, function (index, value) {
                    va");
            WriteLiteral(@"r evaluationmapdtl_id = value.evaluationmapdtl_id;
                    if (evaluationmapdtl_id == undefined || evaluationmapdtl_id == '') {
                        result[index].evaluationmapdtl_id = ""0"";
                    }
                    var mmode = result[index].mode_flag;
                    if (mmode == ""S"") {
                        result[index].mode_flag = ""U"";
                    }


                    if (result[index].evaluationmapdtl_id == ""0"") {
                        result[index].mode_flag = ""I"";
                    }
                    else {
                        result[index].mode_flag = ""U"";
                    }

                    var any_all_flag = result[index].any_all_flag;
                    if (any_all_flag == """" || any_all_flag == undefined) {
                        result[index].any_all_flag = ""N"";
                    }
                    var status_code = result[index].status_code;
                    if (status_code == """" || status_code == un");
            WriteLiteral(@"defined) {
                        result[index].status_code = ""A"";
                    }
                });
                $(""#cmbloan_type"").data(""kendoComboBox"").enable(false);
                $(""#txt_questionnaire"").attr(""readonly"");
                $(""#txt_questionnaire"").prop(""disabled"", true);
                var obj_grid_val = result;
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                data.context.Detail = obj_grid_val;
                var totalval = 0;
                var grid = $(""#grid_Drop_list"").data(""kendoGrid"");
                var gridData = grid.dataSource.view();
                var savetotal = true;
                for (var i = 0; i < gridData.length; i++) {
                    if (gridData[i].weightage != '') {
                        if (gridData[i].weightage != undefined) {

                            totalval += parseFloat(gridData[i].weightage)
                   ");
            WriteLiteral(@"         if (totalval > 100) {
                                savetotal = false
                            }                           
                        }
                    }
                }
                if (savetotal) {
                    save_Credit_evalutionSetup_details(data);
                }
                else {
                    kendoAlert(""Weightage  should be less than or equal to 100 "");

                }
              
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
