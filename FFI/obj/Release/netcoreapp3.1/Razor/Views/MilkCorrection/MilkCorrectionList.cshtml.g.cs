#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\MilkCorrection\MilkCorrectionList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "393e6f9a611c87547ea1bfbbefd9c598673d9134"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_MilkCorrection_MilkCorrectionList), @"mvc.1.0.view", @"/Views/MilkCorrection/MilkCorrectionList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"393e6f9a611c87547ea1bfbbefd9c598673d9134", @"/Views/MilkCorrection/MilkCorrectionList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_MilkCorrection_MilkCorrectionList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_pymt_advise"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\MilkCorrection\MilkCorrectionList.cshtml"
  
    ViewBag.List = "Milk Payment Advice Correction";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "393e6f9a611c87547ea1bfbbefd9c598673d91345271", async() => {
                WriteLiteral("\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12\">           \r\n                <div id=\"PaymentAdvise_grid\"></div>\r\n            </div>\r\n        </div>   \r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>
    click_act_name = ""MilkCorrectionForm"";
    click_ctrl_name = ""MilkCorrection"";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>
<script>
    
    $(document).ready(function () {
        
        $("".adv_filter"").attr(""hdrtitle"", ""Milk Payment Advise List Record"");
        $("".adv_filter"").attr(""fltid"", ""MILKPAY"");
        $("".Export"").attr(""hdrtitle"", ""Milk Payment Advise List"");
        $("".Export"").attr(""SubTreeId"", ""MBADVGEN"");
               
    });
</script>
<script>
    var data = [{}];
            $(""#PaymentAdvise_grid"").kendoGrid(
             {
                 dataSource: {
                     data: data,
                     schema: {
                         model: {
                             fields: {
                                 payment_date: { type: ""date"" },
                             }
                         }
                     },
                     pageSize: 20,
                     change: functio");
            WriteLiteral(@"n (e) {
                         setTimeout(function () {
                             var gd = $(""#PaymentAdvise_grid"").data(""kendoGrid"");
                             filter_row(gd);
                             $('.k-i-close').css('display', 'none');
                             $('button.k-button-icon').css('display', 'none');
                             $('#PaymentAdvise_grid .k-input').prop('disabled', false);
                             $('#PaymentAdvise_grid .k-input').prop('readonly', true);
                         }, 1);
                     },
                 },
                 toolbar: ""<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>"",
                 excelExport: function (e) {
                     var gd = $(""#PaymentAdvise_grid"").data(""kendoGrid"");
                     var len = gd.dataSource._data.length;
                     var chkall = $");
            WriteLiteral(@"('#chkall').is(':checked');
                     var chkfilter = $('#chkfilter').is(':checked');
                     var chktemp = $('#chktemp').is(':checked');
                     var twokendobox = true;
                     gd.dataSource.pageSize(len);
                     if (e.sender.dataSource._data.length == len) {
                         twokendobox = false;
                         exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                     }
                     else {
                         exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                     }
                     gd.dataSource.pageSize('10');
                     return false;
                 },
                 filterable: {
                     enabled: true,
                     delay: 1500,
                     mode: ""menu, row"",
                     height: 200,
                     click: function (e) {
                         var gd = $(""#PaymentAdvise_grid");
            WriteLiteral(@""").data(""kendoGrid"");
                         filter_row(gd);
                     }
                 },
                 filterMenuInit: function (e) {
                     var gd = $(""#PaymentAdvise_grid"").data(""kendoGrid"");
                     filter_row(gd);
                 },
            
                 height: 450,
                 sortable: true,
                 selectable: true,
                 selectable: ""singl"",   //  Grid Row Selection
                 pageable: {
                     refresh: false,
                     pageSizes: true,
                     buttonCount: 5
                 },
                 navigatable: true,
                 groupable: false,

                 columns: [

                     {
                         field: ""payment_no"",
                         title: ""Payment Advise ID"",
                         filterable: {
                             cell: {
                                 operator: ""contains"",
                      ");
            WriteLiteral(@"           inputWidth: 1500
                             }
                         },
                         width: 80
                     },
                      {
                          field: ""payment_date"",
                          title: ""Payment Advise Date"",
                          format: ""{0:dd/MM/yyyy}"",
                          filterable: {
                              cell: {
                                  operator: ""contains"",
                                  inputWidth: 1500
                              },
                             
                          },

                          width: 80
                      },
                         {
                             field: ""ccbill_no"",
                             title: ""Bill ID"",
                             filterable: {
                                 cell: {
                                     operator: ""contains"",
                                     inputWidth: 1500
            ");
            WriteLiteral(@"                     }
                             },
                             width: 80
                         },


                         {
                             field: ""milk_supply_period"",
                             title: ""Milk Supply Period"",
                             filterable: {
                                 cell: {
                                     operator: ""contains"",
                                     inputWidth: 1500
                                 }
                             },
                             width: 80
                         },
                          {
                              field: ""process_status_desc"",
                              title: ""Process Status"",
                              filterable: {
                                  cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
                                  }
                     ");
            WriteLiteral(@"         },
                              //  hidden: true,
                              width: 110
                          },
                          {
                              field: ""status_code"",
                              title: ""STATUS Id"",
                              width: 1,
                              hidden: true,
                          },
                         {
                             field: ""status_desc"",
                             title: ""Status"",
                             filterable: {
                                 
                                 cell: {
                                     operator: ""contains"",
                                     inputWidth: 1500
                                 }
                             },
                             width: 80
                         },
                            {
                                field: ""process_status"",
                                title: ""STATUS Id"",");
            WriteLiteral(@"
                                width: 1,
                                hidden: true,
                            },
                 {
                     field: ""paymenthead_rowid"",
                     title: ""Pay Row  Id"",
                     width: 1,
                     hidden: true,
                 },

                 ]
             });

            $("".k-dropdown-operator"").css('display', 'none');
            $(""#PaymentAdvise_grid .k-input"").attr('disabled', 'false');
        
   

</script>
<script>
    $(""#btn_Edit"").bind(""click"", function () {
        btn_onClick('Edit');
        location.href = ""../MilkCorrection/MilkCorrectionForm"";
    });

    $(""#btn_View"").bind(""click"", function () {
        //btn_onClick('View');
        //location.href = ""../MilkCorrection/MilkCorrectionForm"";
        getSerializedSelectedRows('view');
    });

    $(""#btn_new"").bind(""click"", function () {
        btn_onClick('Create');
        location.href = ""../MilkCorrection/Mi");
            WriteLiteral(@"lkCorrectionForm"";
    });
    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage(""ls_pageList"") != undefined) {
                var items = getlocalStorage(""ls_pageList"");
                if (items.length == 0) {
                    kendoAlert(""Please select records"");
                }

                else {
                    if (mode == ""edit"") {
                        btn_onClick('Edit');
                        location.href = ""../MilkPaymentAdvice/MilkPaymentAdviceForm"";
                    }
                    else if (mode == ""view"") {
                        btn_onClick('View');
                        location.href = ""../MilkPaymentAdvice/MilkPaymentAdviceForm"";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>

<script>
    function generate_paymentadvce_list(res) {
        try {
            if (res != ");
            WriteLiteral(@"null) {
                var data = changedataType(res);
                $(""#gd_pymt_advise_list"").empty();
                $(""#gd_pymt_advise_list"").append(""<div id='PaymentAdvise_grid'></div>"");
                pymtadvise_list(data);
            }
            else {
                pymtadvise_list([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function listRefresh() {
        try {
            setlocalStorage('flt_condition', """");
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>



");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
