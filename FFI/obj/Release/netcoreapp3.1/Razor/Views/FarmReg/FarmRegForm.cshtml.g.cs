#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FarmReg\FarmRegForm.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a51e6602fd6eb7313780f9203bba7cf103026e48"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FarmReg_FarmRegForm), @"mvc.1.0.view", @"/Views/FarmReg/FarmRegForm.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a51e6602fd6eb7313780f9203bba7cf103026e48", @"/Views/FarmReg/FarmRegForm.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_FarmReg_FarmRegForm : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_espregistration"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/ESP_retrieveESPReg_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/ESP_retrieveESPRegList_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/ESP_saveESPReg_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/ESP_Registration.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveMemberReg_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/ESP_retrieveMemberReg_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveESPReg_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveESPRegList_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/saveESPReg_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/common.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/tamil.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/HelpFile.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FarmReg\FarmRegForm.cshtml"
  
    ViewBag.Form = "ESP Registration";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4810180", async() => {
                WriteLiteral(@"
    <div class=""panel panel-default"">
        <div class=""panel-body"" style=""padding-top:6px;padding-bottom:2px"">
            <div class=""row"">
                <div class=""col-sm-6"" style=""display:none"">
                    <div class=""form-group"">
                        <label for=""txtFarmer_name"" class=""col-sm-5 control-label"">ESP Code</label>
                        <div class=""col-sm-7"">
                            <input type=""text"" id=""txtESP_code"" class=""form-control"" readonly>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-sm-8"">
                    <div class=""form-group"">
                        <label for=""txtorg_type"" class=""col-sm-4 control-label required"">ESP Type :</label>
                        <div class=""col-sm-5"">
                            <input type=""radio"" id=""rd_fpo"" name=""orgn_type"" value=""FPO"" onclick=""changing()"" />FPO
");
                WriteLiteral(@"                            <input type=""radio"" id=""rd_mem"" name=""orgn_type"" value=""Member"" onclick=""changing1()"" />Member
                            <input type=""radio"" id=""rd_nonmem"" name=""orgn_type"" value=""Non Member"" onclick=""changing1()"" />Non Member
                        </div>
                    </div>
                </div>
");
                WriteLiteral(@"            </div>
            <div class=""row"">
                <div class=""col-sm-6"">
                    <div class=""form-group"">
                        <label for=""txtfpo"" class=""col-sm-5 control-label"">FPO/Large Farmer</label>
                        <div class=""col-sm-6"">
                            <input type=""text"" id=""txtfpo"" name=""orgn_logo"" class=""form-control"">
                            <input type=""hidden"" id=""txtfpocode"" name=""orgn_code"" />
                            <input type=""hidden"" id=""txtfarmercode"" name=""farmer_code"" />
                        </div>
                        <div id=""pay_help"">
                            <a class=""HelpWindow fa fa-search fa-lg"" role=""button"" id=""pay_help1"" data-toggle=""modal"" href=""/HelpFilter/HelpFilter"" hdrtitle=""FPO"" searchid=""S30"" data-target=""#HelpModal"" onclick=transfer(this,""form"","""",""form_control""); title=""Search"" style=""font-size: 19px; ""></a>
                        </div>
                        <div id=""pay_help1"">
        ");
                WriteLiteral(@"                    <a class=""HelpWindow fa fa-search fa-lg"" role=""button"" id=""pay_help2"" data-toggle=""modal"" href=""/HelpFilter/HelpFilter"" hdrtitle=""FPO"" searchid=""S32"" data-target=""#HelpModal"" onclick=transfer(this,""form"","""",""form_control""); title=""Search"" style=""font-size: 19px; ""></a>
                        </div>

                    </div>
                </div>
                <div class=""col-sm-6"">
                    <div class=""form-group"">
                        <label for=""txtFarmer_Large"" class=""col-sm-5 control-label"">FPO / பெரிய விவசாயி</label>
                        <div class=""col-sm-7"">
                            <input type=""text"" id=""txtFarmer_Large"" name=""orgn_auth_sign"" class=""form-control"">
                        </div>
                    </div>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-sm-6"">
                    <div class=""form-group"">
                        <label for=""txtFarmer_nameEng"" class=""col-");
                WriteLiteral(@"sm-5 control-label"">ESP Name </label>
                        <div class=""col-sm-7"">
                            <input type=""text"" id=""txtFarmer_nameEng"" class=""form-control"" name=""orgn_name"">
                        </div>
                    </div>
                </div>
                <div class=""col-sm-6"">
                    <div class=""form-group"">
                        <label for=""txtFarmer_nameTn"" class=""col-sm-5 control-label"">ESP பெயர் </label>
                        <div class=""col-sm-7"">
                            <input type=""text"" id=""txtFarmer_nameTn"" class=""form-control"" name=""orgn_ll_name"">
                        </div>
                    </div>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-sm-6"">
                    <div class=""form-group"">
                        <label for=""txtFac_org"" class=""col-sm-5 control-label"">Facilitator Organization :</label>
                        <div class=""col-sm-7"">
        ");
                WriteLiteral(@"                    <input id=""facilitorg"" name=""parent_code"" style=""width: 100%"" data-role=""filtercombo"">
                        </div>
                    </div>
                </div>
                <div class=""col-sm-6"">
                    <div class=""form-group"">
                        <label for=""txtorg_type"" class=""col-sm-5 control-label"">ஒருங்கமைப்பாளர் அமைப்பு </label>
                        <div class=""col-sm-7"">
                            <input id=""facilitorgIn"" style=""width: 100%"" data-role=""filtercombo"" readonly>
                            <input type=""hidden"" id=""txtorgn_rowid"" name=""orgn_rowid"" />
                        </div>
                    </div>
                </div>
            </div>
            <div class=""row"" style=""padding-bottom:10px"">
                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""txt_version_no"" class=""col-sm-5 control-label"">version_no</label>
            ");
                WriteLiteral(@"            <div class=""col-sm-4"">
                            <input type=""number"" id=""txt_version_no"" name=""version_no"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>
                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""txt_orgn_level"" class=""col-sm-5 control-label"">orgn_level</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" id=""txt_orgn_level"" name=""orgn_level"" class=""form-control"" maxlength=""10"" value=""ORG_ESP"">
                        </div>
                    </div>
                </div>
                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""txt_primary_lang_code"" class=""col-sm-5 control-label"">primary_lang_code</label>
                        <div class=""col-sm-4"">
                        ");
                WriteLiteral(@"    <input type=""text"" id=""txt_primary_lang_code"" value=""en_US"" name=""primary_lang_code"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>
                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""txt_orgn_cin"" class=""col-sm-5 control-label"">orgn_cin</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" id=""txt_orgn_cin"" name=""orgn_cin"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>
                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""txt_secondary_lang_code"" class=""col-sm-5 control-label"">secondary_lang_code</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" id=""txt_secondary_lang_code"" va");
                WriteLiteral(@"lue=""ta_IN"" name=""secondary_lang_code"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>

                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""txt_orgn_subtype"" class=""col-sm-5 control-label"">orgn_subtype</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" id=""txt_orgn_subtype"" name=""orgn_subtype"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>

                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""status_code"" class=""col-sm-5 control-label"">Status_code</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" value=""A"" id=""txt_status_code"" name=""status_code"" class=""form-control"" maxlength=");
                WriteLiteral(@"""10"">
                        </div>
                    </div>
                </div>

                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""txtMode"" class=""col-sm-5 control-label"">Mode</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" id=""txtMode"" name=""mode_flag"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>
                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""txt_orgn"" class=""col-sm-5 control-label"">orgn_code</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" id=""txt_orgn"" name=""orgn_code"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>

                <div class=""col-");
                WriteLiteral(@"sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""row_timestamp"" class=""col-sm-5 control-label"">Timestamp:</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" id=""txt_row_timestamp"" name=""row_timestamp"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>
            </div>

            <div class=""row"">
                <section class=""col-md-12"">
                    <div id=""tab_list"" class=""col-md-12"">
                        <ul class=""nav nav-tabs"">
                            <li class=""active"">
                                <a href=""#Address"" onclick=""Address1()"" role=""tab"" data-toggle=""tab"">
                                    Address
                                </a>
                            </li>
");
                WriteLiteral(@"                            <li>
                                <a href=""#BankDetails"" onclick=""BankDetails1()"" role=""tab"" data-toggle=""tab"">
                                    Bank Details
                                </a>
                            </li>
                            <li>
                                <a href=""#Users"" onclick=""Users1()"" role=""tab"" data-toggle=""tab"">
                                    Users
                                </a>
                            </li>
                        </ul>
                        <div class=""tab-content"">
                            <div class=""tab-pane fade active in"" id=""Address"">
                                <div class=""panel panel-default"">
                                    <div class=""panel-body"">
                                        <div id=""grid_Address""></div>
                                    </div>
                                </div>
                            </div>
                         ");
                WriteLiteral(@"   <div class=""tab-pane fade active in"" id=""OfficeBearers"">
                                <div class=""panel panel-default"">
                                    <div class=""panel-body"">
                                        <div id=""grid_OfficeBearers""></div>
                                    </div>
                                </div>
                            </div>
                            <div class=""tab-pane fade active in"" id=""BankDetails"">
                                <div class=""panel panel-default"">
                                    <div class=""panel-body"">
                                        <div id=""grid_Bank""></div>
                                    </div>
                                </div>
                            </div>
                            <div class=""tab-pane fade active in"" id=""Users"">
                                <div class=""panel panel-default"">
                                    <div class=""panel-body"">
                             ");
                WriteLiteral(@"           <div id=""grid_User""></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<script>\r\n    click_act_name = \"FarmRegList\";\r\n    click_ctrl_name = \"FarmReg\";\r\n    form_list_url = \'../\' + click_ctrl_name + \'/\' + click_act_name;\r\n</script>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4825743", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4826783", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4827823", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4828863", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4829903", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4830943", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4831983", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4833024", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4834065", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4835106", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4836147", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4837188", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a51e6602fd6eb7313780f9203bba7cf103026e4838229", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    $(document).ready(function () {
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $(""#frm_espregistration"");
        kendo.init(container);
        container.kendoValidator({
        });

        $("".file_attach"").attr(""hdrtitle"", ""ESP Registration"");
        $("".notes"").attr(""hdrtitle"", ""ESP Registration"");
        $(""#lblForm_menuid"").text(""FALREG"");

        Screen_Id = ""FALREG"";
        permission = sec_Permission(Screen_Id);

        load_master_code();

        //translate
        langTranslate('txtFarmer_nameEng', 'txtFarmer_nameTn');
        $(""#txtFarmer_nameTn"").on(""keypress"", function (e) {
            convertThis(e);
        });
        langTranslate('txtfpo', 'txtFarmer_Large');
        $(""#txtFarmer_Large"").on(""keypress"", function (e) {
            convertThis(e);
        });
        $(""#common_id"").text(""ESP Code"")

        var ORGFO = """";
        $(""#facilitorg"").empty();
        ORGFO = grid_comboScreen_mast");
            WriteLiteral(@"ercodes(""ORGFO"");
        filter_combobox(""facilitorg"", ORGFO);

        var ORGFO_in1 = """";
        $(""#facilitorgIn"").empty();
        ORGFO_in1 = grid_comboScreen_tamil(""ORGFO"");
        filter_combobox(""facilitorgIn"", ORGFO_in1);
        grid_Address_details([]);
        grid_Bank_Detail([]);
        gridOfficeBearers([]);
        grid_User([]);

        $(""div#FIGFarmerClub"").hide();
        $(""div#OfficeBearers"").hide();
        $(""div#BankDetails"").hide();
        $(""div#Users"").hide();
        $(""#pay_help2"").hide();

        if (getlocalStorage('btn_clk_val') == ""Create"") {
            $('#divCreate #review').hide();
            $(""#txtMode"").val(""I"");
            $(""#bottom_menus"").hide();
            $(""#DocStat"").val(""New"");
        }
        else if (getlocalStorage('btn_clk_val') == ""View"" || getlocalStorage('btn_clk_val') == ""Edit"") {
            $('#divEdit #reviewEd').hide(); 
            $('#divEdit #btnApprove').hide();
            $('#divEdit #btnReject').hide();");
            WriteLiteral(@"
            if (getlocalStorage(""ls_pageList"") != undefined) {
                var data = getlocalStorage(""ls_pageList"");
                var formval = form_Serialize(""frm_espregistration"");
                var obj_val = JSON.parse(formval);
                obj_val.orgn_code = data.orgn_code;
                obj_val.orgn_rowid = data.orgn_rowid;
                obj_val.version_no = data.version_no;
                $(""#txtcommon_id"").val(data.orgn_code);
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                retrieve_ESP_details(data);
                $(""#txtMode"").val(""U"");
            }
        }
        $('#HelpModal').on('hide.bs.modal', function (e) {
            if ($(""#txtfpo"").val() != undefined && $(""#txtfpo"").val() != """") {
                fetch_name();
            }            
        });
        
    });
</script>
<script>
    function load_master_code() {
        debugger;
 ");
            WriteLiteral(@"       var data = {};
        var context = WebAPIProxy.getContext();
        data.userId = context.userId
        data.orgnId = context.orgnId
        data.locnId = context.locnId
        data.localeId = context.localeId
        data.screen_Id = ""FALREG"";
        var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));
    }

    $(""#facilitorg"").change(function () {
        var c = $('#facilitorg');
        var formval = c.data('kendoComboBox').value();
        $(""#facilitorgIn"").data(""kendoComboBox"").value(formval);
    });
</script>
<script>
    var addr_type_desc_list = """";
    var orgn_state_desc_list = """";
    var orgn_village_desc_list = """";
    var orgn_dist_desc_list = """";
    var orgn_taluk_desc_list = """";
    var orgn_panchayat_desc_list = """";
    var status_desc_list = """";
    function grid_Address_details(data) {
        try {
            $(""#grid_Address"").kendoGrid({
                dataSource: {
                    data: data,
      ");
            WriteLiteral(@"              schema: {
                        model: {
                            fields: {
                                orgnaddr_rowid: { type: ""string"" },
                                orgn_pincode: { type: ""string"", validation: { required: { message: ""Pincode cannot be blank"" } } },
                                //----
                                addr_type: { type: ""string"", required: true },
                                addr_type_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='addr_type_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Address Type cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                ");
            WriteLiteral(@"                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                state: { type: ""string"", required: true },
                                orgn_state_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='orgn_state_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""State Type cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                ");
            WriteLiteral(@"                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                orgn_dist: { type: ""string"", required: true },
                                orgn_dist_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='orgn_dist_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""District Type cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                              ");
            WriteLiteral(@"  return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },
                                //----
                                orgn_panchayat: { type: ""string"", required: true },
                                orgn_panchayat_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='orgn_panchayat_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Grama panchayat Type cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }");
            WriteLiteral(@"
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },

                                orgn_taluk: { type: ""string"", required: true },
                                orgn_taluk_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='orgn_taluk_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Taluk Type cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
            ");
            WriteLiteral(@"                                    return isValid;
                                            }
                                            return true;
                                        }
                                    }, editable: false
                                },

                                orgn_village: { type: ""string"", required: true },
                                orgn_village_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='orgn_village_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Village Type cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                 ");
            WriteLiteral(@"                               return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                orgn_add1: {
                                    validation: {
                                        required: { message: ""Addr1 cannot be blank"" },
                                        maxlength:
                                    function (input) {
                                        if (input.val().length > 50) {
                                            input.attr(""data-maxlength-msg"", ""Max length is 50"");
                                            return false;
                                        }
                                        return true;
                                    }
                                    }
                                },
                ");
            WriteLiteral(@"                orgn_addr2: {
                                    validation: {
                                        required: { message: ""Addr2 cannot be blank"" },
                                        maxlength:
                                    function (input) {
                                        if (input.val().length > 50) {
                                            input.attr(""data-maxlength-msg"", ""Max length is 50"");
                                            return false;
                                        }
                                        return true;
                                    }
                                    }
                                },

                                status_code: { type: ""string"", required: true },
                                status_desc: {
                                    defaultValue: ""Active"", editable: false,
                                    validation: {
                                        dro");
            WriteLiteral(@"pdownlistValidation: function (input) {
                                            if (input.is(""[name='status_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Status Type cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },



                                mode_flag: { type: ""string"", defaultValue: ""I"" }
                            }
                        }
                    }
                },
                toolbar: ""<a class='k-grid-add' id='btnSave' href=''><spa");
            WriteLiteral(@"n class='fa fa-plus' style='color:Black'></span></a>"",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_Address').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                edit: OnEdit,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
            {
                name: ""Delete"",
                id: ""Delete"",
                imageClass: ""fa fa-close"",
                click: function (e) {
                    // e.preventDefault();
                    var grid = $(""#grid_Address"").data(""kendoGrid"");
                    var dataItem = $(""#grid_Address"").data(""kendoGrid"").dataItem($(e.target).closest(""tr""));
                    De");
            WriteLiteral(@"leteWindowEvent(e, dataItem, grid);
                    e.stopImmediatePropagation()
                }
            },
                    ], title: ""Action"", width: ""50px"",
                },
                 {
                     field: ""orgnaddr_rowid"",
                     title: ""orgnaddr_rowid"",
                     hidden: true,
                 },
                 {
                     field: ""addr_type"",
                     title: ""addr_type"",

                     hidden: true,
                 },
                 {
                     field: ""addr_type_desc"",
                     title: ""Addr Type"",
                     editor: function (container, options) {
                         combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""addr_type"", ""grid_Address"")
                     },
                     width: 100,

                 },
                  {
                      field: ""orgn_country_desc"",
              ");
            WriteLiteral(@"        title: ""Country"",
                      editor: function (container, options) {
                          combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""orgn_country"", ""grid_Address"")
                      },
                      width: 100,
                  },
                 {
                     field: ""orgn_state"",
                     title: ""orgn_state"",
                     hidden: true,
                 },
                 {
                     field: ""orgn_state_desc"",
                     title: ""State"",
                     editor: function (container, options) {
                         combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""orgn_state"", ""grid_Address"")
                     },
                     width: 100,

                 },
                 {
                     field: ""orgn_village"",
                     title: ""orgn_village"",
                 ");
            WriteLiteral(@"    width: 100,
                     hidden: true,
                 },
                 {
                     field: ""orgn_village_desc"",
                     title: ""Village"",
                     editor: '<div class=""input-group input-group-sm""><input type=""text"" readonly name=""orgn_village_desc"" maxlength=""10"" style=""width:100px;color:black""  onkeypress=""return speical_char(event)"" data-bind=""value:orgn_village_desc""/><span class=""input-group-btn"" style=""padding-right: 150px;""><a class=""HelpWindow fa fa-search fa-lg"" data-toggle=""modal"" href=""/HelpFilter/HelpFilter"" hdrtitle=""Details"" searchid=""S02"" data-target=""#HelpModal"" onclick=transfer(this,""grid"",""grid_Address"",""grid_Address_details"") title=""Search"" style=""font-size: 15px; padding-left: 10px;""></a> </span> </div>',
                     width: 150,

                 },
                 {
                     field: ""orgn_dist"",
                     title: ""orgn_dist"",
                     width: 100,
                     hidden: true,
");
            WriteLiteral(@"                 },
                 {
                     field: ""orgn_dist_desc"",
                     title: ""District"",
                     width: 100,

                 },
                  {
                      field: ""orgn_taluk"",
                      title: ""orgn_taluk"",
                      width: 100,
                      hidden: true,
                  },
                 {
                     field: ""orgn_taluk_desc"",
                     title: ""Taluk"",
                     width: 100,
                 },

                  {
                      field: ""orgn_panchayat"",
                      title: ""orgn_panchayat"",
                      width: 100,
                      hidden: true,
                  },
                   {
                       field: ""orgn_panchayat_desc"",
                       title: ""Gram Panchayat"",
                       width: 100,
                   },

                 {
                     field: ""orgn_add1"",
             ");
            WriteLiteral(@"        title: ""Addr Line 1"",

                     width: 100,

                 },
                 {
                     field: ""orgn_addr2"",
                     title: ""Addr Line 2"",
                     width: 100
                 },
                 {
                     field: ""orgn_pincode_desc"",
                     title: ""Pin Code"",
                     hidden: true,

                 },
                 {
                     field: ""orgn_pincode"",
                     title: ""PinCode"",
                     width: 100,
                     editor: function (container, options) {
                         numeric_editor(container, options.field, '6', '0');
                     },

                 },
                  {
                      field: ""orgn_country"",
                      title: ""Country"",
                      hidden: true,
                  },

                 {
                     field: ""status_code"",
                     title: ""status_code"",");
            WriteLiteral(@"
                     hidden: true,
                     width: 100,
                 },
                {
                    field: ""status_desc"",
                    title: ""Status"",
                    editor: function (container, options) {
                        combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""status_code"", ""grid_Address"")
                    },
                    width: 100,
                },
                {
                    field: ""mode_flag"",
                    title: ""Mode"",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    load_master_code();
    addr_type_desc_list = grid_comboScreen_mastercodes(""QCD_ADDRTYPE"");
    orgn_state_desc_list = grid_comboScreen_mastercodes(""QCD_UN_STATE"");

    orgn_panchayat_desc_list = grid_comboScreen_");
            WriteLiteral(@"mastercodes(""QCD_UN_GRAMPAN"");
    orgn_country_desc_list = grid_comboScreen_mastercodes(""QCD_COUNTRY"");
    status_desc_list = grid_comboScreen_mastercodes(""STATUS"");
</script>
<script>
    var officebearer_role_desc_list = """";
    function gridOfficeBearers(data) {
        try {
            $(""#grid_OfficeBearers"").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                orgnofficebearers_rowid: { type: ""string"" },
                                officebearer_role: { type: ""string"" },
                                officebearer_name: { type: ""string"" },
                                officebearer_contact_no: { type: ""string"" },
                                status_code: { type: ""string"", defaultValue: ""A"" },
                                status_desc: { type: ""string"", defaultValue: getlocalStorage('status'), editable: true },
        ");
            WriteLiteral(@"                        mode_flag: { type: ""string"", defaultValue: ""I"" }
                            }
                        }
                    }
                },
                toolbar: ""<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>"",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_OfficeBearers').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
            {
                name: ""Delete"",
                id: ""Delete"",
                imageClass: ""fa fa-close"",
                click: function (e) {
                    var");
            WriteLiteral(@" grid = $(""#grid_OfficeBearers"").data(""kendoGrid"");
                    var dataItem = $(""#grid_OfficeBearers"").data(""kendoGrid"").dataItem($(e.target).closest(""tr""));
                    DeleteWindowEvent(e, dataItem, grid);
                    e.stopImmediatePropagation()
                }
            },
                    ], title: ""Action"", width: ""50px"",
                },
                {
                    field: ""orgnofficebearers_rowid"",
                    title: ""orgnofficebearers_rowid"",
                    hidden: true,
                    width: 100,
                },
                 {
                     field: ""officebearer_role"",
                     title: ""officebearer_role"",
                     hidden: true,
                     width: 100,
                 },
                 {
                     field: ""officebearer_role_desc"",
                     title: ""Role"",
                     editor: function (container, options) {
                         combo_ed");
            WriteLiteral(@"itor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""officebearer_role"", ""grid_OfficeBearers"")
                     },
                     width: 100,

                 },
                 {
                     field: ""officebearer_name"",
                     title: ""Name"",
                     width: 100,

                 },
                 {
                     field: ""officebearer_contact_no"",
                     title: ""Contact No"",
                     width: 100,

                 },
                {
                    field: ""status_code"",
                    title: ""status_code"",
                    hidden: true,
                    width: 100,
                },
                {
                    field: ""status_desc"",
                    title: ""Status"",
                    editor: function (container, options) {
                        combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options");
            WriteLiteral(@".field, ""status_code"", ""grid_OfficeBearers"")
                    },
                    width: 100,
                },
                {
                    field: ""mode_flag"",
                    title: ""Mode"",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    officebearer_role_desc_list = grid_comboScreen_mastercodes(""QCD_DESIG"");
    status_desc_list = grid_comboScreen_mastercodes(""STATUS"");

</script>

<script>
    var bank_acc_type_desc_list = """";
    var bank_desc_list = """";
    var branch_desc_list = """";
    var dflt_cr_acc_desc_list = """";
    var dflt_dr_acc_desc_list = """";
    var bank_acc_purpose_desc_list = """";
    var status_desc_list = """";
    function grid_Bank_Detail(data) {
        try {
            $(""#grid_Bank"").kendoGrid({
                dataSource: {
                    data: data,
        ");
            WriteLiteral(@"            schema: {
                        model: {
                            fields: {
                                orgnbank_rowid: { type: ""string"" },
                                bank_acc_no: { type: ""string"", validation: { required: { message: ""Bank Account No. cannot be blank"" } } },

                                bank_acc_type: { type: ""string"", required: true },
                                bank_acc_type_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='bank_acc_type_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Bank Account cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
 ");
            WriteLiteral(@"                                               return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                bank_code: { type: ""string"", required: true },
                                bank_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='bank_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Bank cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                retu");
            WriteLiteral(@"rn isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                branch_code: { type: ""string"" },
                                ifsc_code: { type: ""string"", validation: { required: { message: ""IFSC Code cannot be blank"" } }, editable: false },
                                account_no: { type: ""string"" },
                                dflt_cr_acc: { type: ""string"", required: true },
                                dflt_cr_acc_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='dflt_cr_acc_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistVa");
            WriteLiteral(@"lidation-msg"", ""Default Credit cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },

                                dflt_dr_acc: { type: ""string"", required: true },
                                dflt_dr_acc_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='dflt_dr_acc_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Default");
            WriteLiteral(@" Debit cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                bank_acc_purpose: { type: ""string"", required: true },
                                bank_acc_purpose_desc: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='bank_acc_purpose_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Account Purpose ca");
            WriteLiteral(@"nnot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                status_code: { type: ""string"", required: true },
                                status_desc: {
                                    defaultValue: ""Active"", editable: false,
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='status_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-drop");
            WriteLiteral(@"downlistValidation-msg"", ""Status Type cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                mode_flag: { type: ""string"", defaultValue: ""I"" },
                            }
                        }
                    }
                },
                toolbar: ""<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>"",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
     ");
            WriteLiteral(@"               var rows = $('#grid_Bank').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                edit: OnEdit,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
            {
                name: ""Delete"",
                id: ""Delete"",
                imageClass: ""fa fa-close"",
                click: function (e) {
                    var grid = $(""#grid_Bank"").data(""kendoGrid"");
                    var dataItem = $(""#grid_Bank"").data(""kendoGrid"").dataItem($(e.target).closest(""tr""));
                    DeleteWindowEvent(e, dataItem, grid);
                    e.stopImmediatePropagation()
                }
            },
                    ], title: ""Action"", width: ""50px"",
                },
                {
                    field: ""orgnbank_rowid"",
                    title: ""orgnbank_rowid"",
             ");
            WriteLiteral(@"       hidden: true
                },
                {
                    field: ""bank_acc_no"",
                    title: ""Account No"",
                    width: 100,

                },
                 {
                     field: ""bank_acc_type"",
                     title: ""bank_acc_type"",
                     hidden: true
                 },
                {
                    field: ""bank_acc_type_desc"",
                    title: ""Account Type"",
                    editor: function (container, options) {
                        combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""bank_acc_type"", ""grid_Bank"")
                    },
                    width: 100,
                },
                {
                    field: ""bank_code"",
                    title: ""bank_code"",
                    hidden: true
                },
                 {
                     field: ""bank_desc"",
                     title: ""Bank N");
            WriteLiteral(@"ame"",
                     editor: function (container, options) {
                         combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""bank_code"", ""grid_Bank"")
                     },
                     width: 100,

                 },
                  {
                      field: ""branch_code"",
                      title: ""Branch"",
                      editor: '<div class=""input-group input-group-sm""><input type=""text"" readonly name=""branch_code"" maxlength=""50"" style=""width:150px;color:black""  onkeypress=""return speical_char(event)"" data-bind=""value:branch_code""/><span class=""input-group-btn"" style=""padding-right: 200px;""><a class=""HelpWindow fa fa-search fa-lg"" data-toggle=""modal"" href=""/HelpFilter/HelpFilter"" hdrtitle=""Bank Details"" searchid=""S01"" data-target=""#HelpModal"" onclick=transfer(this,""grid"",""grid_Bank"",""grid_Bank_Detail"") title=""Search"" style=""font-size: 15px; padding-left: 10px;""></a> </span> </div>',
                     ");
            WriteLiteral(@" width: 200,
                  },
                  {
                      field: ""ifsc_code"",
                      title: ""IFSC code"",
                      width: 100,
                  },

                 {
                     field: ""dflt_cr_acc"",
                     title: ""dflt_cr_acc"",
                     hidden: true
                 },

                  {
                      field: ""dflt_cr_acc_desc"",
                      title: ""Default Credit A/C"",
                      editor: function (container, options) {
                          combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""dflt_cr_acc"", ""grid_Bank"")
                      },
                      width: 100,

                  },
                   {
                       field: ""dflt_dr_acc"",
                       title: ""dflt_dr_acc"",
                       hidden: true
                   },
                   {
                       field: ""dflt_");
            WriteLiteral(@"dr_acc_desc"",
                       title: ""Default Debit A/C"",
                       editor: function (container, options) {
                           combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""dflt_dr_acc"", ""grid_Bank"")
                       },
                       width: 100,

                   },
                    {
                        field: ""bank_acc_purpose"",
                        title: ""bank_acc_purpose"",
                        hidden: true
                    },
                   {
                       field: ""bank_acc_purpose_desc"",
                       title: ""Account Purpose"",
                       editor: function (container, options) {
                           combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""bank_acc_purpose"", ""grid_Bank"")
                       },
                       width: 100,

                   },
                   {
 ");
            WriteLiteral(@"                      field: ""status_code"",
                       title: ""status_code"",
                       hidden: true
                   },
                 {
                     field: ""status_desc"",
                     title: ""Status"",
                     editor: function (container, options) {
                         combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""status_code"", ""grid_Bank"")
                     },
                     width: 100,
                 },
                {
                    field: ""mode_flag"",
                    title: ""Mode"",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    bank_acc_type_desc_list = grid_comboScreen_mastercodes(""QCD_BANKACCTYPE"");
    bank_desc_list = grid_comboScreen_mastercodes(""BANK"");

    dflt_cr_acc_de");
            WriteLiteral(@"sc_list = grid_comboScreen_mastercodes(""QCD_YESNO"");
    dflt_dr_acc_desc_list = grid_comboScreen_mastercodes(""QCD_YESNO"");
    bank_acc_purpose_desc_list = grid_comboScreen_mastercodes(""QCD_BANKACCPUR"");
    status_desc_list = grid_comboScreen_mastercodes(""STATUS"");
    function OnEdit(e) {
        try {
            setDefaultValues(e);
            e.container.find(""input[name='bank_acc_no']"").attr('maxlength', '20');
            e.container.find(""input[name='bank_acc_no']"").attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');

            e.container.find(""input[name='aggrloc_shortdesc']"").attr('maxlength', '25');
            e.container.find(""input[name='aggrloc_name']"").attr('maxlength', '100');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<script>
    function grid_User(data) {
        try {
            $(""#grid_User"").kendoGrid({
                dataSource: {
                    dat");
            WriteLiteral(@"a: data,
                    schema: {
                        model: {
                            fields: {
                                user_id: { type: ""string"" },
                                user_name: { type: ""string"" },
                                location_code: { type: ""string"" },
                                location_name: { type: ""string"" },
                                email: { type: ""string"" },
                                mobile_no: { type: ""string"" },
                                valid_till: { type: ""date"" },
                                status: { type: ""string"" },
                                mode_flag: { type: ""string"", defaultValue: ""I"" }
                            }
                        }
                    }
                },

                height: 300,
                groupable: false,
                dataBinding: setDefaultValues,

                sortable: true,
                selectable: true,
                navigatable: tru");
            WriteLiteral(@"e,
                columns: [
                    {
                        field: ""aggrlocuser_rowid"",
                        title: ""aggrlocuser_rowid"",
                        hidden: true
                    },
                     {
                         field: ""aggrloc_code"",
                         title: ""Location Code"",
                         width: 100,

                     },
                     {
                         field: ""aggrorgn_code"",
                         title: ""aggrorgn_code"",
                         width: 100,
                         hidden: true
                     },
                     {
                         field: ""aggrloc_type"",
                         title: ""Location Name"",
                         width: 100,
                         hidden: true
                     },
                     {
                         field: ""aggrloc_type_desc"",
                         title: ""Location Name"",
                         width: 10");
            WriteLiteral(@"0,

                     },
                 {
                     field: ""role_code"",
                     title: ""User ID"",
                     width: 100,

                 },
                 {
                     field: ""user_code"",
                     title: ""user_code"",
                     width: 100,
                     hidden: true,
                 },
                 {
                     field: ""user_name"",
                     title: ""User Name"",
                     width: 100,

                 },
                 {
                     field: ""email_id"",
                     title: ""Email"",
                     width: 100,

                 },
                 {
                     field: ""contact_no"",
                     title: ""Mobile No"",
                     width: 100
                 }, {
                     field: ""valid_till"",
                     title: ""Valid Till"",
                     hidden: true
                 },
                 {");
            WriteLiteral(@"
                     field: ""status_code"",
                     title: ""status_code"",
                     hidden: true
                 },
                  {
                      field: ""status_desc"",
                      title: ""Status"",
                      width: 100,

                  },

                {
                    field: ""mode_flag"",
                    title: ""Mode"",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<script>
    function changing1() {

        if ($(""#rd_mem"").is("":checked"")) {
            $('#txtfpo').val('');
            $('#txtFarmer_Large').val('');
            $(""#pay_help1"").hide();
            $(""#pay_help2"").show();
            $('#txtfpo').attr(""disabled"", 'readonly');
            $('#txtFarmer_Large').attr(""disabled"", 'disabled');
            grid_Address_");
            WriteLiteral(@"details([]);
            grid_Bank_Detail([]);
        }
        else {           
            $(""#pay_help1"").hide();
            $(""#pay_help2"").hide();
            $('#txtfpo').removeAttr(""disabled"");
            $('#txtFarmer_Large').removeAttr(""disabled"");
        }
        if ($(""#rd_nonmem"").is("":checked"")) {
            $('#txtfpo').val('');
            $('#txtFarmer_Large').val('');
            grid_Address_details([]);
            grid_Bank_Detail([]);
        }
    }
</script>
<script>
    function changing() {

        if ($(""#rd_fpo"").is("":checked"")) {
            $('#txtfpo').val('');
            $('#txtFarmer_Large').val('');
            $(""#pay_help1"").show();
            $(""#pay_help2"").hide();
            $('#txtfpo').attr(""disabled"", 'readonly');
            $('#txtFarmer_Large').attr(""disabled"", 'disabled');
            grid_Address_details([]);
            grid_Bank_Detail([]);
        }
        else {           
            $(""#pay_help1"").hide();
        ");
            WriteLiteral(@"    $(""#pay_help2"").hide();
            $('#txtfpo').removeAttr(""disabled"");
            $('#txtFarmer_Large').removeAttr(""disabled"");
        }
    }
     
</script>
<script>
    function fetch_name() {
        var formval = form_Serialize(""frm_espregistration"");
        var obj_val = JSON.parse(formval);
        if (obj_val != undefined) {            
           if(obj_val.orgn_type==""FPO""){
               obj_val.esp_type_code = ""FPO"";
               obj_val.esp_code = $(""#txtfpocode"").val();
           }
         else
            {
               obj_val.esp_type_code = ""MEMBER"";
               obj_val.esp_code = $(""#txtfarmercode"").val();
            }           
            obj_val.orgn_rowid = ""0"";
            obj_val.orgn_code = ""0"";
            obj_val.version_no = ""0"";
            var data_fetch = {};
            data_fetch.context = WebAPIProxy.getContext();
            data_fetch.context.Header = obj_val;
            retrieve_ESPMember_details(data_fetch);
        }
  ");
            WriteLiteral(@"  }
</script>

<script>
    function save() {
        try {
            $(""#rd_fpo"").attr('disabled', false);
            $(""#rd_mem"").attr('disabled', false);
            $(""#txtlookup"").val(""false"");
            if ($(""#txtMode"").val() == ""S"") {
                $(""#txtMode"").val('U');

            }

            if ($(""#txt_orgn"").val() == """") {
                $(""#txt_orgn"").val(' ');
            }

            if ($(""#txt_version_no"").val() == """") {
                $(""#txt_version_no"").val('1');
            }
            if ($(""#txtorgn_rowid"").val() == """") {
                $(""#txtorgn_rowid"").val('0');
            }
            $('#txtfpo').removeAttr(""disabled"");
            $('#txtFarmer_Large').removeAttr(""disabled"");
            var formval = form_Serialize(""frm_espregistration"");
            var obj_val = JSON.parse(formval);

            //address
            var grid_val = JSON.stringify($(""#grid_Address"").data().kendoGrid._data);
            var Bind = {};
       ");
            WriteLiteral(@"     Bind = grid_val;
            var result = JSON.parse(Bind);
            $.each(result, function (index, value) {
                var row_id = value.orgnaddr_rowid;
                if (row_id == undefined || row_id == '') {
                    result[index].orgnaddr_rowid = ""0"";
                }
                else {
                    result[index].mode_flag = ""S"";
                }
                var mode = value.mode_flag;
                if (mode == """") {
                    result[index].mode_flag = ""I"";
                }
                if (mode == ""S"") {
                    result[index].mode_flag = ""U"";
                }
                if (row_id == ""0"") {
                    result[index].mode_flag = ""I"";
                }

            });
            var obj_grid_val = result;

            //bank
            var grid_val1 = JSON.stringify($(""#grid_Bank"").data().kendoGrid._data);
            var Bind1 = {};
            Bind1 = grid_val1;
            var result1 = ");
            WriteLiteral(@"JSON.parse(Bind1);
            $.each(result1, function (index, value) {
                var bank_rowid = value.orgnbank_rowid;
                var bank_rowid = value.orgnbank_rowid;
                if (bank_rowid == undefined || bank_rowid == '') {
                    result1[index].orgnbank_rowid = ""0"";
                }
                else {
                    result1[index].mode_flag = ""S"";
                }
                var mode = value.mode_flag;
                if (mode == """") {
                    result1[index].mode_flag = ""I"";
                }
                if (mode == ""S"") {
                    result1[index].mode_flag = ""U"";
                }
                if (bank_rowid == ""0"") {
                    result1[index].mode_flag = ""I"";
                }
            });
            var obj_grid_val1 = result1;

            //user
            var grid_val2 = JSON.stringify($(""#grid_User"").data().kendoGrid._data);
            var Bind2 = {};
            Bind2 = grid_va");
            WriteLiteral(@"l2;
            var result2 = JSON.parse(Bind2);
            $.each(result2, function (index, value) {

                var row_width = value.aggrlocuser_rowid;
                //var row_flag = value.mode_flag;

                if (row_width == undefined) {
                    result2[index].aggrlocuser_rowid = ""0"";
                }
                var mmode = result[index].mode_flag;
                if (mmode == ""S"") {
                    result2[index].mode_flag = ""U"";
                }
            });
            var obj_grid_val2 = result2;

            //office bearer
            var grid_val4 = JSON.stringify($(""#grid_OfficeBearers"").data().kendoGrid._data);
            var Bind4 = {};
            Bind4 = grid_val4;
            var result4 = JSON.parse(Bind4);
            $.each(result4, function (index, value) {

                var row_width = value.orgnofficebearers_rowid;


                if (row_width == undefined) {
                    result4[index].orgnofficebearers");
            WriteLiteral(@"_rowid = ""0"";
                }
                var mmode = result4[index].mode_flag;
                if (mmode == ""S"") {
                    result4[index].mode_flag = ""U"";
                }
            });
            var obj_grid_val4 = result4;


            var data = {};
            data.context = WebAPIProxy.getContext();
            data.context.Header = obj_val;
            data.context.Address = obj_grid_val;            
            data.context.Bank = obj_grid_val1;
            data.context.Bearers = obj_grid_val4;
            data.context.User = obj_grid_val2;
            save_ESP_details(data);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }

    }
</script>
<script>
    function DeleteDetails() {
        try {
            $(""#txtMode"").val('D');
            save();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_ESPmember");
            WriteLiteral(@"_header(res) {
        $(""#txtfpo"").val(res.orgn_name);
        $(""#txtFarmer_Large"").val(res.orgn_ll_name);
    }
    function generate_ESP_header(res) {
        try {
            $(""#txt_orgn_cin"").val(res.orgn_cin)
            $(""#txtorgn_rowid"").val(res.orgn_rowid);
            $(""#txt_orgn"").val(res.orgn_code);
            $(""#txtcommon_id"").val(res.orgn_code);
            $(""#txt_version_no"").val(res.version_no);
            $(""#txtFarmer_nameEng"").val(res.orgn_name);
            $(""#txtFarmer_nameTn"").val(res.orgn_ll_name);
            $(""#txt_orgn_level"").val(res.orgn_level);
            $(""#txtfpo"").val(res.orgn_logo);
            $(""#txtFarmer_Large"").val(res.orgn_auth_sign);
            $('#facilitorg').data(""kendoComboBox"").value(res.parent_code);
            $('#facilitorgIn').data(""kendoComboBox"").value(res.parent_code);
            $(""#txt_primary_lang_code"").val(res.primary_lang_code);
            $(""#txt_secondary_lang_code"").val(res.secondary_lang_code);
            $(""#t");
            WriteLiteral(@"xt_status_code"").val(res.status_code);
            $(""#DocStat"").val(res.status_desc);
            $(""#txtMode"").val(res.mode_flag);
            $(""#txt_row_timestamp"").val(res.row_timestamp);

            if (res.orgn_type == ""FPO"") {
                $(""#rd_fpo"").attr(""checked"", ""false"");
                $(""#rd_fpo"").attr('disabled', true);               
                $(""#rd_mem"").attr('disabled', true);
                $('#txtfpo').attr(""disabled"", 'readonly');
                $('#txtFarmer_Large').attr(""disabled"", 'disabled');
                $(""#pay_help2"").hide();
                $(""#pay_help1"").hide();
            }
            else {
                $(""#rd_nonmem"").attr(""checked"", ""checked"");
                $(""#rd_nonmem"").attr('disabled', true);
                $(""#pay_help2"").hide();
                $(""#pay_help1"").hide();
            }
            if (res.orgn_type == ""Member"") {
                $(""#rd_mem"").attr(""checked"", ""false"");
                $(""#rd_mem"").attr('disab");
            WriteLiteral(@"led', true);             
                $(""#rd_fpo"").attr('disabled', true);
                $('#txtfpo').attr(""disabled"", 'readonly');
                $('#txtFarmer_Large').attr(""disabled"", 'disabled');
                $(""#pay_help2"").hide();
                $(""#pay_help1"").hide();
            }
            else {
                $(""#rd_nonmem"").attr(""checked"", ""checked"");
                $(""#rd_nonmem"").attr('disabled', true);
                $(""#pay_help2"").hide();
                $(""#pay_help1"").hide();
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_ESP_Address(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_Address_details(data);
            }
            else {
                grid_Address_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.nam");
            WriteLiteral(@"e, err);
        }
    }

    function generate_ESP_Bank(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_Bank_Detail(data);
            }
            else {
                grid_Bank_Detail([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_ESP_User(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                grid_User(data);
            }
            else {
                grid_User([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


    function generate_ESP_Bearers(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                gridOfficeBearers(data);
            }
            else {
                gridOffic");
            WriteLiteral(@"eBearers([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>
<script>
    function get_ESP_details(res) {
        var formval = form_Serialize(""frm_espregistration"");
        var obj_val = JSON.parse(formval);
        obj_val.orgn_code = res.orgn_code;
        obj_val.ic_rowid = res.orgn_rowid;
        $(""#txtcommon_id"").val(res.orgn_code);
        if ($(""#rd_fpo"").is("":checked"")) {
            $(""#pay_help1"").show();
            $('#txtfpo').attr(""disabled"", 'readonly');
            $('#txtFarmer_Large').attr(""disabled"", 'disabled');
        }
        if ($(""#rd_mem"").is("":checked"")) {
            $(""#pay_help2"").show();
            $('#txtfpo').attr(""disabled"", 'readonly');
            $('#txtFarmer_Large').attr(""disabled"", 'disabled');
        }
        var data = {};
        data.context = WebAPIProxy.getContext();
        data.context.Header = obj_val;
        retrieve_ESP_details(data);
 ");
            WriteLiteral(@"   }
</script>
<script>
    function grid_control() {
        try {
            var control_Name = [
                { ""dataCol"": ""branch_name"", ""grid_row_col"": ""branch_code"" },
                { ""dataCol"": ""ifsc_code"", ""grid_row_col"": ""ifsc_code"" },
                { ""dataCol"": """", ""grid_row_col"": ""bank_code"" },
                { ""dataCol"": """", ""grid_row_col"": ""bank_desc"" },
                { ""dataCol"": """", ""grid_row_col"": ""orgnbank_rowid"" },
                { ""dataCol"": """", ""grid_row_col"": ""bank_acc_no"" },
                { ""dataCol"": """", ""grid_row_col"": ""bank_acc_type"" },
                { ""dataCol"": """", ""grid_row_col"": ""bank_acc_type_desc"" },
                { ""dataCol"": """", ""grid_row_col"": ""dflt_dr_acc"" },
                { ""dataCol"": """", ""grid_row_col"": ""dflt_dr_acc_desc"" },
                { ""dataCol"": """", ""grid_row_col"": ""dflt_cr_acc"" },
                { ""dataCol"": """", ""grid_row_col"": ""dflt_cr_acc_desc"" },
                { ""dataCol"": """", ""grid_row_col"": ""bank_acc_purpose"" },
     ");
            WriteLiteral(@"           { ""dataCol"": """", ""grid_row_col"": ""bank_acc_purpose_desc"" },
                { ""dataCol"": """", ""grid_row_col"": ""status_code"" },
                { ""dataCol"": """", ""grid_row_col"": ""status_desc"" },
                { ""dataCol"": """", ""grid_row_col"": ""mode_flag"" },
                { ""dataCol"": """", ""grid_row_col"": ""uid"" },

                   //{ ""dataCol"": ""orgn_village"", ""grid_row_col"": ""orgn_village_desc"" },
             { ""dataCol"": ""orgn_state"", ""grid_row_col"": ""orgn_state"" },
                { ""dataCol"": ""orgn_state_desc"", ""grid_row_col"": ""orgn_state_desc"" },
                { ""dataCol"": ""orgn_village"", ""grid_row_col"": ""orgn_village"" },
                { ""dataCol"": ""orgn_village_desc"", ""grid_row_col"": ""orgn_village_desc"" },
                { ""dataCol"": ""orgn_dist"", ""grid_row_col"": ""orgn_dist"" },
                { ""dataCol"": ""orgn_dist_desc"", ""grid_row_col"": ""orgn_dist_desc"" },
                { ""dataCol"": ""orgn_taluk"", ""grid_row_col"": ""orgn_taluk"" },
                { ""dataCol"": ""orgn_talu");
            WriteLiteral(@"k_desc"", ""grid_row_col"": ""orgn_taluk_desc"" },
                { ""dataCol"": ""orgn_grampan"", ""grid_row_col"": ""orgn_panchayat"" },
                { ""dataCol"": ""orgn_grampan_desc"", ""grid_row_col"": ""orgn_panchayat_desc"" },
                { ""dataCol"": """", ""grid_row_col"": ""status_code"" },
                { ""dataCol"": """", ""grid_row_col"": ""status_desc"" },
                { ""dataCol"": """", ""grid_row_col"": ""addr_type"" },
                { ""dataCol"": """", ""grid_row_col"": ""addr_type_desc"" },
                { ""dataCol"": """", ""grid_row_col"": ""orgn_country_desc"" },
                { ""dataCol"": """", ""grid_row_col"": ""orgnaddr_rowid"" },
                { ""dataCol"": """", ""grid_row_col"": ""orgn_add1"" },
                { ""dataCol"": """", ""grid_row_col"": ""orgn_addr2"" },
                { ""dataCol"": """", ""grid_row_col"": ""orgn_pincode"" },
                { ""dataCol"": """", ""grid_row_col"": ""orgn_pincode_desc"" },
                { ""dataCol"": """", ""grid_row_col"": ""orgn_country"" },
                { ""dataCol"": """", ""grid_row_col"": ""m");
            WriteLiteral(@"ode_flag"" },
                { ""dataCol"": """", ""grid_row_col"": ""uid"" }
            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function form_control() {
        var control_Name = [
            { ""dataCol"": ""farmer_name"", ""controlId"": ""txtfpo"", ""type"": ""Text"" },
            { ""dataCol"": ""farmer_name"", ""controlId"": ""txtFarmer_Large"", ""type"": ""Text"" },
             { ""dataCol"": ""orgn_name"", ""controlId"": ""txtfpo"", ""type"": ""Text"" },
            { ""dataCol"": ""orgn_ll_name"", ""controlId"": ""txtFarmer_Large"", ""type"": ""Text"" },
            { ""dataCol"": ""orgn_code"", ""controlId"": ""txtfpocode"", ""type"": ""Text"" },
        { ""dataCol"": ""farmer_code"", ""controlId"": ""txtfarmercode"", ""type"": ""Text"" }

        ];
        return control_Name;

    }
    function controlName() {
        var control_Name = [
        ];
        return control_Name
    }

    function trans_input_data() {
        var tr");
            WriteLiteral(@"ans_coll = [
            { ""trasfer"": ""NO"", ""dataCol"": """", ""controlId"": """", ""grid_id"": """", ""grid_row_col"": """" },
             { ""trasfer"": ""Yes"", ""dataCol"": ""orgn_name"", ""controlId"": ""txtfpo"", ""grid_id"": """", ""grid_row_col"": """" },
             { ""trasfer"": ""Yes"", ""dataCol"": ""bank_code"", ""controlId"": """", ""grid_id"": ""grid_Bank"", ""grid_row_col"": """" },
             { ""trasfer"": ""Yes"", ""dataCol"": ""orgn_state_desc"", ""controlId"": """", ""grid_id"": ""grid_Address"", ""grid_row_col"": """" }
        ];
        return trans_coll;
    }
</script>
<script>
    function langTranslate(src, dest) {

        $(""#"" + src).focusout(function () {
            var id = $('#' + src).val();
            $(""#HelpDiv"").hide();
            if (id != """") {

                $.ajax({
                    url: '");
#nullable restore
#line 1704 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FarmReg\FarmRegForm.cshtml"
                     Write(Url.Action("Foo", "ListViewMaker"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                    type: 'GET',
                    dataType: 'json',
                    cache: false,
                    data: { 'id': id },
                    success: function (result) {
                        $('#' + dest).val(decodeEntities(result));
                    },
                    error: function () {
                        alert('Error occured');
                    }
                });
            }
            else {
                $('#' + dest).val("""");
                $(""#HelpDiv"").hide();
            }

        })
        $('#' + dest).focus(function () {
            $(""#HelpDiv"").html("""")
        });

        $(""body"").click(function () {
            $(""#HelpDiv"").hide();
        });
        $(""tab_list"").click(function () {
            $(""#HelpDiv"").hide();
        });


    }

    function decodeEntities(input) {
        var y = document.createElement('textarea');
        y.innerHTML = input;
        return y.value;
    }

    //funct");
            WriteLiteral(@"ion translate() {
    //    try {
    //        $(""#txtFarmer_nameEng"").focusout(function () {
    //            var txt = convertTamil1($(""#txtFarmer_nameEng"").val());
    //            $(""#txtFarmer_nameTn"").val(txt);
    //        });
    //        $(""#txtFarmer_nameTn"").on(""keypress"", function (e) {

    //            convertThis(e);
    //        });
    //        $(""#txtfpo"").focusout(function () {
    //            var txt = convertTamil1($(""#txtfpo"").val());
    //            $(""#txtFarmer_Large"").val(txt);
    //        });
    //        $(""#txtFarmer_Large"").on(""keypress"", function (e) {

    //            convertThis(e);
    //        });
    //    }
    //    catch (err) {
    //        javascript_log4j_root(arguments.callee.name, err);
    //    }
    //}
</script>
<script>
    function Address1() {
        try {
            $(""div#Address"").toggleClass('tab-pane fade active in');
            $(""div#OfficeBearers"").hide();
            $(""div#BankDetails"").hide();
   ");
            WriteLiteral(@"         $(""div#Users"").hide();
            $(""div#Address"").show();
            var itemGrid = $(""#grid_Address"").data(""kendoGrid"");
            itemGrid.refresh();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function OfficeBearers1() {
        try {
            $(""div#OfficeBearers"").toggleClass('tab-pane fade active in');
            $(""div#OfficeBearers"").show();
            $(""div#Address"").hide();
            $(""div#BankDetails"").hide();
            $(""div#Users"").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function BankDetails1() {
        try {
            $(""div#BankDetails"").toggleClass('tab-pane fade active in');
            $(""div#BankDetails"").show();
            $(""div#Address"").hide();
            $(""div#OfficeBearers"").hide();
            $(""div#Users"").hide();
        }
        catch (err) {
            javascript");
            WriteLiteral(@"_log4j_root(arguments.callee.name, err);
        }
    }

    function Users1() {
        try {
            $(""div#Users"").toggleClass('tab-pane fade active in');
            $(""div#Users"").show();
            $(""div#Address"").hide();
            $(""div#OfficeBearers"").hide();
            $(""div#BankDetails"").hide();
            $(""div#FIGFarmerClub"").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
