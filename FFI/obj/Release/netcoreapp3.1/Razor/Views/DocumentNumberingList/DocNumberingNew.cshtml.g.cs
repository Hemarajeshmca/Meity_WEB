#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\DocumentNumberingList\DocNumberingNew.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "825ec4bc16a7def8257eab94bc930a7c00fc6db1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DocumentNumberingList_DocNumberingNew), @"mvc.1.0.view", @"/Views/DocumentNumberingList/DocNumberingNew.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"825ec4bc16a7def8257eab94bc930a7c00fc6db1", @"/Views/DocumentNumberingList/DocNumberingNew.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_DocumentNumberingList_DocNumberingNew : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("Doc_num"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\DocumentNumberingList\DocNumberingNew.cshtml"
  
    ViewBag.Form = "Document Numbering";
    ViewBag.helpName = "DocNumberingNew.html";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("<script>\r\n    click_act_name = \"DocNumberingList\";\r\n    click_ctrl_name = \"DocumentNumberingList\";\r\n    form_list_url = \'../\' + click_ctrl_name + \'/\' + click_act_name;\r\n</script>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "825ec4bc16a7def8257eab94bc930a7c00fc6db16018", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "825ec4bc16a7def8257eab94bc930a7c00fc6db17061", async() => {
                WriteLiteral(@"
    <div class=""panel panel-default"">
        <div class=""panel-body"" style=""padding-top:6px;padding-bottom:2px"">
            <div class=""row"" style=""padding-bottom:15px"">
                <div class=""col-sm-4"">
                    <div class=""form-group"">
                        <label for=""cmb_activity_code"" class=""col-sm-4 control-label required"">Activity/Screen Name</label>
                        <div class=""col-sm-8"">
                            <input id=""cmb_activity_code"" name=""In_activity_code"" style=""width: 100%"" data-role=""filtercombo"">
                        </div>
                    </div>
                </div>

                <div class=""col-sm-4"">
                    <div class=""form-group"">
                        <label for=""cmb_finyear_code"" class=""col-sm-5 control-label required"">Financial Year</label>
                        <div class=""col-sm-7"">
                            <input id=""cmb_finyear_code"" name=""In_finyear_code"" style=""width: 100%"" data-role=""filtercombo");
                WriteLiteral(@""">
                        </div>
                    </div>
                </div>

            </div>
            <div class=""row"" style=""padding-bottom:15px"">
                <div class=""col-xs-12"">
                    <div id=""grid_Drop_list"">
                    </div>
                    <label for=""docnum_preview"" style=""padding-top:15px"">Document Number Preview : </label>
                    <input id=""docnum_preview"" name=""In_docnum_preview"" style=""width:1020px;"">
                </div>
            </div>
            <div class=""row"" style=""padding-bottom:10px"">

                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""txt_docnum_rowid"" class=""col-sm-5 control-label"">docnum_rowid</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" id=""txt_docnum_rowid"" name=""In_docnum_rowid"" class=""form-control"" maxlength=""10"">
                        </div>
    ");
                WriteLiteral(@"                </div>
                </div>
                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""status_code"" class=""col-sm-5 control-label"">Status_code</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" value=""A"" id=""txt_status_code"" name=""In_status_code"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>

                <div class=""col-sm-6"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""txtMode"" class=""col-sm-5 control-label"">Mode</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" id=""txtMode"" name=""In_mode_flag"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>

                <div class=""col-sm-6"">
     ");
                WriteLiteral(@"               <div class=""form-group"" style=""display:none;"">
                        <label for=""row_timestamp"" class=""col-sm-5 control-label"">Timestamp:</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" id=""txt_row_timestamp"" name=""In_row_timestamp"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    $(document).ready(function () {

        setlocalStorage(""status"", ""Active"");
        Form_validate_Name = $('form.form-horizontal').attr('id');
        Screen_Id = ""DOCNUM"";
        permission = sec_Permission(Screen_Id);
        var container = $(""#Doc_num"");
        kendo.init(container);
        container.kendoValidator({
        });
        $("".file_attach"").attr(""hdrtitle"", ""Document Numbering"");
        $("".notes"").attr(""hdrtitle"", ""Document Numbering"");
        $(""#lblForm_menuid"").text(""DIV_NUMB"");
        $(""#hide_div"").hide();

        //Activity Screen
        var ACT_SCRN = """";
        $(""#cmb_activity_code"").empty();
        ACT_SCRN = grid_comboScreen_mastercodes(""ACTIVITY"");
        filter_combobox(""cmb_activity_code"", ACT_SCRN);

        var fy_year = """";
        $(""#cmb_finyear_code"").empty();
        fy_year = grid_comboScreen_mastercodes(""FY"");
        filter_combobox(""cmb_finyear_code"", fy_year);

        gridFilter([]);
        if (getlocalStora");
            WriteLiteral(@"ge('btn_clk_val') == ""Create"") {
            $('#divCreate #review').hide();
            $(""#bottom_menus"").hide();
            $(""#txtMode"").val(""I"");
            $(""#DocStat"").val(""New"");
        }
        else if (getlocalStorage('btn_clk_val') == ""View"" || getlocalStorage('btn_clk_val') == ""Edit"") {
            $('#divEdit #reviewEd').hide();
            if (getlocalStorage(""ls_pageList"") != undefined) {
                var data = getlocalStorage(""ls_pageList"");
                var formval = form_Serialize(""Doc_num"");
                var obj_val = JSON.parse(formval);
                obj_val.In_activity_code = data.Out_activity_code;
                obj_val.In_finyear_code = data.Out_finyear_code;
                obj_val.In_docnum_rowid = data.Out_docnum_rowid;

                $('#cmb_activity_code').data(""kendoComboBox"").value(data.Out_activity_code);
                $('#cmb_finyear_code').data(""kendoComboBox"").value(data.Out_finyear_code);
                $(""#txt_docnum_rowid"").val(da");
            WriteLiteral(@"ta.Out_docnum_rowid);
                $('#cmb_activity_code').data(""kendoComboBox"").enable(false);
                $('#cmb_finyear_code').data(""kendoComboBox"").enable(false);
                var data = {};
                data.context = WebAPIProxy.getContext();;
                data.context.Header = obj_val;
                var activity_code = data.context.Header.In_activity_code;
                var finyear_code = data.context.Header.In_finyear_code;
                var docnum_rowid = data.context.Header.In_docnum_rowid;
                var Context = data.context;
                var data = { userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, activity_code: activity_code, finyear_code: finyear_code, docnum_rowid: docnum_rowid };

                    $.ajax({

          url: '");
#nullable restore
#line 145 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\DocumentNumberingList\DocNumberingNew.cshtml"
           Write(Url.Action("GetDocNumber", "DocumentNumberingList"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
     type: ""post"",
     contentType: 'application/x-www-form-urlencoded',
            data: data,
                        success: function (response2) {
                            debugger;
                 
                            if (response2.context != null) {
                                generate_DocNumberActivity_header(response2.context.Header);
                                generate_DocNumberActivity_detail(response2.context.Detail);
                         
                        $(""#txtMode"").val(""U"");
                }
                       else {
                            console.log(""Issue where Dropped"");
                        }
                    },
                    error: function (er) {
                        console.log(er);
                    }
        });

                setlocalStorage('doc_no', $(""#cmb_activity_code "").val());
                setlocalStorage('doc_row_id', $(""#txt_docnum_rowid"").val());
                setlocalStorage('d");
            WriteLiteral(@"oc_code', $(""#cmb_finyear_code"").val());
            }
        }
    });

    function load_master_code() {
        try {
            debugger;
            var data = {};
            var context = WebAPIProxy.getContext();
            data.userId = context.userId
            data.orgnId = context.orgnId
            data.locnId = context.locnId
            data.localeId = context.localeId
            data.screen_Id = ""DOCNUM"";
            var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function clear_val() {
        try {
            gridFilter([]);
            $(""#txtMode"").val("""");
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function get_DocNumberActivity_details(id) {
        try {
            debugger;
            var formval = form_Serialize(""Doc_");
            WriteLiteral(@"num"");
            var obj_val = JSON.parse(formval);
            obj_val.In_docnum_rowid = id;
            var data = {};
                data.context = WebAPIProxy.getContext();;
            data.context.Header = obj_val;
            var activity_code = data.context.Header.In_activity_code;
            var finyear_code = data.context.Header.In_finyear_code;
            var docnum_rowid = id;
            var Context = data.context;
            var data = { userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, activity_code: activity_code, finyear_code: finyear_code, docnum_rowid: docnum_rowid };
           $.ajax({

          url: '");
#nullable restore
#line 217 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\DocumentNumberingList\DocNumberingNew.cshtml"
           Write(Url.Action("GetDocNumber", "DocumentNumberingList"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
     type: ""post"",
     contentType: 'application/x-www-form-urlencoded',
            data: data,
                        success: function (response3) {
                            debugger;
                       // var res = JSON.parse(response2);
                            if (response3.context != null) {
                                generate_DocNumberActivity_header(response3.context.Header);
                                generate_DocNumberActivity_detail(response3.context.Detail);
                    }
                    else {
                        console.log(""Issue where Dropped"");
                    }
                },
                error: function (er) {
                    console.log(er);
                }

            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<script>
    var format_type_desc_list = """";
    function gridFilter(data) {
        try {
            $(""#");
            WriteLiteral(@"grid_Drop_list"").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                In_row_slno: { type: ""string"", validation: { required: { message: ""Row. No cannot be blank"" } } },

                                In_format_desc: {
                                    type: ""string"", type: ""string"", validation: {
                                        required: { message: ""Field Description cannot be blank"" },
                                        maxlength:
                                    function (input) {
                                        // dublicate();
                                        if (input.val().length > 50) {
                                            input.attr(""data-maxlength-msg"", ""Max length is 50"");
                                            return false;
                                        }
                 ");
            WriteLiteral(@"                       return true;
                                    }
                                    }
                                },

                                In_format_type: { type: ""string"", required: true },

                                In_format_type_desc: {
                                    type: ""string"", validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='format_type_desc']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Value Type cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                            ");
            WriteLiteral(@"                return true;
                                        }
                                    }
                                },
                                //format_length: {
                                //    type: ""number"", validation: {
                                //        required: { message: ""Value cannot be blank"" },
                                //        maxlength:
                                //    function (input) {
                                //        // dublicate();
                                //        if (input.val().length > 50) {
                                //            input.attr(""data-maxlength-msg"", ""Max length is 50"");
                                //            return false;
                                //        }
                                //        return true;
                                //    }
                                //    }
                                //},
                                In_f");
            WriteLiteral(@"ormat_length: { type: ""string"", validation: { required: { message: ""Length cannot be blank"" } } },

                                In_format_value: {
                                    type: ""string"", validation: {
                                        required: { message: ""Value cannot be blank"" },
                                        maxlength:
                                    function (input) {
                                        // dublicate();
                                        if (input.val().length > 50) {
                                            input.attr(""data-maxlength-msg"", ""Max length is 50"");
                                            return false;
                                        }
                                        return true;
                                    }
                                    }
                                },
                                In_status_code: { type: ""string"" },
                                In_row_");
            WriteLiteral(@"timestamp: { type: ""string"" },
                                In_mode_flag: { type: ""string"", defaultValue: ""I"" }
                            }
                        }
                    }
                },
                toolbar: ""<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>"",
                height: 400,
                groupable: false,
                dataBinding: setDefaultValues,

                dataBound: function (e) {
                    resultData = e.sender._data;
                    var rows = $('#grid_Drop_list').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },
                edit: OnEdit,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [{
                    command: [
            {
                name: ""Delete"",
                id: ""Delete"",
                imageClass: ""fa fa-c");
            WriteLiteral(@"lose"",
                click: function (e) {
                    // e.preventDefault();
                    var grid = $(""#grid_Drop_list"").data(""kendoGrid"");
                    var dataItem = $(""#grid_Drop_list"").data(""kendoGrid"").dataItem($(e.target).closest(""tr""));
                    DeleteWindowEvent(e, dataItem, grid);
                    e.stopImmediatePropagation()
                }
            },
                    ], title: ""&nbsp;"", width: ""25px"",
                },
                {
                    field: ""In_docnumformat_rowid"",
                    title: ""docnumformat_rowid"",
                    hidden: true
                },
                 {
                     field: ""In_row_slno"",
                     title: ""Seq No"",
                     width: 100,

                 },
                 {
                     field: ""In_format_desc"",
                     title: ""Field Descripition"",

                     width: 100,

                 },
                ");
            WriteLiteral(@" {
                     field: ""In_format_type"",
                     title: ""format_type"",
                     hidden: true,
                     width: 100,
                 },
                {
                    field: ""In_format_type_desc"",
                    title: ""Value Type"",
                    editor: function (container, options) {
                        combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""In_format_type"", ""grid_Drop_list"")
                    },

                    width: 100
                },

                 {
                     field: ""In_format_length"",
                     title: ""Length"",
                     //editor: function (container, options) {
                     //    item_rate(container, options.field, '9', '2');
                     //},
                     width: 100,

                 }, {
                     field: ""In_format_value"",
                     title: ""Value"",
       ");
            WriteLiteral(@"              width: 100,

                 },


                {
                    field: ""In_status_code"",
                    title: ""status_code"",
                    hidden: true
                },

                {
                    field: ""In_row_timestamp"",
                    title: ""row_timestamp"",
                    hidden: true
                },
                {
                    field: ""In_mode_flag"",
                    title: ""Mode"",
                    hidden: true
                }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function OnEdit(e) {
        setDefaultValues(e);
        e.container.find(""input[name='In_format_length']"").attr('maxlength', '2');
        e.container.find(""input[name='In_format_length']"").attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');

        e.container.find(""input[name='In_r");
            WriteLiteral(@"ow_slno']"").attr('maxlength', '2');
        e.container.find(""input[name='In_row_slno']"").attr('onkeypress', 'return event.charCode >= 48 && event.charCode <= 57');

    }
    load_master_code();
    In_format_type_desc_list = grid_comboScreen_mastercodes(""DOCNUM_FORMAT"");
</script>
<script>
    function save(mode) {
        debugger;
        try {
            var mandatory_check = true;
            if ($(""#txt_docnum_rowid"").val() == """") {
                $(""#txt_docnum_rowid"").val(0);
            }

            if ($(""#txtMode"").val() == """") {
                $(""#txtMode"").val('I');
            }
            if ($(""#DocStat"").val() == ""Active"") {
                $(""#txtMode"").val('U');
            }

            if (mode != undefined) {
                $(""#txtMode"").val('D');
            }
           
            $('#cmb_activity_code').data(""kendoComboBox"").enable(true);
            $('#cmb_finyear_code').data(""kendoComboBox"").enable(true);
            var formval = form_Serial");
            WriteLiteral(@"ize(""Doc_num"");
            var obj_val = JSON.parse(formval);

            var grid_val = JSON.stringify($(""#grid_Drop_list"").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            var grid_validate_msg = """";

            if (result.length == 0) {
                kendoAlert(""Atleast one record needs to be entered"");
                mandatory_check = false;
                return false;
            }
            $.each(result, function (key, value) {
               
                if (value.In_docnum_rowid == """") {
                    grid_validate_msg += ""Seq no cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (value.In_row_slno == """") {
                    grid_validate_msg += ""Seq no cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (value.In_format_desc == """") {
                    grid_vali");
            WriteLiteral(@"date_msg += ""Field Description cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (value.In_format_type_desc == """") {
                    grid_validate_msg += ""Value type cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (value.In_format_length == """") {
                    grid_validate_msg += ""Length cannot be blank <br>"";
                    mandatory_check = false;
                }

                if (value.In_format_value == """") {
                    grid_validate_msg += ""Value cannot be blank <br>"";
                    mandatory_check = false;
                }
                if (mandatory_check == false) {
                    kendoAlert(grid_validate_msg);
                    return false;
                }

            });

            if (mandatory_check == true) {
                $.each(result, function (index, value) {
                    var row_id = value.In_docn");
            WriteLiteral(@"umformat_rowid;
                    if (row_id == undefined) {
                        result[index].In_docnumformat_rowid = 0;
                    }
                    var In_row_slno = value.In_row_slno;
                    if (In_row_slno == undefined) {
                        result[index].In_row_slno = 0;
                    }
                    var mode = result[index].In_mode_flag;
                    if (mode == ""S"") {
                        result[index].In_mode_flag = ""U"";
                    }

                });
                var obj_grid_val = result;
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                data.context.Detail = obj_grid_val;
                var Context = data.context;
                $.ajax({
                    type: ""POST"",
                    data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.l");
            WriteLiteral(@"ocaleId, Header: Context.Header, Detail: Context.Detail }),
                    url: ""/DocumentNumberingList/SaveDocNumber"",
                    dataType: ""json"",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        console.log(response)
                        var Res = JSON.parse(response);
                        if (Res.context != null) {
                            var mode = $(""#txtMode"").val();
                            if (mode == ""I"") {
                                kendoAlert(""Document Numbering Details saved successfully"");
                                get_DocNumberActivity_details(Res.context.header.in_docnum_rowid);
                            }
                            else if (mode == ""D"") {
                                kendoAlert(""Document Numbering Details inactivate successfully"");
                                get_DocNumberActivity_details(Res.context.header.in_docnum_rowi");
            WriteLiteral(@"d);
                            }
                            else {
                                kendoAlert(""Document Numbering Details saved successfully"");
                                get_DocNumberActivity_details(Res.context.header.in_docnum_rowid);
                            }
                        }
                        else {
                            kendoAlert(Res.ApplicationException.errorDescription);
                        }
                    },
                    error: function (er) {
                        alert(er)
                        console.log(er)
                    }

                });
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function DeleteDetails() {
        //  $(""#txtMode"").val(""D"");
        save(""D"");
    }
    // bug no: 17 fixed by vinoth added In_docnum_rowid
    function generate_DocNumberActivity_header(res) {
        try {
           ");
            WriteLiteral(@" $(""#txt_docnum_rowid"").val(res.In_docnum_rowid);            
            $(""#cmb_finyear_code"").data(""kendoComboBox"").value(res.In_finyear_code);
            $(""#DocStat"").val(res.In_status_desc);
            $(""#txtMode"").val(res.In_mode_flag);
            $('#cmb_activity_code').data(""kendoComboBox"").value(res.In_activity_code);
            $(""#docnum_preview"").val(res.In_docnum_preview);
            $('#cmb_activity_code').data(""kendoComboBox"").enable(false);
            $('#cmb_finyear_code').data(""kendoComboBox"").enable(false);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_DocNumberActivity_detail(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                gridFilter(data);
            }
            else {
                gridFilter([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name");
            WriteLiteral(", err);\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n    .k-widget.k-tooltip {\r\n        background-color: #ffe79e;\r\n        color: #6b5100;\r\n    }\r\n\r\n    span.k-tooltip {\r\n        white-space: pre-line;\r\n    }\r\n</style>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
