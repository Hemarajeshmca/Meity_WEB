#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\PAWHSNewBatchCreation\BatchCreationNewV3.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "189f1b476248ebf6f10cde72c9c632fe1a61eacc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PAWHSNewBatchCreation_BatchCreationNewV3), @"mvc.1.0.view", @"/Views/PAWHSNewBatchCreation/BatchCreationNewV3.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"189f1b476248ebf6f10cde72c9c632fe1a61eacc", @"/Views/PAWHSNewBatchCreation/BatchCreationNewV3.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_PAWHSNewBatchCreation_BatchCreationNewV3 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("farmer_img"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/images/NoImage.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("col-sm-5 img-bordered profileImg1"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("User Image"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("height", new global::Microsoft.AspNetCore.Html.HtmlString("150"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("50"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("NewBatchCreation_form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/common.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/tamil.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/CommonScripts/HelpFile.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\PAWHSNewBatchCreation\BatchCreationNewV3.cshtml"
   ViewBag.Form = "Batch Creation";
    Layout = "~/Views/Shared/FormViewLayout1.cshtml"; 

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "189f1b476248ebf6f10cde72c9c632fe1a61eacc8967", async() => {
                WriteLiteral(@"
    <div class=""panel panel-default"">
        <div class=""panel-body"" style=""padding-top:20px;padding-bottom:20px"">
            <div class=""row"" style=""padding-bottom:1px"">
                <div class=""col-xs-3"">
                    <div class=""form-group"">
                        <label for=""txt_batchno"" class=""col-sm-5 control-label"">Batch No:</label>
                        <div class="" col-sm-6"">
                            <input type=""text"" id=""txt_BatchNo"" class=""form-control"" name=""in_batch_no"" disabled>
                            <input type=""hidden"" id=""txt_batch_rowd"" name=""In_batch_rowid"" maxlength=""50"" value=""0"">
                        </div>
                    </div>
                </div>
                <div class=""col-xs-4"">
                    <div class=""form-group"">
                        <label for=""txtfarcusname"" class=""col-sm-4 control-label required"">Buyer Name:</label>
                        <div class="" col-sm-6"">
                            <input type=""text"" i");
                WriteLiteral(@"d=""txtfarcusname"" class=""form-control"" name=""In_buyer_name"">
                            <input hidden id=""buyer_code"" name=""In_buyer_code"" />
                        </div>
                        <a class=""HelpWindow fa fa-search fa-lg"" role=""button"" id=""pay_help1"" data-toggle=""modal"" href=""/HelpFilter/HelpFilter"" hdrtitle=""Member"" searchid=""PAWHSBUYER"" data-target=""#HelpModal"" onclick=transfer(this,""form"","""",""form_control""); title=""Search"" style=""font-size: 19px; margin-left: 10px; ""></a>
                    </div>
                </div>
                <div class=""col-xs-3"">
                    <div class=""form-group"">
                        <label for=""truck_num"" class=""col-sm-4 control-label"">Vehicle No:</label>
                        <div class="" col-sm-6"">
                            <input type=""text"" id=""truck_num"" class=""form-control"" name=""In_Vehicle_no"" />
                        </div>
                    </div>
                </div>
                <div class=""col-sm-2"">
     ");
                WriteLiteral(@"               <div class=""form-group"" style=""margin-left:10px"">
                        <input type=""radio"" id=""rd_PO"" name=""ag"" checked value=""PO"" />  PO
                        <input type=""radio"" id=""rd_NONPO"" style=""margin-left:10px"" name=""ag"" value=""NONPO"" />  NON-PO
                    </div>
                </div>
            </div>
            <div class=""row"" style=""padding-bottom:1px"">
                <div class=""col-xs-3"">
                    <div class=""form-group"">
                        <label for=""cmb_po_no"" class=""col-sm-5 control-label required"">PO Number:</label>
                        <div class="" col-sm-6"">
                            <input id=""cmb_po_no"" name=""In_po_no"" class=""form-control"" readonly>
                        </div>
                        <a class=""HelpWindow fa fa-search fa-lg"" role=""button"" id=""pay_help2"" data-toggle=""modal"" href=""/HelpFilter/HelpFilter"" hdrtitle=""Member"" searchid=""PAWHSPONUMSEARCH"" data-target=""#HelpModal"" onclick=transfer(this,""form"",""");
                WriteLiteral(@""",""form_control""); title=""Search"" style=""font-size: 19px; margin-left: 5px; ""></a>
                    </div>
                </div>
                <div class=""col-xs-4"">
                    <div class=""form-group"">
                        <label for=""cmb_cus_type"" class=""col-sm-4 control-label"">Remarks:</label>
                        <div class="" col-sm-6"">
                            <textarea class=""form-control"" id=""cmb_cus_type"" name=""In_remarks"" rows=""3"" cols=""5"" style=""margin: 0px 1.82813px 0px 0px;width: 166px;height: 30px;position: relative;""></textarea>
                        </div>
                    </div>
                </div>
                <div class=""col-xs-4"" style=""margin-left: -86px;"">
                    <div class="" form-group"">
                        <input type=""button"" id=""btnrefresh"" class=""btn btn-sm btn-info"" value=""Refresh"" style=""margin-left: 2px;"" data-toggle=""tooltip"" data-placement=""top""");
                BeginWriteAttribute("title", " title=\"", 4221, "\"", 4229, 0);
                EndWriteAttribute();
                WriteLiteral(@" onclick="" refreshbatchdetails()"">
                    </div>
                </div>
                <div class=""col-xs-4"" style=""display:none"">
                    <label for=""cmb_rec_Loca"" class=""control-label"">Buyer Location:&nbsp;&nbsp;&nbsp;&nbsp</label>
                    <input id=""cmb_rec_Loca"" name=""In_buyer_location"">
                    <input type=""text"" id=""buyer_state_code"" name=""In_buyer_state_code"" style=""display:none"" />
                </div>
                <div class=""col-sm-2"">
                    <div class=""form-group"" style=""display:none;"">
                        <label for=""txtMode"" class=""col-sm-5 control-label"">Mode</label>
                        <div class=""col-sm-4"">
                            <input type=""text"" id=""txtMode"" name=""In_mode_flag"" class=""form-control"" maxlength=""10"">
                        </div>
                    </div>
                </div>
            </div>
            <div class=""row"">
                <section class=""col-md-12"">
      ");
                WriteLiteral(@"              <div id=""tab_list"" class=""col-md-12"">
                        <ul class=""nav nav-tabs"">
                            <li>
                                <a href=""#Batch"" id=""data1"" role=""tab"" onclick=""Batchtab()"" data-toggle=""tab"">
                                    Batch
                                </a>
                            </li>
                            <li>
                                <a href=""#OtherDtls"" id=""data1"" role=""tab"" onclick=""Othertab()"" data-toggle=""tab"">
                                    Other Costs
                                </a>
                            </li>
                            <li>
                                <a href=""#Invoice"" id=""txtpo"" role=""tab"" onclick=""Invoice()"" data-toggle=""tab"">
                                    Purchase Order
                                </a>
                            </li>
");
                WriteLiteral(@"                            <li style=""width: 8%;"">
                                <a href=""#Attachment"" id=""attachmentdtl"" onclick=""Attachment()"" role=""tab"" data-toggle=""tab"">
                                    Attachment
                                </a>
                            </li>
                        </ul>
                        <div class=""tab-content"">
                            <div class=""tab-pane fade active in"" id=""Batch"">
                                <div class=""panel panel-default"">
                                    <div class=""panel-body"">
                                        <div id=""grid_Batch"">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""tab-pane fade "" id=""OtherDtls"">
                                <div class=""panel panel-default"">
                                    <div class=""panel-body"">
 ");
                WriteLiteral(@"                                       <div id=""grid_Other"">
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class=""tab-pane fade"" id=""Invoice"">
                                <div class=""panel panel-default"">
                                    <div class=""panel-body"" style=""padding-bottom:5px"">
                                        <div id=""grid_invoice"">
                                        </div>
                                    </div>
                                </div>
                            </div>
");
                WriteLiteral(@"                            <div class=""tab-pane fade"" id=""Attachment"">
                                <div class=""panel panel-default"">
                                    <div class=""panel-body"" style=""padding-bottom:5px"">
                                        <div id=""grid_attachment""></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
    <div id=""dialog"">
        <button type=""button"" id=""btnsaveShipment"" style=""margin-left:18px;margin-top:-7px"" class=""btn btn-info"" onclick=""saveshipment()""><span class=""glyphicon glyphicon-ok""></span> Save</button>
        <input type=""hidden"" id=""tax_rate"" name=""In_tax_rate"">
        <div id=""grid_shipment""></div>
    </div>
    <div id=""dialogFileupload"">
        <div class=""form-group"">
            <div class=""col-md-10"">
                <p>Uploa");
                WriteLiteral(@"d one or more files using this form:</p>
                <input type=""file"" id=""farmerfile"" name=""files"" multiple />
                <input type=""hidden"" id=""txtImageHidden"" name=""in_photo_farmer"" />
                <input type=""hidden"" id=""txtImageunique"" name=""unique_id"" />

            </div>
        </div>
        <div>
            &nbsp;&nbsp;&nbsp;
        </div>
        <div class=""form-group"">
            <div class=""col-md-10"">
                <input type=""submit"" onclick=""save_Image()"" value=""Upload"" />
            </div>
        </div>
    </div>
    <div id=""dialogFileuploadView"">

        <div class=""form-group"">
            <div class=""col-md-10"">
                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "189f1b476248ebf6f10cde72c9c632fe1a61eacc19486", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <input type=\"hidden\" id=\"txtagg_code\" name=\"Out_agg_code\">\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<script>\r\n    click_act_name = \"BatchCreationList\";\r\n    click_ctrl_name = \"PAWHSNewBatchCreation\";\r\n    form_list_url = \'../\' + click_ctrl_name + \'/\' + click_act_name;\r\n</script>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "189f1b476248ebf6f10cde72c9c632fe1a61eacc22646", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "189f1b476248ebf6f10cde72c9c632fe1a61eacc23687", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "189f1b476248ebf6f10cde72c9c632fe1a61eacc24728", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "189f1b476248ebf6f10cde72c9c632fe1a61eacc25769", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    var ViewBatchTab = false;
    var arr = [];
    $(document).ready(function () {
        kendodate_format();
        $(""#bottom_menus"").hide();
        $(""#hide_div"").hide();
        $(""#divCreate #review"").hide();
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $(""#NewBatchCreation_form"");
        kendo.init(container);
        container.kendoValidator({
        });
        Screen_Id = ""PWNEWBATCHCRT"";
        permission = sec_Permission(Screen_Id);
        New_grid_Batch_details([]);
        New_grid_Other_details([]);
        gridinvoice([]);
        //gridtax([]);
        gridattachment([]);
        load_master_code();
        $(""#pay_help2"").hide();
        //var polist = """";
        //$(""#cmb_po_no"").empty();
        //polist = grid_comboScreen_mastercodes(""POLIST"");
        //filter_combobox(""cmb_po_no"", polist);

        $(""#dialogFileupload"").val();
        $(""#btnsaveShipment"").hide();
        $(""#dialogFileupload""");
            WriteLiteral(@").hide();
        $(""#dialogFileuploadView"").hide();
        if (getlocalStorage('btn_clk_val') == ""Create"") {
            debugger;
            $(""#DocStat"").val(""New"");
            load_master_code();
            //Transporttab();
            Batchtab();
        }
        var org_id = getlocalStorage('org_id');
        var org_type = getlocalStorage('org_type');
        var orgtname = getlocalStorage('orgtname');
        var org = getlocalStorage('org');
        $(""#txtagg_code"").val(org_id);

        if (getlocalStorage('btn_clk_val') == ""View"") {
            debugger;
            $(""#bottom_menus"").hide();
            $(""#hide_div"").hide();
            if (getlocalStorage(""ls_pageList"") != undefined) {
                var data = getlocalStorage(""ls_pageList"");
                var batch_rowid = data.Out_batch_rowid;
                var batch_no = data.Out_batch_no;
                var formval = form_Serialize(""NewBatchCreation_form"");
                var obj_val = JSON.parse(formval");
            WriteLiteral(@");
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                var Context = data.context;
                var data = { org: Context.orgnId, locn: Context.locnId, user: Context.userId, lang: Context.localeId, batch_rowid: batch_rowid, batch_no: batch_no   };
          $.ajax({
         url: '");
#nullable restore
#line 258 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\PAWHSNewBatchCreation\BatchCreationNewV3.cshtml"
          Write(Url.Action("FectNewPAWHSBatchCreation", "PAWHSNewBatchCreation"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
         type: ""post"",
         contentType: 'application/x-www-form-urlencoded',
         data: data,
         success: function (response) {
             if (response != null) {
                 generate_batchcreation_header(response.Header);
                 generate_BatchCreation_BatchList(response.Batch);
                 generate_batchcreation_OtherList(response.OtherDtl);
                 generate_batchcreation_POList(response.Invoice);
                 generate_batchcreation_POTaxList(response.Tax);
                 generate_batchcreation_POAttachmentList(response.Attachment);
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }
        });
            }
            viewdisable();
        }
        $('#HelpModal').on('hide.bs.modal', function (e) {
            debugger;
            if ($(""#cmb_po_no"").val() != undefined && $(""#cmb_po_no"").val() != """") {
                ponumchanged();
  ");
            WriteLiteral(@"          }
            if ($(""#txtfarcusname"").val() != undefined && $(""#txtfarcusname"").val() != """") {
                $(""#pay_help2"").show();
            }
        });
    });

    function Batchtab() {
        debugger;
        try {
            $(""div#Attachment"").hide();
            $(""div#Invoice"").hide();
            $(""div#Transport"").hide();
            $(""div#OtherDtls"").hide();
            //$(""div#Batch"").toggleClass('tab-pane fade active in');
            $(""div#Batch"").show();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Transporttab() {
        try {
            //$(""div#Transport"").toggleClass('tab-pane fade active in');
            $(""div#Transport"").show();
            $(""div#Batch"").hide();
            $(""div#OtherDtls"").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Othertab() {
        try {
 ");
            WriteLiteral(@"           if ($(""#txtMode"").val() == ""U"") {
                //$(""div#OtherDtls"").toggleClass('tab-pane fade active in');
                $(""div#OtherDtls"").show();
                $(""div#Batch"").hide();
                $(""div#Invoice"").hide();
                $(""div#Attachment"").hide();
                $(""div#Tax"").hide();
            }
            else {
                var grid = $(""#grid_Batch"").data(""kendoGrid"");
                var selected = [];
                grid.tbody.find(""input:checked"").closest(""tr"").each(function (index) {
                    selected.push(grid.dataItem(this));
                });
                if (selected.length > 0) {
                    for (var i = 0; i < selected.length; i++) {
                        arr[i] = [code = selected[i].In_item_code, desc = selected[i].In_item_name];
                        // arr[i] = selected[i].In_item_name;
                    };
                    //$(""div#OtherDtls"").toggleClass('tab-pane fade active in');
          ");
            WriteLiteral(@"          $(""div#OtherDtls"").show();
                    $(""div#Batch"").hide();
                    $(""div#Invoice"").hide();
                    $(""div#Attachment"").hide();
                    $(""div#Tax"").hide();
                }
                else {
                    kendoAlert(""Please Select Atleast One Lot in Batch Tab"");
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function onlyUnique(value, index, self) {
        return self.indexOf(value) === index;
    }
    function Invoice() {
        try {
            if ($(""#rd_NONPO"").is(':checked')) {
                var grid = $(""#grid_Batch"").data(""kendoGrid"");
                var selected = [];
                var polist = [];
                var itemcode = [];
                var totalitem = 0;
                var itemcode ="""";
                var itemname = """";
                var hsncode = """";
                var hsndesc =");
            WriteLiteral(@" """";
                var taxrateitem = """";
                var data = [];
                grid.tbody.find(""input:checked"").closest(""tr"").each(function (index) {
                    selected.push(grid.dataItem(this));
                });
                if (selected.length > 0) {

                    for (var i = 0; i < selected.length; i++) {
                        data = selected[i].In_item_code;
                        polist.push(data);
                    }

                    var unique = polist.filter(onlyUnique);
                    for (var i = 0; i < unique.length; i++) {
                        var dataitem = unique[i];
                        totalitem = 0;
                        for (var j = 0; j < selected.length; j++) {
                            if (selected[j].In_item_code == dataitem) {
                                totalitem = totalitem + selected[j].In_actual_qty
                                itemcode = selected[j].In_item_code
                                it");
            WriteLiteral(@"emname = selected[j].In_item_name
                                hsncode = selected[j].In_hsn_code
                                hsndesc = selected[j].In_hsn_desc
                                taxrateitem = selected[j].tax_rate
                            }
                        }
                        var gridinv = $(""#grid_invoice"").data(""kendoGrid"");
                        if (gridinvoice) {
                            var dataSource_item = gridinv.dataSource;
                            dataSource_item.insert(
                                {
                                    In_podtl_rowid: 0,
                                    In_sln_no:0,
                                    In_item_code: itemcode,
                                    In_item_name: itemname,
                                    In_po_no: """",
                                    In_hsn_code: hsncode,
                                    In_hsn_desc: hsndesc,
                                    In_qty: totalite");
            WriteLiteral(@"m,
                                    In_rate: """",
                                    In_tax_rate: 0,
                                    In_product_amount: """",
                                    In_discount: """",
                                    In_othercharges: """",
                                    In_tax: """",
                                    In_gross_amount: """",
                                    In_remarks: """",
                                    In_mode_flag: ""I"",
                                    tax_rate:taxrateitem
                                });
                          }
                       }
                    };
                $(""div#Invoice"").toggleClass('tab-pane fade active in');
                    $(""div#OtherDtls"").hide();
                    $(""div#Batch"").hide();
                    $(""div#Invoice"").show();
                    $(""div#Attachment"").hide();
                $(""div#Tax"").hide();
                gridinv.refresh();
                }
 ");
            WriteLiteral(@"               else {
                $(""div#Invoice"").show();
                $(""div#Batch"").hide();
                $(""div#OtherDtls"").hide();
                $(""div#Attachment"").hide();
                $(""div#Tax"").hide();
                }
            }            
        catch (err) {
            console.log(err);
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Tax() {
        try {
            //$(""div#Tax"").toggleClass('tab-pane fade active in');
            $(""div#Tax"").show();
            $(""div#Batch"").hide();
            $(""div#OtherDtls"").hide();
            $(""div#Attachment"").hide();
            $(""div#Invoice"").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function Attachment() {
        try {
            //$(""div#Attachment"").toggleClass('tab-pane fade active in');
            $(""div#Attachment"").show();
            $(""div#Batch"").hide();
    ");
            WriteLiteral(@"        $(""div#OtherDtls"").hide();
            $(""div#Tax"").hide();
            $(""div#Invoice"").hide();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function load_master_code() {
        try {
            debugger;
            var data = {};
            var context = WebAPIProxy.getContext();
            data.userId = context.userId
            data.orgnId = context.orgnId
            data.locnId = context.locnId
            data.localeId = context.localeId
            data.screen_Id = ""PWNEWBATCHCRT"";
            var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function New_grid_Batch_details(data) {
        try {
            $(""#grid_Batch"").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
             ");
            WriteLiteral(@"           model: {
                            fields: {
                                In_act_row_id: { type: ""int"", editable: false},
                                In_orgn_code: { type: ""string"", editable: false },
                                In_agg_code: { type: ""string"", editable: false },
                                In_product_type: { type: ""string"", editable: false },//In_lotno
                                In_lot_type: { type: ""string"", editable: false },
                                In_farmer_code: { type: ""string"", editable: false },
                                In_farmer_name: { type: ""string"", editable: false },
                                In_item_code: { type: ""string"", editable: false},
                                In_item_name: { type: ""string"", editable: false },
                                In_actual_qty: { type: ""double"", editable: false},
                                In_actual_price: { type: ""double"", editable: false},
                           ");
            WriteLiteral(@"     In_actual_value: { type: ""double"", editable: false},
                                In_advance_amt: { type: ""double"", editable: false },
                                In_no_of_bags: { type: ""int"", editable: false },
                                In_sale_qty: { type: ""int"", editable: false },
                                In_hsn_code: { type: ""string"", editable: false },
                                In_hsn_desc: { type: ""string"", editable: false },
                                tax_rate: { type: ""string"", editable: false },
                                In_mode_flag: { type: ""string"", defaultValue: ""I"", editable: false }
                            }
                        }
                    }
                },
                //toolbar: ""<a  class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>"",
                height: 250,
                //groupable: false,
                sortable: true,
                selectable: true,
 ");
            WriteLiteral(@"               navigatable: true,
                change: function (e) {
                    $('tr').find('[type=checkbox]').prop('checked', false);
                    $('tr.k-state-selected').find('[type=checkbox]').prop('checked', true);
                },
                columns: [
                    {
                        title: ""Select All"", width: 70,
                        headerTemplate: ""<input type='checkbox'  id='selectall' class='k-checkbox header-checkbox' ><label class='k-checkbox-label' for='selectall'> Select All</label>"",
                        template: ""<input type='checkbox' name='Id' class='checkbox' />"",
                    },
                    {
                        field: ""In_act_row_id"",
                        title: ""Act Rowid"",
                        hidden: true
                    },
                    {
                        field: ""In_orgn_code"",
                        title: ""Orgn Code"",
                        hidden: true
                ");
            WriteLiteral(@"    },
                    {
                        field: ""In_hsn_code"",
                        title: ""In_hsn_code"",
                        hidden: true
                    },
                    {
                        field: ""In_hsn_desc"",
                        title: ""In_hsn_desc"",
                        hidden: true
                    },
                    {
                        field: ""tax_rate"",
                        title: ""tax_rate"",
                        hidden: true
                    },
                    {
                        field: ""In_agg_code"",
                        title: ""Agg Code"",
                        hidden: true
                    },
                    {
                        field: ""In_product_type"",//In_lotno
                        editor: '<div class=""input-group input-group-sm""><input type=""text"" readonly name=""orgn_village_desc"" maxlength=""10"" style=""width:100px;color:black""  onkeypress=""return speical_char(event)"" data-bind=""");
            WriteLiteral(@"value:orgn_village_desc""/><span class=""input-group-btn"" style=""padding-right: 150px;""><a class=""HelpWindow fa fa-search fa-lg"" data-toggle=""modal"" href=""/HelpFilter/HelpFilter"" hdrtitle=""Details"" searchid=""PAWHSPO"" data-target=""#HelpModal"" onclick=transfer(this,""grid"",""grid_invoice"",""gridinvoice"") title=""Search"" style=""font-size: 15px; padding-left: 10px;""></a> </span> </div>',
                        title: ""Lot No"",
                        width: 150
                    },
                    {
                        field: ""In_lot_type"",
                        title: ""Lot Type"",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: ""In_farmer_code"",
                        title: ""Farmer Code"",
                        width: 120,
                        hidden: true
                    },

                    {
                        field: ""In_farmer_name"",
                        title: ""F");
            WriteLiteral(@"armer Name"",
                        width: 100,
                        hidden: true
                    },

                    {
                        field: ""In_item_code"",
                        title: ""Item Code"",
                        width: 100
                    },
                    {
                        field: ""In_item_name"",
                        title: ""Item Name"",
                        width: 100
                    },

                    {
                        field: ""In_actual_qty"",
                        title: ""Actual Qty"",
                        width: 100,
                    },
                    {
                        field: ""In_actual_price"",
                        title: ""Actual Price"",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: ""In_actual_value"",
                        title: ""Actual Value"",
                        width: 10");
            WriteLiteral(@"0,
                        hidden: true
                    },
                    {
                        field: ""In_advance_amt"",
                        title: ""Advance Amount"",
                        hidden: true
                    },
                    {
                        field: ""In_no_of_bags"",
                        title: ""No Of Bags"",
                        width: 75
                    },
                    {
                        field: ""In_mode_flag"",
                        title: ""Mode Flag"",
                        hidden: true,
                        width: 75
                    }
                ],
                editable: true
            });

            function checkchanged() {
                alert(checked);
            };
            $(""#selectall"").click(function (ev) {
                var checked = ev.target.checked;
                //
                if (checked) {
                    $('.checkbox').prop('checked', true);

          ");
            WriteLiteral(@"      } else {
                    $('.checkbox').prop('checked', false);
                }
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function New_grid_Other_details(data) {
        try {
            $(""#grid_Other"").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                in_cost_type: { type: ""string"", required: true},
                                In_cost_name: {
                                    validation: {
                                        dropdownlistValidation: function (input) {
                                            if (input.is(""[name='In_cost_name']"")) {
                                                var isValid = true;
                                                input.attr(""data-dropdownlistValidation-msg"", ""Cost Typ");
            WriteLiteral(@"e cannot be blank""); if (input.val().length <= 0) {
                                                    isValid = false;
                                                }
                                                return isValid;
                                            }
                                            return true;
                                        }
                                    }
                                },
                                In_cost_value: { type: ""int"", defaultValue: 0 },
                                In_mode_flag: { type: ""string"", defaultValue: ""I""}


                            }
                        }
                    }
                },
                toolbar: ""<a  class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>"",
                height: 280,
                groupable: false,

                sortable: true,
                selectable: true,
                navigatabl");
            WriteLiteral(@"e: true,
                columns: [{

                    command: [
                        {
                            name: ""Delete"",
                            id: ""Delete"",
                            imageClass: ""fa fa-close"",
                            click: function (e) {
                                var grid = $(""#grid_Other"").data(""kendoGrid"");
                                var dataItem = $(""#grid_Other"").data(""kendoGrid"").dataItem($(e.target).closest(""tr""));
                                DeleteWindowEvent(e, dataItem, grid);
                                e.stopImmediatePropagation()
                            }
                        },
                    ],
                    title: ""Action"",
                    width: ""25px"",

                },
                {
                    field: ""in_cost_type"",
                    title: ""cost_type"",
                    hidden: true,

                },
                {
                    field: ""In_cost_n");
            WriteLiteral(@"ame"",
                    title: ""Cost Name"",
                    editor: function (container, options) {
                        combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""in_cost_type"", ""grid_Other"")
                    },
                    width: 100,

                },
                {
                    field: ""In_cost_value"",
                    title: ""Value"",
                    width: 50,
                    attributes: { style: ""text-align:right;"", ""class"": ""customClass"" },
                    editor: function (container, options) {
                        item_rate(container, options.field, '9', '2');
                    },

                },
                {
                    field: ""in_mode_flag"",
                    title: ""Mode"",
                    hidden: true
                }
                ],
                editable: true
            });
        }
        catch (err) {
            alert(err);
  ");
            WriteLiteral(@"      }
    }
    load_master_code();
    In_cost_name_list = grid_comboScreen_mastercodes(""QCD_OTHERCOST_TYPE"");
    function gridinvoice(data) {
        try {
            $(""#grid_invoice"").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_podtl_rowid: { type: ""string"", editable: false },
                                In_sln_no: { type: ""string"", editable: false },
                                In_po_no: { type: ""string"", editable: false },
                                In_item_code: { type: ""string"" },
                                In_item_name: { type: ""string"" },
                                //In_product_Variety: { type: ""string"" },
                                In_hsn_code: { type: ""string"", editable: false },
                                In_hsn_desc: { type: ""string"", editable: false },
                       ");
            WriteLiteral(@"         In_qty: { type: ""string"", editable: false },
                                In_rate: { type: ""string"" },
                                In_tax_rate: { type: ""string"", defaultValue: ""0"" },
                                In_product_amount: { type: ""string"", defaultValue: ""0"", },
                                In_discount: { type: ""string"", defaultValue: ""0"", editable: false },
                                In_othercharges: { type: ""number"", defaultValue: 0, editable: false },
                                In_tax: { type: ""string"", defaultValue: ""0"", editable: false },
                                In_gross_amount: { type: ""number"", defaultValue: 0, },
                                In_remarks: { type: ""string"", defaultValue: ""0"", editable: false },
                                In_mode_flag: { type: ""string"", defaultValue: ""I"", editable: false },
                                tax_rate: { type: ""string"", defaultValue: ""0"" },
                            }
                      ");
            WriteLiteral(@"  }
                        },
                        aggregate: [{ field: ""In_gross_amount"", aggregate: ""sum"" }],
                    },

                    //toolbar: ""<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus' style='color:Black'></span></a>"",
                    dataBinding: setDefaultValues,
                    dataBound: function (e) {
                        resultData = e.sender._data;
                        var rows = $('#grid_invoice').data('kendoGrid').tbody.children();
                        setColor(rows, resultData);
                    },
                    edit: OnEdit,
                    save: function (data) {
                        if (data.values.In_qty) {
                            data.model.set(""In_product_amount"", (parseFloat(data.values.In_qty) * parseFloat(data.model.In_rate)).toFixed(2));
                            var prd_amt = data.model.In_product_amount != undefined ? parseFloat(data.model.In_product_amount) : parseFloat(0.0);
 ");
            WriteLiteral(@"                           var dis_amt = data.model.In_discount != """" ? parseFloat(data.model.In_discount) : parseFloat(0.0);
                            var amt = (parseFloat(prd_amt) + parseFloat(dis_amt)).toFixed(2);
                            var amt1 = (parseFloat(prd_amt) - parseFloat(dis_amt)).toFixed(2);
                            data.model.set(""In_tax_rate"", ((parseFloat(amt1) * parseFloat(data.model.tax_rate)) / 100.0).toFixed(2));
                            data.model.set(""In_gross_amount"", (parseFloat(amt) + parseFloat(data.model.In_tax_rate)).toFixed(2));
                        }
                        if (data.values.In_rate) {
                            data.model.set(""In_product_amount"", (parseFloat(data.model.In_qty) * parseFloat(data.values.In_rate)).toFixed(2));
                            var prd_amt = data.model.In_product_amount != undefined ? parseFloat(data.model.In_product_amount) : parseFloat(0.0);
                            var dis_amt = data.model.In_discount != """"");
            WriteLiteral(@" ? parseFloat(data.model.In_discount) : parseFloat(0.0);
                            var amt = (parseFloat(prd_amt) + parseFloat(dis_amt)).toFixed(2);
                            var amt1 = (parseFloat(prd_amt) - parseFloat(dis_amt)).toFixed(2);
                            data.model.set(""In_tax_rate"", ((parseFloat(amt1) * parseFloat(data.model.tax_rate)) / 100.0).toFixed(2));
                            data.model.set(""In_gross_amount"", (parseFloat(amt) + parseFloat(data.model.In_tax_rate)).toFixed(2));
                        }
                    },
                    height: 240,
                    sortable: true,
                    selectable: true,
                    navigatable: true,
                    columns: [
                        {
                            field: ""In_podtl_rowid"",
                            title: ""In_podtl_rowid"",
                            hidden: true
                        },


                        {
                            field: ""In_i");
            WriteLiteral(@"tem_code"",
                            title: ""Item Code"",
                            width: 80,
                            hidden: true
                        },
                        {
                            field: ""In_item_name"",
                            title: ""Item Name"",
                            editor: function (container, options) {
                                combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""In_item_code"", ""grid_invoice"")
                            },
                            width: 100
                        },
                        {
                            field: ""In_hsn_code"",
                            title: ""HSN Code"",
                            width: 100,
                            hidden: true
                        },
                        {
                            field: ""In_hsn_desc"",
                            title: ""HSN Code"",
                            wi");
            WriteLiteral(@"dth: 100,
                        },

                        {
                            field: ""In_po_no"",
                            title: ""PO No"",
                            width: 80,
                            hidden: true
                        },
                        {
                            field: ""In_qty"",
                            title: ""PO Quantity"",
                            width: 80,
                            attributes: { style: ""text-align:right;"", ""class"": ""customClass"" },
                            editor: function (container, options) {
                                item_rate(container, options.field, '9', '2');
                            },
                        },
                        {
                            field: ""In_tax"",
                            title: ""Batched Quantity"",
                            width: 80,
                            attributes: { style: ""text-align:right;"", ""class"": ""customClass"" },
                 ");
            WriteLiteral(@"           editor: function (container, options) {
                                item_rate(container, options.field, '9', '2');
                            },
                        },
                        {
                            field: ""In_rate"",
                            title: ""Rate"",
                            width: 100,
                            attributes: { style: ""text-align:right;"" },
                            editor: function (container, options) {
                                numeric_editor_dot(container, options.field, '9', '3');
                            },
                        },

                        {
                            field: ""In_product_amount"",
                            title: ""Amount"",
                            width: 100,
                            attributes: { style: ""text-align:right;"" },
                            editor: function (container, options) {
                                item_rate(container, options.field,");
            WriteLiteral(@" '9', '2');
                            },
                        },
                        {
                            field: ""In_discount"",
                            title: ""Discount"",
                            width: 100,
                            attributes: { style: ""text-align:right;"" },
                            editor: function (container, options) {
                                item_rate(container, options.field, '9', '2');
                            },
                        },
                        {
                            field: ""In_tax_rate"",
                            title: ""Tax Amount"",
                            width: 100,
                            attributes: { style: ""text-align:right;"" },
                            footerTemplate: ""Total"",
                            editor: function (container, options) {
                                item_rate(container, options.field, '9', '2');
                            },
                        }");
            WriteLiteral(@",
                        {
                            title: 'Gross Amount',
                            field: 'In_gross_amount',
                            width: 100,
                            format: ""{0:0.##}"",
                            footerTemplate: ""<div style='text-align:right'>#= kendo.toString(sum, '0.00') # </div>"",
                            attributes: { style: ""text-align:right;"" },
                            editor: function (container, options) {
                                item_rate(container, options.field, '9', '2');
                            },
                        },

                        {
                            field: ""In_status_code"",
                            title: ""status_code"",
                            width: 1,
                            hidden: true,
                        },

                        {
                            field: ""tax_rate"",
                            title: ""tax_rate"",
                            ");
            WriteLiteral(@"width: 1,
                            hidden: true,
                        },

                        {
                            field: ""In_mode_flag"",
                            title: ""Mode"",
                            hidden: true
                        }],
                    editable: true
                });
        }
        catch (err) {
            alert(err);
        }
    }
    function OnEdit(e) {
        setDefaultValues(e);
        e.container.find(""input[name='In_product_amount']"").prop('readonly', true);
        e.container.find(""input[name='In_tax']"").prop('readonly', true);
        e.container.find(""input[name='In_gross_amount']"").prop('readonly', true);
        e.container.find(""input[name='In_product_code']"").prop('readonly', true);
        e.container.find(""input[name='In_uomtype_desc']"").prop('readonly', true);
    }
    function gridtax(data) {
        try {
            $(""#grid_tax"").kendoGrid({
                dataSource: {
                    data:");
            WriteLiteral(@" data,
                    schema: {
                        model: {
                            fields: {
                                In_product_code: { type: ""string"", editable: false },
                                In_product_name: { type: ""string"", editable: false},
                                In_hsn_code: { type: ""string"", editable: false},
                                In_hsn_code_desc: { type: ""string"", editable: false },
                                In_hsn_desc: { type: ""string"", editable: false },
                                In_cgst_rate: { type: ""string"", editable: false},
                                In_sgst_rate: { type: ""string"", editable: false},
                                In_sugst_rate: { type: ""string"", editable: false},
                                In_igst_rate: { type: ""string"", editable: false},
                                In_tax_amount: { type: ""string"", editable: false},
                                In_taxable_amount: { type: ""string"", ");
            WriteLiteral(@"editable: false},
                                //In_tax_amount: { type: ""string"" },
                                In_mode_flag: { type: ""string"", defaultValue: ""I"", editable: false }
                            }
                        },
                        parse: function (data) {
                            return $.map(data, function (item) {
                                item.In_cgst_rate = parseFloat(item.In_cgst_rate).toFixed(2);
                                item.In_sgst_rate = parseFloat(item.In_sgst_rate).toFixed(2);
                                item.In_ugst_rate = parseFloat(item.In_ugst_rate).toFixed(2);
                                item.In_tax_amount = parseFloat(item.In_tax_amount).toFixed(2);
                                item.In_taxable_amount = parseFloat(item.In_taxable_amount).toFixed(2);
                                item.In_sugst_rate = parseFloat(item.In_sgst_rate).toFixed(2) + parseFloat(item.In_ugst_rate).toFixed(2);
                                ");
            WriteLiteral(@"return item;
                            });
                        }
                    }
                },
                height: 240,
                groupable: false,
                dataBinding: setDefaultValues,
                //dataBound: function (e) {
                //    resultData = e.sender._data;
                //    var rows = $('#grid_tax').data('kendoGrid').tbody.children();
                //    setColor(rows, resultData);
                //},
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [

                    {
                        field: ""In_invoicedtl_rowid"",
                        title: ""invoicedtl_rowid"",
                        hidden: true
                    },
                    {
                        field: ""In_invoice_no"",
                        title: ""invoice_no"",
                        width: 1,
                        hidden: true,
                    }");
            WriteLiteral(@",

                    {
                        field: ""In_product_code"",
                        title: ""Product Code"",
                        width: 100,

                    },
                    {
                        field: ""In_product_name"",
                        title: ""Product Name"",
                        width: 100,
                    },
                    {
                        field: ""In_hsn_desc"",
                        title: ""HSN Code"",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: ""In_hsn_code"",
                        title: ""HSN"",
                        width: 100,
                        hidden: true

                    },

                    {
                        field: ""In_cgst_rate"",
                        title: ""CGST %"",
                        width: 100,
                        attributes: { style: ""text-align:right;"" },
       ");
            WriteLiteral(@"                 editor: function (container, options) {
                            item_rate(container, options.field, '4', '2');
                        },
                    },

                    {
                        field: ""In_sgst_rate"",
                        title: ""SGST % / UGST %"",
                        width: 100,
                        attributes: { style: ""text-align:right;"" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '4', '2');
                        },
                    },
                    {
                        field: ""In_igst_rate"",
                        title: ""IGST %"",
                        width: 100,
                        attributes: { style: ""text-align:right;"" },
                        editor: function (container, options) {
                            item_rate(container, options.field, '4', '2');
                        },
                    },
   ");
            WriteLiteral(@"                 {
                        field: ""In_tax_rate"",
                        title: ""Tax Rate"",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: ""In_taxable_amount"",
                        title: ""Taxable Amount"",
                        attributes: { style: ""text-align:right;"" },
                        width: 100,
                    },

                    {
                        field: ""In_tax"",
                        title: ""Tax Amount"",
                        attributes: { style: ""text-align:right;"" },
                        width: 100,
                    },
                    {
                        field: ""In_mode_flag"",
                        title: ""Mode"",
                        hidden: true
                    }],
                editable: false
            });
        }
        catch (err) {
            alert(err);
        }
    }
    function g");
            WriteLiteral(@"ridattachment(data) {
        try {
            $(""#grid_attachment"").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {
                                In_attch_rowid: { type: ""number"", defaultValue: 0},
                                In_filename: { type: ""string"" },
                                In_document: { type: ""string""},
                                In_description: { type: ""string""},
                                In_attch_date: { type: ""date""},
                                In_attch_upload: { type: ""string"" },
                                In_attch_unique_id: { type: ""string""},
                                In_mode_flag: { type: ""string"", defaultValue: ""I""}
                            }
                        }
                    },

                },
                toolbar: ""<a class='k-grid-add' id='btnSave' href=''><span class='fa fa-plus");
            WriteLiteral(@"' style='color:Black'></span></a>"",
                //edit: OnEditattachment,
                //dataBinding: setDefaultValues,
                dataBound: function (e) {

                    resultData = e.sender._data;
                    var rows = $('#grid_attachment').data('kendoGrid').tbody.children();
                    setColor(rows, resultData);
                },

                height: 240,
                sortable: true,
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: ""In_attch_rowid"",
                        title: ""invoicedtl_rowid"",
                        hidden: true
                    },
                    {
                        field: ""In_po_no"",
                        title: ""invoice_no"",
                        width: 1,
                        hidden: true,
                    },
                    {
                        field: ""In_filename"",
        ");
            WriteLiteral(@"                title: ""File Name"",
                        width: 100
                    },
                    {
                        field: ""In_document"",
                        title: ""Document"",
                        width: 120,
                    },
                    {
                        field: ""In_description"",
                        title: ""Description"",
                        width: 100,

                    },
                    {
                        field: ""In_attch_date"",
                        title: ""Date"",
                        width: 100,
                        format: ""{0:dd/MM/yyyy}""
                    },
                    {
                        field: ""In_attch_upload"",
                        title: ""File Upload"",
                        width: 100,
                        hidden: true
                    },
                    {
                        field: ""In_attch_unique_id"",
                        title: ""Unique Id"",
    ");
            WriteLiteral(@"                    width: 100,
                        hidden: true
                    },
                    {
                        command: [
                            {
                                name: ""Upload"",
                                id: ""Upload"",
                                text: ""Upload"",
                                click: function (e) {
                                    var grid = $(""#grid_attachment"").data(""kendoGrid"");
                                    var dataItem = $(""#grid_attachment"").data(""kendoGrid"").dataItem($(e.target).closest(""tr""));
                                    Upload(e, dataItem, grid);
                                },
                            },
                            {
                                name: ""View"",
                                id: ""View"",
                                text: ""View"",
                                click: function (e) {
                                    var grid = $(""#grid_attachme");
            WriteLiteral(@"nt"").data(""kendoGrid"");
                                    var dataItem = $(""#grid_attachment"").data(""kendoGrid"").dataItem($(e.target).closest(""tr""));
                                    Uploadview(e, dataItem, grid);
                                }

                            },


                        ], title: ""Image Upload"", width: ""100px"",
                    },
                    {
                        field: ""In_mode_flag"",
                        title: ""Mode"",
                        hidden: true
                    }],
                editable: true
            });
        }
        catch (err) {
            alert(err);
        }
    }
    function Upload(e, dataItem, grid) {
        debugger;
        $(""#dialogFileupload"").kendoWindow();
        var dialog = $(""#dialogFileupload"").data(""kendoWindow"");
        dialog.open().element.closest("".k-window"").css({
            top: 121,
            left: 300, height: 400, width: 900
        });
        dialog.title(""");
            WriteLiteral(@"File Upload"");
        dialog.bind(""open"", Upload);
        $(""#In_attch_file"").val(dataItem.Fileupload);
        console.log(dataItem.Fileupload);
        $(""#txtImageunique"").val(dataItem.uid);
    }
    function Uploadview(e, dataItem, grid) {
        debugger
        $(""#dialogFileuploadView"").kendoWindow();
        var dialog = $(""#dialogFileuploadView"").data(""kendoWindow"");
        dialog.open().element.closest("".k-window"").css({
            top: 121,
            left: 300, height: 400, width: 900
        });
        dialog.title(""File Upload"");
        //dialog.bind(""open"", serialnoview);
        var imagedata = dataItem.In_attch_upload
        if (imagedata != """")
            document.getElementById(""farmer_img"").src = ""data:image/png;base64,"" + imagedata;
        else
            document.getElementById(""farmer_img"").src = ""/images/noimage.png"";
        //$(""#In_attch_file"").val(dataItem.Fileupload);
        //$(""#In_attch_unique_id"").val(dataItem.uid);
    }
    function file");
            WriteLiteral(@"Upload(e) {
        debugger;
        $(""#dialogFileupload"").kendoWindow();
        var dialog = $(""#dialogFileupload"").data(""kendoWindow"");
        dialog.open().element.closest("".k-window"").css({
            top: 121,
            left: 300, height: 400, width: 900
        });
        dialog.title(""File Upload"");
        //dialog.bind(""open"", shipment);
        //grid_shipment([]);
    }
    function refreshbatchdetails() {
        //var polist = """";
        //$(""#cmb_po_no"").empty();
        //polist = grid_comboScreen_mastercodes(""POLIST"");
        //filter_combobox(""cmb_po_no"", polist);

        var item_name;
        var grid_valinv = JSON.stringify($(""#grid_invoice"").data().kendoGrid._data);
        var Bindinv = {};
        Bindinv = grid_valinv;
        var resultinv = JSON.parse(Bindinv);
        for (var i = 0; i < resultinv.length; i++) {
            if (i == 0) {
                item_name = resultinv[i].In_item_code
            } else {
                item_name = item_n");
            WriteLiteral(@"ame + "","" + resultinv[i].In_item_code;
            }
        }
        var buyer_code = $(""#buyer_code"").val();
        var vehicle_no = $(""#truck_num"").val();
        var data = {};
        data.context = WebAPIProxy.getContext();
        var Context = data.context;
        var data = { org: Context.orgnId, locn: Context.locnId, user: Context.userId, lang: vehicle_no, destination: buyer_code, item_name: item_name };
        $.ajax({
         url: '");
#nullable restore
#line 1292 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\PAWHSNewBatchCreation\BatchCreationNewV3.cshtml"
          Write(Url.Action("BatchDetailsBasedOnDest", "PAWHSNewBatchCreation"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
         type: ""post"",
         contentType: 'application/x-www-form-urlencoded',
         data: data,
         success: function (response1) {
                debugger;
             if (response1 != null) {
                 if (response1.BatchDetails.length > 0) {
                     console.log(response1.BatchDetails);
                     New_grid_Batch_details(response1.BatchDetails);
                 }
                 else {
                     New_grid_Batch_details([]);
                     kendoAlert(""No Sale Entry Available For this Purchase Order.PO Item is not matched with Sale Entry Item"");
                 }
                }
            },
            error: function (er) {
                alert(er)
                console.log(er)
            }
        });
    }
    function grid_control() {
        debugger;
        try {
            var control_Name = [
                { ""dataCol"": ""productcategory"", ""grid_row_col"": ""productcategory"" },
                { ""data");
            WriteLiteral(@"Col"": ""productsubcategory"", ""grid_row_col"": ""In_product_type"" },
                { ""dataCol"": ""vehicle_no"", ""grid_row_col"": ""In_vehicle_no"" },
                { ""dataCol"": ""Total_No_of_lots"", ""grid_row_col"": ""In_Total_No_of_lots"" },
                { ""dataCol"": ""No_of_batch_creation"", ""grid_row_col"": ""In_No_of_batch_creation"" },
                { ""dataCol"": ""No_of_Pending"", ""grid_row_col"": ""In_No_of_Pending"" },
                { ""dataCol"": """", ""grid_row_col"": ""in_cost_type"" },
                { ""dataCol"": """", ""grid_row_col"": ""In_cost_name"" },
                { ""dataCol"": """", ""grid_row_col"": ""In_cost_value"" },
                { ""dataCol"": """", ""grid_row_col"": ""uid"" }

            ];
            return control_Name
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function save_Image() {
        try {

            var xhr = new XMLHttpRequest();
            var fd = new FormData();
            xhr.onreadystatechange = function");
            WriteLiteral(@" () {
                if (xhr.readyState == 4 && xhr.status == 200) {
                    var value = JSON.parse(xhr.responseText);
                    if (value.result != undefined) {
                        $(""#txtImageHidden"").val(value.result);
                        $('#dialogFileupload').data(""kendoWindow"").close();
                        kendoAlert(""Upload Successfully"");
                        fetchattach_grid();
                    }
                }
            };
            fd.append(""file"", document.getElementById('farmerfile').files[0]);
            fd.append(""userID"", $('#txtUserId').val());
            xhr.open(""POST"", ""/UserDefinition/User/"", true);
            xhr.send(fd);
            xhr.addEventListener(""load"", function (event) {
            }, false);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function fetchattach_grid() {

        var grid = $(""#grid_attachment"").data(""kendoGrid"");
     ");
            WriteLiteral(@"   var models = grid.dataSource.data();
        for (var i = 0; i < models.length; i++) {
            if (models[i].uid == $(""#txtImageunique"").val()) {
                var dataItem = $(""#grid_attachment"").data(""kendoGrid"").dataSource.data()[i];
                dataItem.set(""In_attch_unique_id"", $(""#txtImageunique"").val());
                dataItem.set(""In_attch_upload"", $(""#txtImageHidden"").val());
            }
        }

    }
    function form_control() {
        var control_Name = [
            { ""dataCol"": ""orgn_code"", ""controlId"": ""txtorgn_code"", ""type"": ""Text"" },
            { ""dataCol"": ""buyer_code"", ""controlId"": ""buyer_code"", ""type"": ""Text"" },
            { ""dataCol"": ""buyer_name"", ""controlId"": ""txtfarcusname"", ""type"": ""Text"" },
            { ""dataCol"": ""buyer_state"", ""controlId"": ""cmb_rec_Loca"", ""type"": ""Text"" },
            { ""dataCol"": ""buyer_state_code"", ""controlId"": ""buyer_state_code"", ""type"": ""Text"" },
            { ""dataCol"": ""vehicle_no"", ""controlId"": ""truck_num"", ""type"": ""T");
            WriteLiteral(@"ext"" },
            { ""dataCol"": ""po_no"", ""controlId"": ""cmb_po_no"", ""type"": ""Text"" }
        ];
        return control_Name;
    }

    function trans_input_data() {
        var trans_coll = [
            { ""trasfer"": ""NO"", ""dataCol"": """", ""controlId"": """", ""grid_id"": """", ""grid_row_col"": """" },
            { ""trasfer"": ""Yes"", ""dataCol"": ""in_bank_code"", ""controlId"": """", ""grid_id"": ""grid_Bank"", ""grid_row_col"": """" },
            { ""trasfer"": ""Yes"", ""dataCol"": ""orgn_state_desc"", ""controlId"": """", ""grid_id"": ""grid_Address"", ""grid_row_col"": """" },
            { ""trasfer"": ""Yes"", ""dataCol"": ""buyer_name"", ""controlId"": ""txtfarcusname"", ""grid_id"": """", ""grid_row_col"": """" },
            { ""trasfer"": ""Yes"", ""dataCol"": ""orgn_code"", ""controlId"": ""txtagg_code"", ""grid_id"": """", ""grid_row_col"": """" }

        ];
        return trans_coll;
    }

    function ponumchanged() {
        var formval = form_Serialize(""NewBatchCreation_form"");
        var obj_val = JSON.parse(formval);
        obj_val.FilterBy_Option = ");
            WriteLiteral(@"""pawhs_NEWBatch"";
        obj_val.FilterBy_Code = obj_val.In_po_no;
        var state = $(""#buyer_state_code"").val();
        obj_val.FilterBy_FromValue = state;
        obj_val.FilterBy_ToValue = ""."";
        var data = {};
        data.context = getContext();
        data.context.Header = obj_val;
        var Context = data.context;
        var data = {org: Context.orgnId, locn: Context.locnId, user: Context.userId, lang: Context.localeId, po_no: obj_val.In_po_no    };
          $.ajax({
         url: '");
#nullable restore
#line 1416 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\PAWHSNewBatchCreation\BatchCreationNewV3.cshtml"
          Write(Url.Action("FetchPurchaseOrderDetails", "PAWHSNewBatchCreation"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
         type: ""post"",
         contentType: 'application/x-www-form-urlencoded',
         data: data,
              success: function (response1) {
                  if (response1 != null) {
                     gridinvoice(response1.PODetails);
                   }
              },
            error: function (er) {
                alert(er)
                console.log(er)
            }
        });
    }

    function save() {
        try {
            debugger;
            if ($(""#txtMode"").val() == """") {
                $(""#txtMode"").val('I');
            }
            var formval = form_Serialize(""NewBatchCreation_form"");
            var obj_val = JSON.parse(formval);
            obj_val.in_mode_flag = ""I"";
            obj_val.In_batch_rowid = parseInt(obj_val.In_batch_rowid);

            var grid = $(""#grid_Batch"").data(""kendoGrid"");
            var selected = [];
            grid.tbody.find(""input:checked"").closest(""tr"").each(function (index) {
                selected");
            WriteLiteral(@".push(grid.dataItem(this));
            });
            var result_batch = selected;
            if (result_batch.length == 0) {
                kendoAlert(""Atleast one record need to be selected."");
                return false;
            }
            var total_batchqty = 0.00;
            var total_poqty = 0.00;

            for (var i = 0; i < result_batch.length; i++) {
                if (result_batch[i].In_mode_flag == null || result_batch[i].In_mode_flag == undefined) {
                    result_batch[i].In_mode_flag = ""I"";
                }
                var actual_value = parseFloat(result_batch[i].In_actual_qty).toFixed(2);
                total_batchqty = (parseFloat(total_batchqty) + parseFloat(actual_value));
            }
            var in_selected_lot_id = """";
            var grid_val = JSON.stringify($(""#grid_Other"").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            var obj_grid_v");
            WriteLiteral(@"al = result;
            if (obj_grid_val.length > 0) {
                for (i = 0; i < obj_grid_val.length; i++) {
                    if (obj_grid_val[i].In_cost_name == """") {
                        kendoAlert(""Kindly fill the Cost Type field.!!"");
                        return false;
                    }
                }
            }
            for (var i = 0; i < obj_grid_val.length; i++) {
                var currentDataItem = obj_grid_val[i];
                var qty1 = currentDataItem.In_cost_name.trim().toUpperCase();

                for (var j = i + 1; j < obj_grid_val.length; j++) {
                    var nextDataItem = obj_grid_val[j];
                    var qty2 = nextDataItem.In_cost_name.trim().toUpperCase();

                    if (qty1 == qty2) {
                        kendoAlert(""This "" + qty1 + ""Cost type is already exists."");
                        return false;

                    }
                }
            }
            var result = JSON.parse(Bind");
            WriteLiteral(@");

            var loctran_cost = 0.00;
            var locpack_cost = 0.00;
            var Unpack_cost = 0.00;
            var tran_cost = 0.00;
            var packing_cost = 0.00;

            for (var i = 0; i < result.length; i++) {
                var itemcompare = result[i];
                var CostType = itemcompare.in_cost_type;
                if (CostType == ""QCD_LOCALTRANSPORTCOST"") {

                    loctran_cost = parseFloat(itemcompare.In_cost_value).toFixed(2);
                }
                else if (CostType == ""QCD_LOCALPACKINGCOST"") {
                    locpack_cost = parseFloat(itemcompare.In_cost_value).toFixed(2);
                }
                else if (CostType == ""QCD_UNPACKINGCOST"") {
                    Unpack_cost = parseFloat(itemcompare.In_cost_value).toFixed(2);
                }
                else if (CostType == ""QCD_TRANSPORTCOST"") {
                    tran_cost = parseFloat(itemcompare.In_cost_value).toFixed(2);
                }
      ");
            WriteLiteral(@"          else if (CostType == ""QCD_PACKINGCOST"") {
                    packing_cost = parseFloat(itemcompare.In_cost_value).toFixed(2);
                }
            }
           
            obj_val.in_selected_lot_id = in_selected_lot_id;

            var grid_valinv = JSON.stringify($(""#grid_invoice"").data().kendoGrid._data);
            var Bindinv = {};
            Bindinv = grid_valinv;
            var resultinv = JSON.parse(Bindinv);
            for (var i = 0; i < resultinv.length; i++) {
                total_poqty = (parseFloat(total_poqty) + parseFloat(resultinv[i].In_qty));
                resultinv[i].In_podtl_rowid = parseInt(resultinv[i].In_podtl_rowid);
                resultinv[i].In_sln_no = parseFloat(resultinv[i].In_sln_no);
                resultinv[i].In_gross_amount = parseFloat(resultinv[i].In_gross_amount);
                if (resultinv[i].In_mode_flag == null || resultinv[i].In_mode_flag == undefined) {
                    resultinv[i].In_mode_flag = ""I"";
         ");
            WriteLiteral(@"       }
                if (resultinv[i].In_podtl_rowid == null || resultinv[i].In_podtl_rowid == undefined || resultinv[i].In_podtl_rowid < 0) {
                    resultinv[i].In_podtl_rowid = 0;
                }
                if (resultinv[i].In_sln_no == null || resultinv[i].In_sln_no == undefined || resultinv[i].In_sln_no < 0) {
                    resultinv[i].In_sln_no = 0;
                }
                if (resultinv[i].In_othercharges == null || resultinv[i].In_othercharges == undefined || resultinv[i].In_othercharges =="""") {
                    resultinv[i].In_othercharges = 0;
                }
                if (resultinv[i].In_discount == null || resultinv[i].In_discount == undefined || resultinv[i].In_discount == """") {
                    resultinv[i].In_discount = 0;
                }
            
            }
            
            var grid_valattach = JSON.stringify($(""#grid_attachment"").data().kendoGrid._data);
            var Bindattach = {};
            Bindat");
            WriteLiteral(@"tach = grid_valattach;
            var resultattach = JSON.parse(Bindattach);
            for (var i = 0; i < resultattach.length; i++) {
                resultattach[i].In_attch_rowid = parseInt(resultattach[i].In_attch_rowid);
            }
            console.log(total_batchqty);
            console.log(total_poqty);

            if (total_batchqty <= total_poqty) {
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                data.context.Batch = result_batch;
                data.context.OtherDtl = obj_grid_val;
                data.context.Invoice = resultinv;
                //data.context.Tax = resulttax;
                data.context.Attachment = resultattach;
                var context = data.context;
                $.ajax({
                    type: ""POST"",
                    data: JSON.stringify({
                        userId: context.userId, orgnId: context.orgnId, locnId: context.loc");
            WriteLiteral(@"nId, localeId: context.localeId, Header: context.Header, Batch: context.Batch, OtherDtl: context.OtherDtl, Invoice: context.Invoice, Attachment: context.Attachment
                    }),
                    url: ""/PAWHSNewBatchCreation/SaveBatch"",
                    dataType: ""json"",
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        if (response != null) {
                            var mode = $(""#txtMode"").val();
                            if (mode == ""I"") {
                                $(""#txt_BatchNo"").val(response.Header.In_batch_no);
                                kendoAlert(""Batch Creation Save Successfully"");
                                $('#divCreate #btnSave').prop('disabled', true);
                                var Context = WebAPIProxy.getContext();
                                var data = { org: Context.orgnId, locn: Context.locnId, user: Context.userId, lang: Context.localeId,");
            WriteLiteral(" batch_rowid: response.Header.In_batch_rowid, batch_no: response.Header.In_batch_no };\r\n                                $.ajax({\r\n                                    url: \'");
#nullable restore
#line 1588 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\PAWHSNewBatchCreation\BatchCreationNewV3.cshtml"
                                     Write(Url.Action("FectNewPAWHSBatchCreation", "PAWHSNewBatchCreation"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                                    type: ""post"",
                                    contentType: 'application/x-www-form-urlencoded',
                                    data: data,
                                    success: function (response) {
                                        if (response != null) {
                                            generate_batchcreation_header(response.Header);
                                            generate_BatchCreation_BatchList(response.Batch);
                                            generate_batchcreation_OtherList(response.OtherDtl);
                                            generate_batchcreation_POList(response.Invoice);
                                            generate_batchcreation_POTaxList(response.Tax);
                                            generate_batchcreation_POAttachmentList(response.Attachment);
                                        }
                                    },
                                    e");
            WriteLiteral(@"rror: function (er) {
                                        alert(er)
                                        console.log(er)
                                    }
                                });
                            }
                            else if (mode == ""D"") {
                                kendoAlert(""Batch Creation inactivate successfully"");
                            }
                            else {
                                kendoAlert(""Batch Creation Updated successfully"");
                            }
                        }
                        //var Res = response;
                        //if (Res.ApplicationException.errorDescription != null || Res.ApplicationException.errorDescription != '') {

                        //}
                        //else {
                        //    kendoAlert(Res.ApplicationException.errorDescription);
                        //}
                    },
                    error: function (er) {
       ");
            WriteLiteral(@"                 //alert(er)
                        console.log(er)
                    }

                });
            }
            else {
                kendoAlert(""Sum of Batch Quantity Should be Less than or Equal to Purchase Order Quantity"");
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function get_batch_details(res) {
        debugger;
        try {
            $(""#bottom_menus"").hide();
            $(""#hide_div"").hide();
            $(""#btnSave"").hide();
            var formval = form_Serialize(""NewBatchCreation_form"");
            var obj_val = JSON.parse(formval);
            obj_val.In_batch_no = res.Out_batch_no;

            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.header = obj_val;
            var Context = data.context;
            $.ajax({
                type: ""POST"",
                data: JSON.stringify({ userId: Context.");
            WriteLiteral(@"userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, In_batch_no: Context.header.In_batch_no }),
                url: ""/PAWHSNewBatchCreation/BatchCreationfetch"",
                dataType: ""json"",
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    debugger;
                    if (response.context != null) {
                        generate_batchcreation_header(response.context);
                        generate_batchcreation_Transport(response.context.Header);
                        generate_BatchCreation_BatchList(response.context.BatchList);
                        generate_batchcreation_OtherList(response.context.OtherList);
                        Transporttab();
                    }
                    else {
                        console.log(""Issue where Dropped"");
                    }
                },
                error: function (er) {
                    console.");
            WriteLiteral(@"log(er);
                }

            });
            $(""#txtMode"").val(""U"");
            viewdisable();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_batchcreation_header(res) {
        debugger;
        try {
            if (res != null) {
                $(""#txtMode"").val(""U"");
                $(""#DocStat"").val(""Active"");
                $(""#txt_BatchNo"").val(res.In_batch_no);
                $(""#txtfarcusname"").val(res.In_buyer_name);
                $(""#truck_num"").val(res.In_Vehicle_no);
                $(""#cmb_po_no"").val(res.In_po_no);
                //$('#cmb_po_no').data(""kendoComboBox"").value(res.In_po_no);
                $(""#cmb_cus_type"").val(res.In_remarks);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function viewdisable() {
        $(""#txt_BatchNo"").attr(""disabled"", true);
        $(""#txt_P");
            WriteLiteral(@"acking_cost"").attr(""disabled"", true);
        $(""#txt_Tran_cost"").attr(""disabled"", true);
        $(""#txt_UnPack_cost"").attr(""disabled"", true);
        $(""#txt_Locpac_cost"").attr(""disabled"", true);
        $(""#txt_Loctran_cost"").attr(""disabled"", true);
        $(""#txtMode"").attr(""disabled"", true);
        $(""#rd_PO"").prop(""disabled"", true);
        $(""#rd_NONPO"").prop(""disabled"", true);
        $(""#txtfarcusname"").attr(""disabled"", true); 
        $(""#truck_num"").attr(""disabled"", true);
        $(""#pay_help1"").hide();
        $(""#cmb_cus_type"").attr(""disabled"", true);
        $(""#btnrefresh"").attr(""disabled"", true);
    }
    function generate_BatchCreation_BatchList(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                New_grid_Batch_details(data);
            }
            else {

                New_grid_Batch_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.na");
            WriteLiteral(@"me, err);
        }
    }
    function generate_batchcreation_OtherList(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                New_grid_Other_details(data);
            }
            else {
                New_grid_Other_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_batchcreation_POList(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                gridinvoice(data);
            }
            else {
                gridinvoice([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_batchcreation_POTaxList(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                gridtax(data);
            }
       ");
            WriteLiteral(@"     else {
                gridtax([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function generate_batchcreation_POAttachmentList(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                gridattachment(data);
            }
            else {
                gridattachment([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    //function save_ImageAttach() {
    //    var val = document.getElementById('farmer_img').getAttribute('src');
    //    console.log(val);
    //    alert(""ImageAttached"");
    //}
</script>


");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
