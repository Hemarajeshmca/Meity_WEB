#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FLDisbursement\FLDisbursementList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f5883999fc83c4041b90211615e5c11ff81fc99a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FLDisbursement_FLDisbursementList), @"mvc.1.0.view", @"/Views/FLDisbursement/FLDisbursementList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f5883999fc83c4041b90211615e5c11ff81fc99a", @"/Views/FLDisbursement/FLDisbursementList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_FLDisbursement_FLDisbursementList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_FLDisbursementList"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Loan_Disbursement_retrieveFLDisbursementList_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Loan_Disbursement_retrieveFLDisbursement_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Loan_Disbursement_saveFLDisbursement_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveFLDisbursement_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveFLDisbursementList_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/saveFLDisbursement_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/FLDisbursement.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FLDisbursement\FLDisbursementList.cshtml"
  
    ViewBag.List = "Farmer Loan Disbursement";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";
    //Layout = "~/Views/Shared/FormViewLayout1.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f5883999fc83c4041b90211615e5c11ff81fc99a8599", async() => {
                WriteLiteral("\r\n    <div id=\"Disbursement\" class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n            <div id=\"gd_Disbursement\">\r\n                <div id=\"FLDisbursementList_grid\"></div>\r\n            </div>\r\n    </div>\r\n        </div>\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f5883999fc83c4041b90211615e5c11ff81fc99a10414", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f5883999fc83c4041b90211615e5c11ff81fc99a11454", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f5883999fc83c4041b90211615e5c11ff81fc99a12494", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f5883999fc83c4041b90211615e5c11ff81fc99a13534", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f5883999fc83c4041b90211615e5c11ff81fc99a14574", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f5883999fc83c4041b90211615e5c11ff81fc99a15614", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f5883999fc83c4041b90211615e5c11ff81fc99a16654", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f5883999fc83c4041b90211615e5c11ff81fc99a17695", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

 <script>
   click_act_name = ""frm_FLDisbursementList"";
   click_ctrl_name = ""FLDisbursement"";
   form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
  </script>

   
<script>
    $(document).ready(function () {
       
        $("".adv_filter"").attr(""hdrtitle"", ""Farmer Loan Disbursement List Record"");
        $("".adv_filter"").attr(""fltid"", ""FLDisbursementList"");
        $("".Export"").attr(""hdrtitle"", ""Farmer Loan Disbursement List"");
        $("".Export"").attr(""SubTreeId"", ""FLDISB"");
        
        Screen_Id = ""FLDISB"";
        permission = sec_Permission(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage(""ls_pageList"", """");

    });
</script>
<script>
    function listpageloadfetch() {
        var formval = form_Serialize(""frm_FLDisbursementList"");
        var obj_val = JSON.parse(formval);      
         obj_val.FilterBy_Option = ""ALL"";
        obj_val.FilterBy_Code = ""."";
        if (getlocalStorage('flt_condition') != undefined &&");
            WriteLiteral(@" getlocalStorage('flt_condition') != """") {
            obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
        }
        else {
            obj_val.FilterBy_Fromvalue = ""."";
        }
        obj_val.FilterBy_Tovalue = ""."";
        var data = {};
        data.context = WebAPIProxy.getContext();;
        data.context.Filter = obj_val;
        retrieve_FLDisbursement_List(data);
        
    }
</script>

    <script> 
    
       var status_Priority = [];

       function FLDisbursementGrid(data) {

           $.each(data, function (index, value) {
               var flag = false;
               $.each(status_Priority, function (sindex, svalue) {
                   if (svalue == value.status_desc) {
                       flag = true;
                   }
               });
               if (flag == false) {
                   status_Priority.push(value.status_desc);
               }
           });

           $(""#FLDisbursementList_grid"").kendoGrid(
           ");
            WriteLiteral(@"        {
                       dataSource: {
                           data: data,
                           pageSize: 20,
                           change: function (e) {
                               setTimeout(function () {
                                   var gd = $(""#FLDisbursementList_grid"").data(""kendoGrid"");
                                   filter_row(gd);
                                   $('.k-i-close').css('display', 'none');
                                   $('button.k-button-icon').css('display', 'none');
                                   $('#FLDisbursementList_grid .k-input').prop('disabled', false);
                                   $('#FLDisbursementList_grid .k-input').prop('readonly', true);
                               }, 1);
                           },
                       },
                       toolbar: ""<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nb");
            WriteLiteral(@"sp Export To Excel</span></button>"",
                       excelExport: function (e) {
                           var gd = $(""#FLDisbursementList_grid"").data(""kendoGrid"");
                           var len = gd.dataSource._data.length;
                           var chkall = $('#chkall').is(':checked');
                           var chkfilter = $('#chkfilter').is(':checked');
                           var chktemp = $('#chktemp').is(':checked');
                           var twokendobox = true;
                           gd.dataSource.pageSize(len);
                           if (e.sender.dataSource._data.length == len) {
                               twokendobox = false;
                               exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                           }
                           else {
                               exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                           }
                           gd.dataSource");
            WriteLiteral(@".pageSize('10');
                           return false;
                       },
                       filterable: {
                           enabled: true,
                           delay: 1500,
                           mode: ""menu, row"",
                           height: 200,
                           click: function (e) {
                               var gd = $(""#FLDisbursementList_grid"").data(""kendoGrid"");
                               filter_row(gd);
                           }
                       },
                       filterMenuInit: function (e) {
                           var gd = $(""#FLDisbursementList_grid"").data(""kendoGrid"");
                           filter_row(gd);
                       },
                       change: selectRow,
                       height: 450,
                       sortable: true,
                       selectable: true,
                       selectable: ""singl"",   //  Grid Row Selection
                       pageable: {
  ");
            WriteLiteral(@"                         refresh: false,
                           pageSizes: true,
                           buttonCount: 5
                       },
                       navigatable: true,
                       groupable: false,
                       columns: [
                             

                             {
                                 field: ""loanapp_rowid"",
                                 title: ""Loanapp Rowid"",
                                 width: 200,
                                 hidden: true ,
                             },

                              {
                                  field: ""fpoorgn_code"",
                                  title: ""Fpoorgn Code"",
                                  width: 200,
                                  hidden: true,
                              },

                               {
                                   field: ""loanapp_no"",
                                   title: ""ARN"",
              ");
            WriteLiteral(@"                     width: 200,
                                   filterable: {
                                   cell: {
                                          operator: ""contains"",
                                          inputWidth: 1500
                                         }
                                       }
                               },


                              {
                                  field: ""fpomember_code"",
                                  title: ""Member ID"",
                                  width: 200,
                                  filterable: {
                                      cell: {
                                          operator: ""contains"",
                                          inputWidth: 1500
                                            }
                                          }
                            },

                         {
                           field: ""member_name"",
                          ");
            WriteLiteral(@" title: ""Member Name "",
                           width: 200,
                           hidden: true,
                         },

                         {
                              field: ""farmer_code"",
                              title: ""Farmer ID"",
                              width: 200,
                              filterable: {
                                  cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
                                        }
                                   }
                          },


                          {
                              field: ""farmer_name"",
                              title: ""Farmer Name"",
                              width: 200,
                              filterable: {
                                  cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
        ");
            WriteLiteral(@"                               }
                                  }
                          },

                          {
                              field: ""sur_name"",
                              title: ""Farmer SurName"",
                              width: 200,
                              filterable: {
                                  cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
                                      }
                                     }
                          },

                          {
                              field: ""app_date"",
                              title: ""Application Date"",
                              width: 200,
                              format: ""{0:dd/MM/yyyy}"",
                              filterable: {
                                  cell: {
                                      operator: ""contains"",
                                      i");
            WriteLiteral(@"nputWidth: 1500
                                        }
                                    }

                          },

                          {
                              field: ""loanscheme_code"",
                              title: ""Loanscheme Code"",
                              width: 200,
                              hidden: true,
                               
                          },

                         {
                             field: ""loanscheme_desc"",
                             title: ""FL Scheme"",
                             width: 200,
                             filterable: {
                                 cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
                                      }
                                    }
                          },

                          
                          {
                              field: ""loan_amou");
            WriteLiteral(@"nt"",
                              title: ""Loan Amount"",
                              width: 200,
                              hidden: true,
                          },
                           {
                               field: ""loan_no"",
                               title: ""Loan No"",
                               width: 200,
                               hidden: true,
                           },
                           {
                               field: ""sanctioned_date"",
                               title: ""Sanctioned Date"",
                               width: 200,
                               hidden: true,
                           },

                           {
                               field: ""sanctioned_amount"",
                               title: ""Sanctioned Amount"",
                               width: 200,
                               filterable: {
                                   cell: {
                                       oper");
            WriteLiteral(@"ator: ""contains"",
                                       inputWidth: 1500
                                   }
                               }
                                
                           },
                           {
                               field: ""beneficiary_type_desc"",
                               title: ""Beneficiary Type"",
                               width: 200,
                               filterable: {
                                   cell: {
                                       operator: ""contains"",
                                       inputWidth: 1500
                                         }
                                     }
                           },
                            {
                               field: ""beneficiary_type"",
                               title: ""Beneficiary Type Desc"",
                               width: 200,
                               hidden: true,
                            },

            ");
            WriteLiteral(@"             {
                             field: ""beneficiary_name"",
                             title: ""Beneficiary Name"",
                             width: 200,
                             filterable: {
                                 cell: {
                                     operator: ""contains"",
                                     inputWidth: 1500
                                      }
                                  }
                         },

                         {
                             field: ""payment_mode"",
                             title: ""Payment Mode"",
                             width: 200,
                             hidden: true,
                         },

                          {
                              field: ""payment_mode_desc"",
                              title: ""Payment Mode Desc"",
                              width: 200,
                              hidden: true,
                          },

                        ");
            WriteLiteral(@"   {
                               field: ""bank_acc_type_desc"",
                               title: ""Account Type"",
                               width: 200,
                               filterable: {
                                   cell: {
                                       operator: ""contains"",
                                       inputWidth: 1500
                                        }
                                    }
                           },
                         
                          {
                              field: ""bank_acc_type"",
                              title: ""Account Type Desc"",
                              width: 200,
                              hidden: true,
                              
                          },
                          {
                              field: ""bank_acc_no"",
                              title: ""Account No."",
                              width: 200,
                              filterab");
            WriteLiteral(@"le: {
                                  cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
                                        }
                                  }
                          },
                          {
                              field: ""bank_code"",
                              title: ""Bank"",
                              width: 200,
                              filterable: {
                                  cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
                                  }
                              }
                          },

                          {
                              field: ""bank_ifsc_code"",
                              title: ""IFSC Code"",
                              width: 200,
                              filterable: {
                                  cell: {
    ");
            WriteLiteral(@"                                  operator: ""contains"",
                                      inputWidth: 1500
                                  }
                              }
                          },

                           
                          {
                              field: ""disbursement_Ref_No"",
                              title: ""Disbursement Ref No"",
                              width: 200,
                              filterable: {
                                  cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
                                  }
                              }
                          },
                          {
                              field: ""disbursement_date"",
                              title: ""Disbursement Date"",
                              width: 200,
                              filterable: {
                                  cell: {
   ");
            WriteLiteral(@"                                   operator: ""contains"",
                                      inputWidth: 1500
                                  }
                              }
                          },
                          {
                              field: ""status_of_client"",
                              title: ""Status Of Client"",
                              width: 200,
                              hidden: true,
                              filterable: {
                                  cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
                                  }
                              }
                          },
                       
                          {
                              field: ""status_of_client_desc "",
                              title: ""Status Of Credit"",
                              width: 200,
                              filterable: {
        ");
            WriteLiteral(@"                          cell: {
                                      operator: ""contains"",
                                      inputWidth: 1500
                                  }
                              }
                          },
                      {
                          field: ""status_desc"",
                          title: ""Status"",
                          width: 200,
                          filterable: {
                              cell: {
                                  operator: ""contains"",
                                  inputWidth: 1500
                              }
                          }
                      },

                      {
                          field: ""status_code"",
                          title: ""Status Code"",
                          width: 200,
                          hidden: true,
                          filterable: {
                              cell: {
                                  operator: ""contains");
            WriteLiteral(@""",
                                  inputWidth: 1500
                              }
                          }
                      },
                       ]

                   });
           $("".k-dropdown-operator"").css('display', 'none');
           $(""#FarmerloanDis_grid .k-input"").attr('disabled', 'false');
       }
        
       function statusFilter(element) {    // Dropdown list functionality
           element.kendoDropDownList({
               dataSource: status_Priority,
               optionLabel: ""--Select Value--""
           });
       }

       function selectRow() {
           var grid = $(""#FLDisbursementList_grid"").data(""kendoGrid"");
           var selectedItem = grid.dataItem(grid.select());
           setlocalStorage(""ls_pageList"", selectedItem);
       }


    var gridRowID = -1; 
       
</script>
<script>
    $(""#btn_Edit"").bind(""click"", function () {
        getSerializedSelectedRows('edit');
    });

    $(""#btn_View"").bind(""click"", function ");
            WriteLiteral(@"() {
        getSerializedSelectedRows('view');
    });

    $(""#btn_new"").bind(""click"", function () {
        btn_onClick('Create');
        location.href = ""../FLDisbursement/FLDisbursementEdit"";
    });

    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage(""ls_pageList"") != undefined) {
                var items = getlocalStorage(""ls_pageList"");
                if (items.length == 0) {
                    kendoAlert(""Please select records"");
                }
                else {
                    if (mode == ""edit"") {
                        //if (items.status_code != 'A') {
                        //    kendoAlert(""This Loan disbursement was approved, you can only view the disbursement details"");
                        //}
                        //else {
                        //    btn_onClick('Edit');
                        //    location.href = ""../FLDisbursement/FLDisbursementEdit"";
                        //}
                  ");
            WriteLiteral(@"      //if (getlocalStorage('role') == ""LRS Maker"" && items.status_code == 'S') {
                        //    btn_onClick('Edit');
                        //    location.href = ""../FLDisbursement/FLDisbursementEdit"";
                        //}
                        //else if (getlocalStorage('role') == ""LRS Checker"" && items.status_code == 'P') {
                            btn_onClick('Edit');
                            location.href = ""../FLDisbursement/FLDisbursementEdit"";

                        //}
                        //else {
                        //    kendoAlert(""This Loan disbursement was approved, you can only view the disbursement details"");
                        //}
                    }
                    else if (mode == ""view"") {
                        btn_onClick('View');
                        location.href = ""../FLDisbursement/FLDisbursementEdit"";
                    }
                }
            }
        }
        catch (err) {
            javascrip");
            WriteLiteral(@"t_log4j_root(arguments.callee.name, err);

        }
    }
</script>
<script>
    function generate_FLDisbursement_list(res) {
        if (res != null) {
            var data = changedataType(res);
            $(""#gd_Disbursement"").empty();
            $(""#gd_Disbursement"").append(""<div id='FLDisbursementList_grid'></div>"");
            FLDisbursementGrid(data);
        }
        else {
            FLDisbursementGrid([]);
        }
    }

    function listRefresh() {
        setlocalStorage('flt_condition', """");
        listpageloadfetch();
    }
</script>






");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
