#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\CCMilkmenMap\CCMilkmenMap.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "29c0a27d6826ccdcc628c3f62a9a2fe7aefc3484"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CCMilkmenMap_CCMilkmenMap), @"mvc.1.0.view", @"/Views/CCMilkmenMap/CCMilkmenMap.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"29c0a27d6826ccdcc628c3f62a9a2fe7aefc3484", @"/Views/CCMilkmenMap/CCMilkmenMap.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_CCMilkmenMap_CCMilkmenMap : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("MapMilk_DNew"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/CCMilkman.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/CCMilkman_Map_retrieveCCMilkmanMap_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/CCMilkman_Map_retrieveCCMilkmanMapList_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/CCMilkman_Map_saveCCMilkmanMap_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/saveCCMilkmanMap_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveCCMilkmanMapList_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveCCMilkmanMap_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\CCMilkmenMap\CCMilkmenMap.cshtml"
  
    ViewBag.Form = "Milkmen Mapping";
    ViewBag.helpName = "CCMilkmenMap.html";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29c0a27d6826ccdcc628c3f62a9a2fe7aefc34848453", async() => {
                WriteLiteral("\r\n    <div class=\"panel panel-default\">\r\n        <div class=\"panel-body\" style=\"padding-top:6px;padding-bottom:2px\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-5\">\r\n                    <div class=\"form-group\"");
                BeginWriteAttribute("style", " style=\"", 474, "\"", 482, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                        <label for=""cmb_cc"" class=""col-sm-4 control-label required"">Collection Centre</label>
                        <div class=""col-sm-6"">
                            <input id=""cmb_cc"" name=""cc_aggrloc_code"" style=""width: 100%"" data-role=""filtercombo"">
                        </div>
                    </div>
                </div>
            </div>

            <div class=""row"">
                <div class=""col-sm-5"">
                    <div class=""form-group"">
                        <label for=""lblvillage"" class=""col-sm-4  control-label"">Village(s) Covered</label>
                        <div class=""col-sm-8"">
                            <input id=""lblvillage"" type=""text"" name=""lblvillage"" class=""form-control"" style=""border:0;font-weight:bold;"">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""row"">
            <div class=""col-xs-12"">
                <label>Farmers Not Mapped</l");
                WriteLiteral(@"abel>
                <div id=""gd_mappcc_list"">
                    <div id=""MilkMap_grid"">
                    </div>
                </div>
            </div>
        </div>

        <div class=""col-xs-12"">
            <button type=""button"" class=""btn btn-info"" onclick=""map()"">
                <span class=""fa fa-arrow-circle-down"">Map</span>
            </button>
        </div>


        <div class=""col-xs-12"">
            <label>Milkmen Mapped To Collection Centre</label>
            <div id=""gd_milkmap_list"">
                <div id=""MilkMapCC_grid"">
                </div>
            </div>
        </div>

    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<script>\r\n    click_act_name = \"CCMilkmenMap\";\r\n    click_ctrl_name = \"CCMilkmenMap\";\r\n    form_list_url = \'../\' + click_ctrl_name + \'/\' + click_act_name;\r\n</script>\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29c0a27d6826ccdcc628c3f62a9a2fe7aefc348412386", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29c0a27d6826ccdcc628c3f62a9a2fe7aefc348413426", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29c0a27d6826ccdcc628c3f62a9a2fe7aefc348414466", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29c0a27d6826ccdcc628c3f62a9a2fe7aefc348415506", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29c0a27d6826ccdcc628c3f62a9a2fe7aefc348416546", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29c0a27d6826ccdcc628c3f62a9a2fe7aefc348417586", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29c0a27d6826ccdcc628c3f62a9a2fe7aefc348418626", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "29c0a27d6826ccdcc628c3f62a9a2fe7aefc348419667", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

<script>
    var menuId = """";
    var permission = """";
    $(document).ready(function () {
        master_milkmap();
        MilkMap_grid_details([]);
        MilkMapCC_grid_details([]);

        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $(""#MapMilk_DNew"");
        kendo.init(container);
        container.kendoValidator({
        });

        $("".file_attach"").attr(""hdrtitle"", ""Milkmen Mapping"");
        $("".notes"").attr(""hdrtitle"", ""Milkmen Mapping"");
        $(""#lblForm_menuid"").text(""MAPMAP"");

        Screen_Id = ""MAPMAP"";
        permission = sec_Permission(Screen_Id);
        $(""#hide_div"").hide();
        load_master_code();

        page_load_list_permission(permission);
        setlocalStorage(""ls_pageList"", """");
        function get_tamil_lang() {
            getLanguageListMode(""ACT_FAR_REG"", ""MilkMapCC_grid"", ""taIN"", ""enUS"");
            listpageloadfetch();
        }

        function get_english_lang() {
            getL");
            WriteLiteral(@"anguageListMode(""ACT_FAR_REG"", ""MilkMapCC_grid"", ""enUS"", ""taIN"");
            listpageloadfetch();
        }
        setlocalStorage(""status"", ""Active"");


        var gtmap_in = """";
        $(""#cmb_cc"").empty();
        gtmap_in = grid_comboScreen_mastercodes(""CC"");
        filter_combobox(""cmb_cc"", gtmap_in);


        //var grid = $(""#MilkMapCC_grid"").getKendoGrid();
        //grid.bind(""beforeEdit"", beforeEditHandler);


    });
    //function beforeEditHandler(e) {
    //    alert(""before edit"");
    //}
</script>

<script>
    function load_master_code() {
        try {
            debugger;
            var data = {};
            var context = WebAPIProxy.getContext();
            data.userId = context.userId
            data.orgnId = context.orgnId
            data.locnId = context.locnId
            data.localeId = context.localeId
            data.screen_Id = ""MAPMAP"";
            var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));");
            WriteLiteral(@"
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }


</script>

<script>
    var status_Priority = [];
    function MilkMap_grid_details(data) {
        try {
            $.each(data, function (index, value) {
                var flag = false;
                $.each(status_Priority, function (sindex, svalue) {
                    if (svalue == value.status_desc) {
                        flag = true;
                    }
                });
                if (flag == false) {
                    status_Priority.push(value.status_desc);
                }
            });
            gridRowID = -1;
            data = addRandomNum(data);

            $(""#MilkMap_grid"").kendoGrid(
          {
              dataSource: {
                  data: data,
              },
              height: 200,
              sortable: true,
              selectable: true,
              selectable: ""singl"",   //  Grid Row Selection
   ");
            WriteLiteral(@"           change: selectRow,
              navigatable: true,
              groupable: false,

              columns: [
                  {
                      field: ""farmer_code"",
                      title: ""Farmer ID"",

                  },
                   {
                       field: ""farmer_name"",
                       title: ""Given Name"",

                   },

                    {
                        field: ""sur_name"",
                        title: ""Surname"",

                    },
                      {
                          field: ""farmer_dob"",
                          title: ""DOB"",

                      },
                      {
                          field: ""gender_flag"",
                          title: ""Gender"",
                          hidden: true,
                      },
              {
                  field: ""gender_flag_desc"",
                  title: ""Gender"",
              },
              {
                  field: ""re");
            WriteLiteral(@"g_mobile_no"",
                  title: ""Regd Mobile No"",

              },
               {
                   field: ""status_code"",
                   title: ""Status"",
                   hidden: true,
               },
               {
                   field: ""status_desc"",
                   title: ""Status"",

               },

              ]

          });


            $("".k-dropdown-operator"").css('display', 'none');
            $(""#MilkMap_grid .k-input"").attr('disabled', 'false');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    var ddl = """";
    $(""#cmb_cc"").change(function () {
        var c = $('#cmb_cc');
        ddl = c.data('kendoComboBox').value();
        if (ddl != """" && ddl != undefined) {
            setlocalStorage(""ls_List"", '');
            var formval = form_Serialize(""MapMilk_DNew"");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = ""ALL"";
       ");
            WriteLiteral(@"     obj_val.FilterBy_Code = ""."";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != """") {
                obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_Fromvalue = ""."";
            }
            obj_val.FilterBy_Tovalue = ""."";
            obj_val.cc_aggrloc_code = ddl;
            var data_list = {};
            data_list.context = WebAPIProxy.getContext();
            data_list.context.Filter = obj_val;
            retrieve_ccmilkman_list(data_list);

            var ddl = $('#cmb_cc').data('kendoComboBox').value();
            var formval = form_Serialize(""MapMilk_DNew"");
            var obj_val = JSON.parse(formval);
            var org_id = getlocalStorage('org_id');
            var org_type = getlocalStorage('org_type');
            obj_val.cc_aggrloc_code = ddl;
            obj_val.aggrorgn_code = org_id;
            obj_val.aggrorgn_type = org_type;");
            WriteLiteral(@"
            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Header = obj_val;
            retrieve_ccmilkman_details(data);
        }
        else {
            MilkMap_grid_details([]);
            MilkMapCC_grid_details([]);
            $(""#lblvillage"").val('');
        }
    });


    function listpageloadfetch() {
        try {
            var formval = form_Serialize(""MapMilk_DNew"");
            var obj_val = JSON.parse(formval);
            obj_val.FilterBy_Option = ""ALL"";
            obj_val.FilterBy_Code = ""."";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != """") {
                obj_val.FilterBy_FromValue = getlocalStorage('flt_condition');
            }
            else {
                obj_val.FilterBy_FromValue = ""."";
            }
            setlocalStorage('flt_condition', """");
        } catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
    ");
            WriteLiteral(@"    }
    }


    function selectRow() {
        try {
            var grid = $(""#MilkMap_grid"").data(""kendoGrid"");
            var selectedItem = grid.dataItem(grid.select());
            setlocalStorage(""ls_List"", selectedItem);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<script>
    function PopulateItemGrid() {
        try {
            var productBookGrid = $(""#MilkMap_grid"").data(""kendoGrid"");
            var itemGrid = $(""#MilkMapCC_grid"").data(""kendoGrid"");
            //For check Dupliacte
            debugger;
            var data = getlocalStorage(""ls_List"");
            var currentFarmerName = data.farmer_name;
            var currentFarmerCode = data.farmer_code;
            var currentflag = data.sel_flag;
            var griddata = itemGrid.dataSource.data();
            for (item in griddata) {

                if (griddata[item].farmer_code == currentFarmerCode &&
                  ");
            WriteLiteral(@" griddata[item].farmer_name == currentFarmerName) {
                    kendoAlert(""Already exists in Milkmen Mapped To Collection Centre"");
                    return false;
                }
                if (currentflag == ""C"") {
                    kendoAlert("" ** "");
                    return false;
                }


            }
            //End
            productBookGrid.select().each(function () {

                var dataItem = productBookGrid.dataItem($(this));

                itemGrid.dataSource.add(dataItem);

            });
            itemGrid.refresh();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }





</script>


<script>
    function MilkMapCC_grid_details(data) {
        try {

            $(""#MilkMapCC_grid"").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fie");
            WriteLiteral(@"lds: {
                                milkman_rowid: { type: ""string"", editable: false },
                                farmer_code: { type: ""string"", editable: false },
                                milkman_code: { type: ""string"" },
                                farmer_name: { type: ""string"", editable: false },
                                sur_name: { type: ""string"", editable: false },
                                farmer_dob: { type: ""string"", editable: false },
                                gender_flag_desc: { type: ""string"", editable: false },
                                gender_flag: { type: ""string"", editable: false },
                                reg_mobile_no: { type: ""string"", editable: false },
                                status_code: { type: ""string"", editable: false },
                                status_desc: { type: ""string"", editable: false },
                                row_timestamp: { type: ""string"", editable: false },
                             ");
            WriteLiteral(@"   mode_flag: { type: ""string"", editable: false },

                            }
                        }
                    }
                },
                toolbar: ""<button type='button' id='Exportclick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>"",
                excelExport: function (e) {
                    var gd = $(""#MilkMapCC_grid"").data(""kendoGrid"");
                    var len = gd.dataSource._data.length;
                    var chkall = $('#chkall').is(':checked');
                    var chkfilter = $('#chkfilter').is(':checked');
                    var chktemp = $('#chktemp').is(':checked');
                    var twokendobox = true;
                    gd.dataSource.pageSize(len);
                    if (e.sender.dataSource._data.length == len) {
                        twokendobox = false;
                        exportfunction(e, chkall, chkfilter, chktemp, twokend");
            WriteLiteral(@"obox, gd);
                    }
                    else {
                        exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    }
                    gd.dataSource.pageSize('10');
                    return false;
                },
                filterable: {
                    enabled: true,

                    delay: 1500,
                    mode: ""menu, row"",
                    height: 200,
                    click: function (e) {
                        var gd = $(""#MilkMapCC_grid"").data(""kendoGrid"");
                        filter_row(gd);
                    }
                },
                filterMenuInit: function (e) {
                    var gd = $(""#MilkMapCC_grid"").data(""kendoGrid"");
                    filter_row(gd);
                },
                //change: selectRow,
                height: 450,
                edit: OnEdit,
                sortable: true,
                selectable: true,
                editabl");
            WriteLiteral(@"e: true,
                //beforeEdit: function (e) {
                //    alert(""guhgjgfh"");
                //    var columnIndex = this.cellIndex(e.container);
                //    var fieldName = this.thead.find(""th"").eq(columnIndex).data(""field"");

                //    if (!isEditable(fieldName, e.model)) {
                //        e.preventDefault();
                //    }
                //},


                //selectable: ""singl"",   //  Grid Row Selection
                pageable: {
                    refresh: false,
                    pageSizes: true,
                    buttonCount: 5
                },
                navigatable: false,
                groupable: false,
                columns: [{
                    command: [
            {
                name: ""Delete"",
                id: ""Delete"",
                imageClass: ""fa fa-close"",
                click: function (e) {
                    var grid = $(""#MilkMapCC_grid"").data(""kendoGrid"");
          ");
            WriteLiteral(@"          var dataItem = $(""#MilkMapCC_grid"").data(""kendoGrid"").dataItem($(e.target).closest(""tr""));
                    DeleteWindowEvent(e, dataItem, grid);
                    e.stopImmediatePropagation();
                }
            },
                    ], title: ""Action"", width: ""55px"",
                },
                {
                    field: ""milkman_rowid"",
                    title: ""milkman_rowid"",
                    hidden: true,
                },
                   {
                       field: ""farmer_code"",
                       title: ""Farmer ID"",
                       filterable: {
                           cell: {
                               operator: ""contains"",
                               inputWidth: 1500
                           }
                       }
                   },
                    {
                        field: ""milkman_code"",
                        title: ""MILKMAN ID"",
                        editable: function (dataItem");
            WriteLiteral(@") {
                            return dataItem.isNew();
                        },
                        attributes: { style: ""text-align:right;"" },
                        editor: function (container, options) {
                            numeric_editor(container, options.field, '5', '3');
                        },

                        filterable: {
                            cell: {
                                operator: ""contains"",
                                inputWidth: 1500,


                            }
                        }


                    },
               {
                   field: ""farmer_name"",
                   title: ""Given Name"",
                   filterable: {
                       cell: {
                           operator: ""contains"",
                           inputWidth: 1500
                       }
                   }
               },


                {
                    field: ""sur_name"",
                    title: """);
            WriteLiteral(@"Surname"",
                    filterable: {
                        cell: {
                            operator: ""contains"",
                            inputWidth: 1500
                        }
                    }
                },
                  {
                      field: ""farmer_dob"",
                      title: ""DOB"",
                      filterable: {
                          cell: {
                              operator: ""contains"",
                              inputWidth: 1500
                          }
                      }
                  },
                  {
                      field: ""gender_flag"",
                      title: ""Gender"",
                      hidden: true,
                  },
          {
              field: ""gender_flag_desc"",
              title: ""Gender"",
              filterable: {
                  cell: {
                      operator: ""contains"",
                      inputWidth: 1500
                  }
             ");
            WriteLiteral(@" }
          },
          {
              field: ""reg_mobile_no"",
              title: ""Regd Mobile No"",
              filterable: {
                  cell: {
                      operator: ""contains"",
                      inputWidth: 1500
                  }
              }
          },
           {
               field: ""status_code"",
               title: ""Status"",
               hidden: true,
           },
           {
               field: ""status_desc"",
               title: ""Status"",
               filterable: {
                   cell: {
                       operator: ""contains"",
                       inputWidth: 1500
                   }
               }
           },
           {
               field: ""row_timestamp"",
               title: ""row_timestamp"",
               hidden: true,
           },
           {
               field: ""mode_flag"",
               title: ""mode_flag"",
               hidden: true,
           },
                ]

            });");
            WriteLiteral(@"
            $("".k-dropdown-operator"").css('display', 'none');
            $(""#MilkMapCC_grid .k-input"").attr('disabled', 'false');

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }
    function OnEdit(e) {
        setDefaultValues(e);
        if (e.model.status_code == ""A"") {
            e.container.find(""input[name='milkman_code']"").prop('disabled', true);
        }

    }

</script>

<script language=""javascript"" type=""text/javascript"">
    function popitup(url) {
        newwindow = window.open(url, 'name', 'height=650,width=850');
        if (window.focus) { newwindow.focus() }
        return false;

    }
</script>

<script>
    function save() {
        try {
            if ($(""#txtMode"").val() == ""S"") {
                $(""#txtMode"").val('U');
            }
            var formval = form_Serialize(""MapMilk_DNew"");
            var obj_val = JSON.parse(formval);
            var ddl = $('#cmb_cc').data('ken");
            WriteLiteral(@"doComboBox').value();
            var org_id = getlocalStorage('org_id');
            var org_type = getlocalStorage('org_type');
            obj_val.cc_aggrloc_code = ddl;
            obj_val.aggrorgn_code = org_id;
            obj_val.aggrorgn_type = org_type;

            var grid_val1 = JSON.stringify($(""#MilkMapCC_grid"").data(""kendoGrid"").dataSource._data);
            var Bind1 = {};
            Bind1 = grid_val1;
            var result1 = JSON.parse(Bind1);
            var milkmancode = 0;
            $.each(result1, function (index, value) {
                var milkman_rowid = value.milkman_rowid;
                if (milkman_rowid == undefined) {
                    result1[index].milkman_rowid = ""0"";
                }
                var mode = result1[index].mode_flag;
                if (mode == ""S"") {
                    result1[index].mode_flag = ""U"";
                }
                if (mode == """" || mode == undefined) {
                    result1[index].mode_flag = ""I"";");
            WriteLiteral(@"
                }
                var milkman_code = result1[index].milkman_code;
                if (milkman_code == """" || milkman_code == undefined) {
                    result1[index].milkman_code = ""0"";
                }
                if (milkman_code == """" || milkman_code == undefined || milkman_code == 0) {
                    milkmancode = 0;
                    kendoAlert(""Kindly fill the MilkmanCode.!!"");
                    return false;
                } else {
                    milkmancode = 1
                }
                var rowstamp = result1[index].row_timestamp;
                if (rowstamp == """" || rowstamp == undefined) {
                    result1[index].row_timestamp = """";
                }
               
            });

            for (var i = 0; i < result1.length; i++) {
                var currentDataItem = result1[i];
                var milkman1 = currentDataItem.milkman_code;
                for (var j = i + 1; j < result1.length; j++) {
       ");
            WriteLiteral(@"             var nextDataItem = result1[j];
                    var milkman2 = nextDataItem.milkman_code;

                    if (milkman1 == milkman2) {
                        kendoAlert(""This "" + milkman1 + "" MilkmanCode is already exists"");
                        return false;
                    }

                }
            }


            if (milkmancode == 1) {
                var obj_grid_val1 = result1;
                var data_save = {};
                data_save.context = WebAPIProxy.getContext();
                data_save.context.Header = obj_val;
                data_save.context.Map = obj_grid_val1;
                save_ccmilkman_details(data_save);
            }

        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_ccmilkman_header(res) {
        try {
            $(""#lblvillage"").val(res.village_covered);
        }
        catch (err) {
            javascript_log4j_root(argume");
            WriteLiteral(@"nts.callee.name, err);
        }
    }

    function generate_ccmilkman_detail(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                $(""#gd_milkmap_list"").empty();
                $(""#gd_milkmap_list"").append(""<div id='MilkMapCC_grid'></div>"");
                MilkMapCC_grid_details(data);
            }
            else {

                MilkMapCC_grid_details([]);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function get_ccmilkman_details(res) {
        try {
            var c = $('#cmb_cc');
            ddl = c.data('kendoComboBox').value();
            if (ddl != """" && ddl != undefined) {
                setlocalStorage(""ls_List"", '');
                var formval = form_Serialize(""MapMilk_DNew"");
                var obj_val = JSON.parse(formval);
                obj_val.FilterBy_Option = ""ALL"";
                obj_val.FilterBy_Cod");
            WriteLiteral(@"e = ""."";
                if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != """") {
                    obj_val.FilterBy_Fromvalue = getlocalStorage('flt_condition');
                }
                else {
                    obj_val.FilterBy_Fromvalue = ""."";
                }
                //obj_val.FilterBy_FromValue = ""."";
                obj_val.FilterBy_Tovalue = ""."";
                obj_val.cc_aggrloc_code = ddl;
                var data_list = {};
                data_list.context = WebAPIProxy.getContext();;
                data_list.context.Filter = obj_val;
                retrieve_ccmilkman_list(data_list);

                var ddl = $('#cmb_cc').data('kendoComboBox').value();
                var formval = form_Serialize(""MapMilk_DNew"");
                var obj_val = JSON.parse(formval);
                var org_id = getlocalStorage('org_id');
                var org_type = getlocalStorage('org_type');
                obj_val.cc_aggrloc_cod");
            WriteLiteral(@"e = ddl;
                obj_val.aggrorgn_code = org_id;
                obj_val.aggrorgn_type = org_type;
                var data_get = {};
                data_get.context = WebAPIProxy.getContext();;
                data_get.context.Header = obj_val;
                retrieve_ccmilkman_details(data_get);
            }
            else {
                MilkMap_grid_details([]);
                MilkMapCC_grid_details([]);
                $(""#lblvillage"").val('');
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<script>
    function generate_ccmilkman_list(res) {
        try {
            if (res != null) {
                var data = changedataType(res);
                $(""#gd_mappcc_list"").empty();
                $(""#gd_mappcc_list"").append(""<div id='MilkMap_grid'></div>"");
                MilkMap_grid_details(data);
                lblvillage.text = res.locnId;
            }
            ");
            WriteLiteral(@"else {
                MilkMap_grid_details([]);
                lblvillage.text = """";
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function listRefresh() {
        try {
            listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<script>
    function map() {
        try {
            var items = getlocalStorage(""ls_List"");
            if (items == undefined || items == '') {
                kendoAlert(""Please select records"");
            }
            else {
                PopulateItemGrid();
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>

<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }");
            WriteLiteral("\r\n</style>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
