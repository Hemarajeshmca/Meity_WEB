#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\Bonusdetailsupdate\Bonusdetailsupdate.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "02bc1fe21d19c14a864431c7020d86356ccddf37"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Bonusdetailsupdate_Bonusdetailsupdate), @"mvc.1.0.view", @"/Views/Bonusdetailsupdate/Bonusdetailsupdate.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"02bc1fe21d19c14a864431c7020d86356ccddf37", @"/Views/Bonusdetailsupdate/Bonusdetailsupdate.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_Bonusdetailsupdate_Bonusdetailsupdate : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("BonusStatusupdate_form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Bonus_Payment_retrieveBonusUpdate_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveBonusUpdate_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/Bonus_Payment_saveBonusUpdate_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/saveBonusUpdate_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/BonusPaymentUpdate.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\Bonusdetailsupdate\Bonusdetailsupdate.cshtml"
  
    ViewBag.Form = "Bonus Details Update";
    Layout = "~/Views/Shared/FormViewLayout2.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02bc1fe21d19c14a864431c7020d86356ccddf377002", async() => {
                WriteLiteral(@"
    <div class=""panel panel-default"">
        <div class=""panel-body"" style=""padding-top:6px;padding-bottom:2px"">
            <div class=""row"" style=""padding-bottom:15px"">
                <div class=""col-sm-4"">
                    <div class=""form-group"">
                        <label for=""cmb_payment_status"" class=""col-sm-5 control-label required""> Bonus Paid Status</label>
                        <div class=""col-sm-6"">
                            <input id=""cmb_payment_status"" name=""payment_status"" data-role=""filtercombo"" style=""width:100%"" />
                        </div>

                    </div>
                </div>


                <div class=""col-sm-4"">
                    <div class=""form-group"">
                        <label for=""cmb_payment"" class=""col-sm-4 control-label required""> Bonus for</label>
                        <div class=""col-sm-6"">
                            <input id=""cmb_payment"" name=""bonus_for"" style=""width: 100%"" data-role=""filtercombo"">
             ");
                WriteLiteral("           </div>\r\n                        <button");
                BeginWriteAttribute("title", " title=\"", 1240, "\"", 1248, 0);
                EndWriteAttribute();
                WriteLiteral(@" data-placement=""top"" data-toggle=""tooltip"" style=""float:right"" class=""btn btn-info"" type=""button"" data-original-title=""Refresh"" onclick=""mandatory()""> <span class=""glyphicon glyphicon-refresh""></span></button>
                    </div>
                </div>

                <div class=""col-sm-4"">
                    <div class=""form-group"">
                        <label for=""txtValidity"" class="" col-md-4 control-label"">Payment Date</label>
                        <div class="" col-sm-4"">
                            <input class=""cusDate"" data-role='datepicker' id=""txtValidity"" onkeypress=""return date_validate(event)"" data-checkdate-msg=""Enter Valid Date"" name=""bonus_date"" style=""width:100%"" />
                            <span data-for='valid' class='k-invalid-msg'></span>
                            <input type=""checkbox"" id=""apply_all"" style=""margin:10px 5px 0px 0px""> Apply to all
                        </div>

");
                WriteLiteral("\r\n                    </div>\r\n                </div>\r\n\r\n\r\n");
                WriteLiteral("            </div>\r\n            <div class=\"col-xs-12\">\r\n                <div id=\"grid_Drop_list\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02bc1fe21d19c14a864431c7020d86356ccddf3711028", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02bc1fe21d19c14a864431c7020d86356ccddf3712068", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02bc1fe21d19c14a864431c7020d86356ccddf3713108", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02bc1fe21d19c14a864431c7020d86356ccddf3714148", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02bc1fe21d19c14a864431c7020d86356ccddf3715188", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "02bc1fe21d19c14a864431c7020d86356ccddf3716228", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    $(document).ready(function () {
        kendodate_format();
        Form_validate_Name = $('form.form-horizontal').attr('id');
        var container = $(""#BonusStatusupdate_form"");
        kendo.init(container);
        container.kendoValidator({
        });

        Screen_Id = ""MBASTAUPD"";
        master_userRoleNew2();
        load_master_code();

        var a = getlocalStorage('org_type');
        if (a == ""AGGR_ORG_FINAL"") {
            //buyfrom
            var FROM = """";
            $(""#cmb_payment"").empty();
            FROM = grid_comboScreen_mastercodes(""Final_ORGINTER"");
            filter_combobox(""cmb_payment"", FROM);
        }
        else {
            var FROM = """";
            $(""#cmb_payment"").empty();
            FROM = grid_comboScreen_mastercodes(""INT_MILKMAN"");
            filter_combobox(""cmb_payment"", FROM);

        }

        var dtmap_paymentstatus = """";
        $(""#cmb_payment_status"").empty();
        dtmap_paymentstatus = grid_comboS");
            WriteLiteral(@"creen_mastercodes(""QCD_STAT_PYMT"");
        filter_combobox(""cmb_payment_status"", dtmap_paymentstatus);

        var data = [];
        gridFilter(data);
    });
</script>
<script>
    function load_master_code() {
        try {
            debugger;
            var data = {};
            var context = WebAPIProxy.getContext();
            data.userId = context.userId
            data.orgnId = context.orgnId
            data.locnId = context.locnId
            data.localeId = context.localeId
            data.screen_Id = ""MBASTAUPD"";
            var tab_values = ajaxcall_param(""/Home/screenId_mastercodelist"", JSON.stringify(data));
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<script>
    //var data = [];
    function gridFilter(data) {

        //var gridpaymentdate = $(""#txtValidity"").val();
        //var checked = false;
        //if($('#apply_all').attr('checked')){
        //    checked = true;
");
            WriteLiteral(@"
        //    }

        //if (gridpaymentdate != """" && gridpaymentdate != undefined) {
        //    if (checked) {
        //        var grid = $(""#grid_Drop_list"").data(""kendoGrid"");

        //        // Access the row that is selected
        //        var select = grid.select();
        //        // and now the data
        //        var data = grid.dataItem(select);
        //        // update the column `symbol` and set its value to `HPQ`
        //        data.set(""payment_date"", gridpaymentdate);
        //    }
        //}

        try {
            $(""#grid_Drop_list"").kendoGrid({
                dataSource: {
                    data: data,
                    schema: {
                        model: {
                            fields: {

                                milkman_code: { type: ""string"", editable: false },
                                farmer_name: { type: ""string"", editable: false },
                                payment_amount: { type: ""string"", ed");
            WriteLiteral(@"itable: false },
                                net_pay: { type: ""string"" },
                                payment_date: { type: ""date"" },
                                pay_method: { type: ""string"" },
                                bank_ref_no: { type: ""string"" },
                                pay_status: { type: ""string"" },
                                remarks: { type: ""string"" },
                                mode_flag: { type: ""string"", defaultValue: ""I"" }
                            }
                        }
                    }
                },

                height: 400,
                groupable: false,
                //dataBound: function (e) {
                //    //data.value.set(""payment_date"", applydate);
                //    alert(applydate)
                //},

                sortable: true,
                selectable: true,
                navigatable: true,
                save: function (data) {

                    //if (data.values.accepted_");
            WriteLiteral(@"qty) {
                    //    data.model.set(""net_pay"", (parseInt(data.values.net_pay)).toFixed(2));
                    //}
                    //else {
                    //    data.model.set(""pay_date"", data.model.pay_date);
                    //}
                },
                selectable: true,
                navigatable: true,
                columns: [
                    {
                        field: ""bonusdtl_rowid"",
                        title: ""Row Id"",
                        width: 1,
                        hidden: true,
                    },
                      {
                          field: ""bonus_no"",
                          title: ""Payment Advice ID"",
                          width: 100,
                          editable: false
                      },

                 {
                     field: ""milkman_code"",
                     title: ""MilkMen ID"",
                     width: 100

                 },

    {
        field: ""farme");
            WriteLiteral(@"r_code"",
        title: ""Farmer Code"",
        width: 100,
        hidden: true,

    },
    {
        field: ""farmer_name"",
        title: ""Farmer Name"",
        width: 100,


    },
    {
        field: ""bonus_amount"",
        title: ""Bonus Payable (Rs)"",
        width: 100

    },

    {
        field: ""payment_date"",
        title: ""Payment Date"",
        width: 100,
        format: ""{0:dd/MM/yyyy}""

    },


     {
         field: ""payment_mode"",
         title: ""payment_mode"",
         width: 1,
         hidden: true,
     },
    {
        field: ""payment_mode_desc"",
        title: ""Paymode Method"",
        editor: function (container, options) {
            combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""payment_mode"", ""grid_Drop_list"")
        },
        width: 100

    },
    {
        field: ""bank_ref_no"",
        title: ""Bank Reference No"",
        width: 100,
        
    },
     {
         field:");
            WriteLiteral(@" ""payment_status"",
         title: ""payment_status"",
         width: 1,
         hidden: true,
     },
    {
        field: ""payment_status_desc"",
        title: ""Payment Status"",
        editor: function (container, options) {
            combo_editor_man(container, ""cmb_"" + options.field, eval(options.field + ""_list""), options.field, ""payment_status"", ""grid_Drop_list"")
        },
        width: 200

    },
    {
        field: ""payment_remark"",
        title: ""Remarks"",
        width: 100,


    },

    {
        field: ""mode_flag"",
        title: ""Mode"",
        hidden: true
    }],
                editable: true
            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);

        }
    }

    function check(acc, tf) {
        if (acc >= tf) {
            acc = """";
        }
    }

    load_master_code();
    payment_mode_desc_list = grid_comboScreen_mastercodes(""QCD_PAYMENT_MODE"");
    payment_status_desc_list =");
            WriteLiteral(@" grid_comboScreen_mastercodes(""QCD_STAT_PYMT"");

</script>

<script>

    function listLoad() {
        //fetch_validate();
        try {
            var formval = form_Serialize(""BonusStatusupdate_form"");
            var obj_val = JSON.parse(formval);
            var c = $('#cmb_payment_status');
            if (c.data('kendoComboBox').value() != """" && c.data('kendoComboBox').value() != undefined) {
                obj_val.bonus_status = c.data('kendoComboBox').value();

            }
            else {
                obj_val.bonus_status = ""0"";
            }
            var b = $('#cmb_payment');
            if (b.data('kendoComboBox').value() != """" && b.data('kendoComboBox').value() != undefined) {
                obj_val.bonus_for = b.data('kendoComboBox').value();

            }
            else {
                obj_val.bonus_for = ""0"";
            }
            if (obj_val != undefined) {
                var data = {};
                data.context = WebAPIProxy.getContext(");
            WriteLiteral(@");
                data.context.Header = obj_val;
                retrieve_BonuspaymentUpdate_list(data);
            }
            return false;
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function generate_BonuspaymentUpdateApp_listDetail(res) {

        try {
           
                        var data = changedataType(res);
                        $.each(data, function (index, value) {

                            var d1 = value.payment_date;
                            //var fncode1 = d1.split(""/"");
                            //var correctdate1 = fncode1[1] + '/' + fncode1[0] + '/' + fncode1[2];

                            var date = kendo.parseDate(d1);
                            value = kendo.toString(date, ""MM/dd/yyyy"");
                            data[index].payment_date = value;
                        });
                        gridFilter(data);
                    }

              
        c");
            WriteLiteral(@"atch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }

    }

    function generate_BonuspaymentUpdateApp_listHeader(res) {

    }
</script>
<script>
    $('#apply_all').click(function () {
        if ($(this).is(':checked')) {
            if ($(""#txtValidity"").val() != """") {
                var date = $(""#txtValidity"").val();
                var code = date.split(""/"");
                var applydate = code[1] + '/' + code[0] + '/' + code[2];
            }

            if (applydate != """" && applydate != undefined) {

                var grid_val = JSON.stringify($(""#grid_Drop_list"").data().kendoGrid._data);
                var Bind = {};
                Bind = grid_val;
                var res = JSON.parse(Bind);
                var result = changedataType(res);
                $.each(result, function (index, value) {

                    var date = kendo.parseDate(applydate);
                    value = kendo.toString(date, ""MM/dd/yyyy"");
        ");
            WriteLiteral(@"            result[index].payment_date = value;
                });
                if (result.length == 0) {
                    var data = changedataType(res);
                    gridFilter(data);
                }
                else {
                    gridFilter(result);
                }
            }

            else {

                var data = changedataType(res);
                $.each(data, function (index, value) {

                    var d1 = value.payment_date;
                    //var fncode1 = d1.split(""/"");
                    //var correctdate1 = fncode1[1] + '/' + fncode1[0] + '/' + fncode1[2];

                    var date = kendo.parseDate(d1);
                    value = kendo.toString(date, ""MM/dd/yyyy"");
                    data[index].payment_date = value;
                });
                gridFilter(data);
            }

        }
    });
</script>

<script>
    function save() {
        try {
            var grid_val = JSON.stringify($(""#g");
            WriteLiteral(@"rid_Drop_list"").data().kendoGrid._data);
            var Bind = {};
            Bind = grid_val;
            var result = JSON.parse(Bind);
            $.each(result, function (index, value) {
                var d = value.payment_date;
                var date = kendo.parseDate(d);
                value = kendo.toString(date, ""MM/dd/yyyy"");
                result[index].payment_date = value;

                var paymentdtl_rowid = result[index].paymentdtl_rowid;
                if (paymentdtl_rowid == undefined || paymentdtl_rowid == """") {
                    result[index].paymentdtl_rowid = ""0"";
                }
                var mmode = result[index].mode_flag;
                if (mmode == ""S"") {
                    result[index].mode_flag = ""U"";
                }
            });
            var obj_val = result;
            var data_save = {};
            data_save.context = WebAPIProxy.getContext();
            data_save.context.BonusDtl = obj_val;
            save_BonuspaymentU");
            WriteLiteral(@"pdateApp_details(data_save);
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function get_ProcessShareApp_Details() {
        try {
            //fetch_validate();
            var formval = form_Serialize(""BonusStatusupdate_form"");
            var obj_val = JSON.parse(formval);
            var c = $('#cmb_payment_status');
            if (c.data('kendoComboBox').value() != """" && c.data('kendoComboBox').value() != undefined) {
                obj_val.bonus_status = c.data('kendoComboBox').value();

            }
            else {
                obj_val.bonus_status = ""0"";
            }
            var b = $('#cmb_payment');
            if (b.data('kendoComboBox').value() != """" && b.data('kendoComboBox').value() != undefined) {
                obj_val.bonus_for = b.data('kendoComboBox').value();

            }
            else {
                obj_val.bonus_for = ""0"";
            }
            if (obj_val != undef");
            WriteLiteral(@"ined) {
                var data = {};
                data.context = WebAPIProxy.getContext();
                data.context.Header = obj_val;
                retrieve_BonuspaymentUpdate_list(data);
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

    function get_ProcessShareApp_Header() {
    }
    function mandatory() {
        try {
            var mandatory_check = true;

            var grid_validate_msg = """";

            if ($('#cmb_payment_status').data(""kendoComboBox"").value() == """") {
                grid_validate_msg += ""Bonus payment status cannot be blank <br>"";
                mandatory_check = false;
            }
            if ($('#cmb_payment').data(""kendoComboBox"").value() == """") {
                grid_validate_msg += ""Bonus for cannot be blank <br>"";
                mandatory_check = false;
            }


            if (mandatory_check == false) {
                kendoAlert(grid_v");
            WriteLiteral(@"alidate_msg);
                return false;
            }
            else {
                return listLoad();
            }
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }

</script>
<style>
    .k-widget.k-tooltip {
        background-color: #ffe79e;
        color: #6b5100;
    }

    span.k-tooltip {
        white-space: pre-line;
    }
</style>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
