#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FPOLoan\FPOLoanList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "977876a35435ad07d358c25e869bbdb3b0784fe0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FPOLoan_FPOLoanList), @"mvc.1.0.view", @"/Views/FPOLoan/FPOLoanList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"977876a35435ad07d358c25e869bbdb3b0784fe0", @"/Views/FPOLoan/FPOLoanList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_FPOLoan_FPOLoanList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frm_fpo_loan"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-horizontal"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-role", new global::Microsoft.AspNetCore.Html.HtmlString("validator"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("novalidate", new global::Microsoft.AspNetCore.Html.HtmlString("novalidate"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/FPOLoan.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/FPOLoan_retrieveFPOLoan_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/FPOLoan_retrieveFPOLoanList_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/FPOLoan_saveFPOLoan_APIClient.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveFPOLoan_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/retrieveFPOLoanList_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/saveFPOLoan_Model.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/API_Scripts/UmoldITWebAPIProxy.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FPOLoan\FPOLoanList.cshtml"
  
    ViewBag.List = "FPO Loan";
    ViewBag.helpName = "FPOLoan.html";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";


#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "977876a35435ad07d358c25e869bbdb3b0784fe08321", async() => {
                WriteLiteral("\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-12\">\r\n            <div id=\"gd_Fpoloan\">\r\n                <div id=\"Fpoloan_grid\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n<script>\r\n    click_act_name = \"FPOLoanForm\";\r\n    click_ctrl_name = \"FPOLoan\";\r\n    form_list_url = \'../\' + click_ctrl_name + \'/\' + click_act_name;\r\n</script>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "977876a35435ad07d358c25e869bbdb3b0784fe010271", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "977876a35435ad07d358c25e869bbdb3b0784fe011311", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "977876a35435ad07d358c25e869bbdb3b0784fe012351", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "977876a35435ad07d358c25e869bbdb3b0784fe013391", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "977876a35435ad07d358c25e869bbdb3b0784fe014431", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "977876a35435ad07d358c25e869bbdb3b0784fe015471", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "977876a35435ad07d358c25e869bbdb3b0784fe016511", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "977876a35435ad07d358c25e869bbdb3b0784fe017552", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
<script>
    var menuId = """";
    var permission = """";
    var gridrecord;
    $(document).ready(function () {
        $("".adv_filter"").hide();
        $("".Export"").attr(""hdrtitle"", ""FPO Loan List"");
        $("".Export"").attr(""SubTreeId"", ""FPOLGMT"");
        list_grid_id = ""Fpoloan_grid"";
        $(""#RI"").hide();
        $(""#FPO"").hide();
        listpageloadfetch();
        Screen_Id = ""FPOLGMT"";
        permission = sec_Permission(Screen_Id);
        page_load_list_permission(permission);
        setlocalStorage(""ls_pageList"", """");
        filterhover();
    });
   
</script>

<script>
    function listpageloadfetch() {
        try{       
        var formval = form_Serialize(""frm_fpo_loan"");
        var obj_val = JSON.parse(formval);
        obj_val.FilterBy_Option = ""ALL"";
        obj_val.FilterBy_Code = ""."";
            if (getlocalStorage('flt_condition') != undefined && getlocalStorage('flt_condition') != """")
            {
                obj_val.FilterBy_Fromvalue = get");
            WriteLiteral(@"localStorage('flt_condition');
            }
            else
            {
                obj_val.FilterBy_Fromvalue = ""."";        
            }
                obj_val.FilterBy_Tovalue = ""."";
            var data = {};
            data.context = WebAPIProxy.getContext();;
            data.context.Filter = obj_val;
            var Context = data.context;
            $.ajax({
                type: ""POST"",
                url: '/FPOLoan/LRSFPOLoanListfetch',
                dataType: 'json',
                data: JSON.stringify({ userId: Context.userId, orgnId: Context.orgnId, locnId: Context.locnId, localeId: Context.localeId, FilterBy_Option: Context.Filter.FilterBy_Option, FilterBy_Code: Context.Filter.FilterBy_Code, FilterBy_FromValue: Context.Filter.FilterBy_FromValue, FilterBy_ToValue: Context.Filter.FilterBy_ToValue }),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                    if (response.context.List != null)");
            WriteLiteral(@"
                    {
                        generate_FPOLoan_list(response.context.List);
                    }
                    else
                    {
                        invoicegrid([]);
                    }
                },
                error: function (er) {
                    alert(er)
                    console.log(er)
                }

            });
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    var status_Priority = [];
    function fpoloangrid(data) {
        try{
            $.each(data, function (index, value) {
                var flag = false;
                $.each(status_Priority, function (sindex, svalue) {
                    if (svalue == value.status_desc) {
                        flag = true;
                    }
                });
                if (flag == false) {
                    status_Priority.push(value.status_desc);
                }
            });
 ");
            WriteLiteral(@"           $(""#Fpoloan_grid"").kendoGrid({
                    excel: {
                        fileName: ""Fpo Loan.xlsx"",
                        filterable: true,
                        allPages: false
                    },
                        dataSource: {
                            data: data,
                            pageSize: 20,
                           
                        },
                toolbar: ""<button type= 'button' id = 'Exportclick' class = 'k-grid-excel' style = 'display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>"",
                excelExport: function (e) {
                    gridrecord;
                    var gd = $(""#Fpoloan_grid"").data(""kendoGrid"");
                    var len = gd.dataSource._data.length;
                    var chkall = $('#chkall').is(':checked');
                    var chkfilter = $('#chkfilter').is(':checked');
                    var chktemp = $('#chktemp').is(':ch");
            WriteLiteral(@"ecked');
                    //var twokendobox = true;

                    var twokendobox = false;
                    gd.dataSource.pageSize(len);
                    exportfunction(e, chkall, chkfilter, chktemp, twokendobox, gd);
                    gd.dataSource.pageSize('10');
                    return false;
                },
                
                        change: selectRow,
                        height: 450,
                        sortable: true,
                        selectable: true,
                        selectable: ""singl"",   //  Grid Row Selection
                        pageable: {
                            refresh: false,
                           // pageSizes: true,
                            buttonCount: 5,
                            pageSizes: [""All"", 100, 200, 500, 2000]
                        },
                filterable: true,
                navigatable: true,
                groupable: false,
                resizable: true,
           ");
            WriteLiteral(@"             columns: [
                             {
                                field: ""out_fpoloan_rowid"",
                                 title: ""fpoloan_rowid"",
                                  hidden: true,
                             },
                             {
                                 field: ""out_fpoorgn_code"",
                                 title: ""fpoorgn_code"",
                                 hidden: true,
                             },
                             {
                                 field: ""out_fpoloan_mat_date"",
                                 title: ""fpoloan_mat_date"",
                                 hidden: true,
                            },
                             
                             {
                                 field: ""out_institution_type"",
                                 title: ""institution_type"",
                                 hidden: true,
                             },
                           ");
            WriteLiteral(@"{
                               field: ""out_fpoloan_no"",
                               title: ""Loan No."",
                               width: 200,
                               filterable: {
                                   cell: {
                                       operator: ""contains"",
                                       inputWidth: 1500
                                   }
                               }
                            },
                            {
                                field: ""out_lending_institution"",
                                title: ""Institution"",
                                width: 200,
                                filterable: {
                                    cell: {
                                        operator: ""contains"",
                                        inputWidth: 1500
                                    }
                                }
                            },
                             {
       ");
            WriteLiteral(@"                          field: ""out_institution_type_desc"",
                                 title: ""Type"",
                                 width: 200,
                                 filterable: {
                                     cell: {
                                         operator: ""contains"",
                                         inputWidth: 1500
                                     }
                                 }
                             },

                            {
                                field: ""out_sanctioned_date"",
                                title: ""Disb. Date"",
                                width: 200,
                                filterable: {
                                    cell: {
                                        operator: ""contains"",
                                        inputWidth: 1500
                                    }
                                }
                            },
                          ");
            WriteLiteral(@"   {
                                 field: ""out_sanctioned_amount"",
                                 title: ""Loan Amount"",
                                 width: 200,
                                 filterable: {
                                     cell: {
                                         operator: ""contains"",
                                         inputWidth: 1500
                                     }
                                 }
                             },
                             {
                                 field: ""out_fpoloan_start_date"",
                                 title: ""FPO Loan Start Date"",
                                 width: 200,
                                 hidden:true,
                                 filterable: {
                                     cell: {
                                         operator: ""contains"",
                                         inputWidth: 1500
                                     }
           ");
            WriteLiteral(@"                      }
                             },
                              {
                                  field: ""out_refund_received"",
                                  title: ""received_amount"",
                                  hidden: true,
                              },
                               {
                                   field: ""out_emi_amount"",
                                   title: ""emi_amount"",
                                   hidden: true,
                               },
                             {
                                 field: ""out_interest_rate"",
                                 title: ""Interest Rate"",
                                 hidden: true,
                                 width: 200,
                                 filterable: {
                                     cell: {
                                         operator: ""contains"",
                                         inputWidth: 1500
                        ");
            WriteLiteral(@"             }
                                 }
                             },
                             {
                                 field: ""out_repayment_in_yrs"",
                                 title: ""Repayment Tenure (Years)"",
                                 width: 200,
                                 hidden: true,
                                 filterable: {
                                     cell: {
                                         operator: ""contains"",
                                         inputWidth: 1500
                                     }
                                 }
                             },
                              {
                                  field: ""out_repayment_freq"",
                                  title: ""repayment_freq"",
                                  hidden: true,
                              },
                              {
                                  field: ""out_repayment_freq_desc"",
           ");
            WriteLiteral(@"                       title: ""Repayment Frequency"",
                                  width: 200,
                                  filterable: {
                                      cell: {
                                          operator: ""contains"",
                                          inputWidth: 1500
                                      }
                                  }
                              },

                               {
                                   field: ""out_repayment_in_months"",
                                   title: ""Instalment Nos"",
                                   hidden: true,
                                   width: 200,
                                   filterable: {
                                       cell: {
                                           operator: ""contains"",
                                           inputWidth: 1500
                                       }
                                   }
                    ");
            WriteLiteral(@"           },
                                {
                                    field: ""out_collateral_type"",
                                    title: ""collateral_type"",
                                    hidden: true,
                                },
                            {
                                field: ""out_collateral_type_desc"",
                                title: ""Collateral Type"",
                                hidden: true,
                                width: 200,
                                filterable: {
                                    cell: {
                                        operator: ""contains"",
                                        inputWidth: 1500
                                    }
                                }
                            },
                            {
                                field: ""out_payable_amount"",
                                title: ""payable_amount"",
                                hidde");
            WriteLiteral(@"n: true,
                            },
                             {
                                 field: ""out_payable_exception"",
                                 title: ""payable_exception"",
                                 hidden: true,
                             },
                              {
                                  field: ""out_interest_amount"",
                                  title: ""interest_amount"",
                                  hidden: true,
                              },
                            {
                                field: ""out_collateral_amount"",
                                title: ""Collateral Amount"",
                                hidden: true,
                                width: 200,
                                filterable: {
                                    cell: {
                                        operator: ""contains"",
                                        inputWidth: 1500
                                    }");
            WriteLiteral(@"
                                }
                            },
                             {
                                 field: ""out_closed_date"",
                                 title: ""closed_date"",
                                 hidden: true,
                             },
                            {
                                field: ""out_received_amount"",
                                title: ""Total Amount Received"",
                                hidden: true,
                                width: 200,
                                filterable: {
                                    cell: {
                                        operator: ""contains"",
                                        inputWidth: 1500
                                    }
                                }
                            },
                             {
                                 field: ""out_settlement_amount"",
                                 title: ""settlement_amount");
            WriteLiteral(@""",
                                 hidden: true,
                             },
                            //{
                            //    field: ""out_principle_paid"",
                            //    title: ""Princ. Amount Repaid"",
                            //    hidden: true,
                            //    width: 200,
                            //    filterable: {
                            //        cell: {
                            //            operator: ""contains"",
                            //            inputWidth: 1500
                            //        }
                            //    }
                            //},
                            {
                                field: ""out_interest_paid"",
                                title: ""Int. Amount Repaid"",
                                hidden: true,
                                width: 200,
                                filterable: {
                                    cell: {
         ");
            WriteLiteral(@"                               operator: ""contains"",
                                        inputWidth: 1500
                                    }
                                }
                            },
                            {
                                field: ""out_waive_amount"",
                                title: ""waive_amount"",
                                hidden: true,
                            },
                            {
                                field: ""out_status_code"",
                                title: ""status_code"",
                                hidden: true,
                            },
                            {
                                field: ""out_status_desc"",
                                title: ""Status"",
                                width: 200,
                                filterable: {
                                    cell: {
                                        operator: ""contains"",
                ");
            WriteLiteral(@"                        inputWidth: 1500
                                    }
                                }
                            },


                        ]

                    });

            $("".k-dropdown-operator"").css('display', 'none');
            $(""#Fpoloan_grid .k-input"").attr('disabled', 'false');
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function selectRow() {
        var grid = $(""#Fpoloan_grid"").data(""kendoGrid"");
        var selectedItem = grid.dataItem(grid.select());
        setlocalStorage(""ls_pageList"", selectedItem);
    }

    function statusFilter(element) {    // Dropdown list functionality
        element.kendoDropDownList({
            dataSource: status_Priority,
            optionLabel: ""--Select Value--""
        });
    }

</script>
<script>
    $(""#btn_Edit"").bind(""click"", function () {
        getSerializedSelectedRows('edit');
    });

    $(""#btn_View"").");
            WriteLiteral(@"bind(""click"", function () {
        getSerializedSelectedRows('view');
    });

    $(""#btn_new"").bind(""click"", function () {
        btn_onClick('Create');
        location.href = ""../FPOLoan/FPOLoanForm"";
    });

    function getSerializedSelectedRows(mode) {
        try {
            if (getlocalStorage(""ls_pageList"") != undefined) {
                var items = getlocalStorage(""ls_pageList"");
                if (items.length == 0) {
                    kendoAlert(""Please select records"");
                }
                else {
                    if (mode == ""edit"") {
                        btn_onClick('Edit');
                        location.href = ""../FPOLoan/FPOLoanForm"";
                    }
                    else if (mode == ""view"") {
                        btn_onClick('View');
                        location.href = ""../FPOLoan/FPOLoanForm"";
                    }
                }
            }
        }
        catch (err) {
            javascript_log4j_root(arg");
            WriteLiteral(@"uments.callee.name, err);
        }
    }
</script>
<script>
    function generate_FPOLoan_list(res) {
        try{
        if (res != null) {
            var data = changedataType(res);
            $(""#gd_Fpoloan"").empty();
            $(""#gd_Fpoloan"").append(""<div id='Fpoloan_grid'></div>"");
            fpoloangrid(data);
        }
        else {
            fpoloangrid([]);
        }
    }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
    function listRefresh() {
        try{
        setlocalStorage('flt_condition', """");
        listpageloadfetch();
        }
        catch (err) {
            javascript_log4j_root(arguments.callee.name, err);
        }
    }
</script>


");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
