#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\InvoiceGeneration\InvoiceGenerationList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e6e16452c329f288f3b015f532e0c695d6d3895e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_InvoiceGeneration_InvoiceGenerationList), @"mvc.1.0.view", @"/Views/InvoiceGeneration/InvoiceGenerationList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e6e16452c329f288f3b015f532e0c695d6d3895e", @"/Views/InvoiceGeneration/InvoiceGenerationList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_InvoiceGeneration_InvoiceGenerationList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\InvoiceGeneration\InvoiceGenerationList.cshtml"
  
    ViewBag.List = "Invoice Generation";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div class=""row"">
    <div class=""col-xs-12"">
        <div id=""grid_invgen""></div>
    </div>
</div>

<script>
    click_act_name = ""InvoiceGenerationForm"";
    click_ctrl_name = ""InvoiceGeneration"";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>

<script>

    var data = [];
    $(""#grid_invgen"").kendoGrid(
     {
         dataSource: {
             data: data,
             pageSize: 20,
             change: function (e) {
                 setTimeout(function () {
                     var gd = $(""#MilkCC_grid"").data(""kendoGrid"");
                     filter_row(gd);
                     $('.k-i-close').css('display', 'none');
                     $('button.k-button-icon').css('display', 'none');
                     $('#MilkCC_grid .k-input').prop('disabled', false);
                     $('#MilkCC_grid .k-input').prop('readonly', true);

                 }, 1);
             },
         },
         toolbar: ""<button type='button' id='Exportcl");
            WriteLiteral(@"ick' class='k-grid-excel' style='display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>"",
         excelExport: function (e) {
             var chkall = $('#chkall').is(':checked');
             var chkfilter = $('#chkfilter').is(':checked');
             var chktemp = $('#chktemp').is(':checked');
             var gd = $(""#MilkCC_grid"").data(""kendoGrid"");
             var len = gd.dataSource._data.length;
             gd.dataSource.pageSize(len);
             exportfunction(e, chkall, chkfilter, chktemp);
             gd.dataSource.pageSize('10');
         },
         filterable: {
             enabled: true,
             delay: 1500,
             mode: ""menu, row"",
             height: 200,
             click: function (e) {
                 var gd = $(""#grid_invgen"").data(""kendoGrid"");
                 filter_row(gd);
             }
         },
         filterMenuInit: function (e) {
             var gd = $(""#grid_invgen"").d");
            WriteLiteral(@"ata(""kendoGrid"");
             filter_row(gd);
         },
         dataBound: function (o) {
             var gd = $(""#grid_invgen"").data(""kendoGrid"");
             for (var i = 0; i < gd.columns.length; i++) {
                 gd.showColumn(i);
             }
             $(""div.k-group-indicator"").each(function (i, v) {
                 gd.hideColumn($(v).data(""field""));
             })
         },
         height: 450,
         sortable: true,
         selectable: true,
         //change: onChangeSelection,
         selectable: ""singl"",   //  Grid Row Selection
         pageable: {
             refresh: false,
             pageSizes: true,
             buttonCount: 5
         },
         navigatable: true,
         groupable: false,

         columns: [
                {
                    field: ""customer_code"",
                    title: ""Customer Code"",
                    filterable: {
                        cell: {
                            operator: ""contains"",
  ");
            WriteLiteral(@"                          inputWidth: 1500
                        }
                    }
                },
             {
                 field: ""customer_name"",
                 title: ""Customer Name"",
                 filterable: {
                     cell: {
                         operator: ""contains"",
                         inputWidth: 1500
                     }
                 }
             },


              {
                  field: ""booking_id"",
                  title: ""Booking ID "",
                  filterable: {
                      cell: {
                          operator: ""contains"",
                          inputWidth: 1500
                      }
                  }
              },
               {
                   field: ""equipment"",
                   title: ""Equipment "",
                   filterable: {
                       cell: {
                           operator: ""contains"",
                           inputWidth: 1500
             ");
            WriteLiteral(@"          }
                   }
               },
               {
                   field: ""booking_date"",
                   title: ""Date Of Booking "",
                   filterable: {
                       cell: {
                           operator: ""contains"",
                           inputWidth: 1500
                       }
                   }
               },
               {
                   field: ""period_from"",
                   title: ""Period From"",
                   filterable: {
                       cell: {
                           operator: ""contains"",
                           inputWidth: 1500
                       }
                   }
               },
               {
                   field: ""period_to"",
                   title: ""Period To"",
                   filterable: {
                       cell: {
                           operator: ""contains"",
                           inputWidth: 1500
                       }
                   ");
            WriteLiteral(@"}
               },

         {
             field: ""Status"",
             title: ""Status"",
             filterable: {
                 cell: {
                     operator: ""contains"",
                     inputWidth: 1500
                 }
             }
         },
         ]

     });



    $("".k-dropdown-operator"").css('display', 'none');
    $(""#grid_invgen .k-input"").attr('disabled', 'false');

    var gridRowID = -1;
    function sel_checkbox() {
        gridRowID++;
        return '<input id=""chk_sel_' + gridRowID + '"" class=""checkbox"" type=""checkbox"" />';


    }


</script>

<script>
    $(""#btn_Edit"").bind(""click"", function () {
        btn_onClick('Edit');
        location.href = ""../InvoiceGeneration/InvoiceGenerationForm"";
    });

    $(""#btn_View"").bind(""click"", function () {
        btn_onClick('View');
        location.href = ""../InvoiceGeneration/InvoiceGenerationForm"";
    });

    $(""#btn_new"").bind(""click"", function () {
        btn_onClic");
            WriteLiteral(@"k('Create');
        location.href = ""../InvoiceGeneration/InvoiceGenerationForm"";
    });
</script>
<script>
    $(document).ready(function () {
        $(""#btn_Edit"").hide();       
        $("".adv_filter"").attr(""hdrtitle"", """");
        $("".adv_filter"").attr(""fltid"", """");
        $("".Export"").attr(""hdrtitle"", ""Milk Receipts List"");


    });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
