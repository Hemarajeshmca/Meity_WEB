#pragma checksum "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FPOMapping\FPOMapping.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "60b4f7353192c1a1990e603b378f37ddc5d00516"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FPOMapping_FPOMapping), @"mvc.1.0.view", @"/Views/FPOMapping/FPOMapping.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using FFI.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"60b4f7353192c1a1990e603b378f37ddc5d00516", @"/Views/FPOMapping/FPOMapping.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c20a4f1b02c18b9db37890379beb6b4e8cd0e608", @"/Views/_ViewImports.cshtml")]
    public class Views_FPOMapping_FPOMapping : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Live\Meity\Updated\FEB-06-2023\WEB\meity-web-frontend\FFI\Views\FPOMapping\FPOMapping.cshtml"
  
    ViewBag.List = "FPO Farmer Map";
    Layout = "~/Views/Shared/ListViewLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-xs-12"">
        <div id=""FPOGrid""></div>
    </div>
</div>

<script>
    click_act_name = ""FPOMappingForm"";
    click_ctrl_name = ""FPOMapping"";
    form_list_url = '../' + click_ctrl_name + '/' + click_act_name;
</script>


<script>
    var data = [{farmer_id:""101"",member_id:""1001"",given_name:""kumar"",given_surname:""k"",dob:""04/05/1976"",gender:""Male"",fig_name:"""",regd_mobileno:""9874563210"",status:""active""}]
    $(""#FPOGrid"").kendoGrid(
        {
            dataSource: {
                data: data,
                pageSize: 20,
                change: function (e) {
                    setTimeout(function () {
                        var gd = $(""#FPOGrid"").data(""kendoGrid"");
                        filter_row(gd);
                        $('.k-i-close').css('display', 'none');
                        $('button.k-button-icon').css('display', 'none');
                        $('#FPOGrid .k-input').prop('disabled', false);
                        $(");
            WriteLiteral(@"'#FPOGrid .k-input').prop('readonly', true);

                    }, 1);
                },
            },
            toolbar: ""<button type= 'button' id = 'Exportclick' class = 'k-grid-excel' style = 'display:none' href=''><span class='fa fa-file-excel-o' style='color: Black;'> &nbsp Export To Excel</span></button>"",
            excelExport: function (e) {
                var chkall = $('#chkall').is(':checked');
                var chkfilter = $('#chkfilter').is(':checked');
                var chktemp = $('#chktemp').is(':checked');
                var gd = $(""#FPOGrid"").data(""kendoGrid"");
                var len = gd.dataSource._data.length;
                gd.dataSource.pageSize(len);
                exportfunction(e, chkall, chkfilter, chktemp);
                gd.dataSource.pageSize('10');
            },
            filterable: {
                enabled: true,
                delay: 1500,
                mode: ""menu, row"",
                height: 200,
                click: functi");
            WriteLiteral(@"on (e) {
                    var gd = $(""#FPOGrid"").data(""kendoGrid"");
                    filter_row(gd);
                }
            },
            filterMenuInit: function (e) {
                var gd = $(""#FPOGrid"").data(""kendoGrid"");
                filter_row(gd);
            },
            dataBound: function (o) {
                var gd = $(""#FPOGrid"").data(""kendoGrid"");
                for (var i = 0; i < gd.columns.length; i++) {
                    gd.showColumn(i);
                }
                $(""div.k-group-indicator"").each(function (i, v) {
                    gd.hideColumn($(v).data(""field""));
                })
            },
            height: 450,
            sortable: true,
            selectable: true,
            //change: onChangeSelection,
            selectable: ""singl"",   //  Grid Row Selection
            pageable: {
                refresh: false,
                pageSizes: true,
                buttonCount: 5
            },
            navigatabl");
            WriteLiteral(@"e: true,
            groupable: false,

            columns: [
                   {
                       title: ""Sel"", width: 40,
                       template: '#=sel_checkbox()#'

                   },
                {
                    field: ""farmer_id"",
                    title: ""Farmer ID"",
                    filterable: {
                        cell: { operator: ""contains"", inputWidth: 1500 }
                    }
                },

                {
                    field: ""member_id"",
                    title: ""Member ID"",
                    filterable: {
                        cell: {
                            operator: ""contains"",
                            inputWidth: 1500
                        }
                    }
                },

                 {
                     field: ""given_name"",
                     title: ""Given Name"",
                     filterable: {
                         cell: {
                             operator:");
            WriteLiteral(@" ""contains"",
                             inputWidth: 1500
                         }
                     }
                 },

                  {
                      field: ""given_surname"",
                      title: ""Given Surname"",
                      filterable: {
                          cell: {
                              operator: ""contains"",
                              inputWidth: 1500
                          }
                      }
                  },
                    {
                        field: ""dob"",
                        title: ""DOB"",
                        filterable: {
                            cell: {
                                operator: ""contains"",
                                inputWidth: 1500
                            }
                        }
                    },

            {
                field: ""gender"",
                title: ""Gender"",
                filterable: {
                    cell: {
               ");
            WriteLiteral(@"         operator: ""contains"",
                        inputWidth: 1500
                    }
                }
            },


            {
                field: ""fig_name"",
                title: ""FIG Name"",
                //filterable: {
                //    cell: {
                //        operator: ""contains"",
                //        inputWidth: 1500
                //    }
                //}
                hidden:true
            },

            {
                field: ""regd_mobileno"",
                title: ""Regd Mobile No"",
                filterable: {
                    cell: {
                        operator: ""contains"",
                        inputWidth: 1500
                    }
                }
            },

            {
                field: ""status"",
                title: ""Status"",
                filterable: {
                    cell: {
                        operator: ""contains"",
                        inputWidth: 1500
            ");
            WriteLiteral(@"        }
                }
            },
            ]

        });



    $("".k-dropdown-operator"").css('display', 'none');
    $(""#FPOGrid .k-input"").attr('disabled', 'false');

    var gridRowID = -1;
    function sel_checkbox() {
        gridRowID++;
        return '<input id=""chk_sel_' + gridRowID + '"" class=""checkbox"" type=""checkbox"" />';
    }


</script>

<script>
    $(""#btn_Edit"").bind(""click"", function () {
        btn_onClick('Edit');
        location.href = ""../FPOMapping/FPOMappingForm"";
    });

    $(""#btn_View"").bind(""click"", function () {
        btn_onClick('View');
        location.href = ""../FPOMapping/FPOMappingForm"";
    });

    $(""#btn_new"").bind(""click"", function () {
        btn_onClick('Create');
        location.href = ""../FPOMapping/FPOMappingForm"";
    });
</script>
<script>
    $(document).ready(function () {

        $("".adv_filter"").attr(""hdrtitle"", ""Farmer Profile List Record"");
        $("".adv_filter"").attr(""fltid"", """");
        $");
            WriteLiteral("(\".Export\").attr(\"hdrtitle\", \"FPO Registration List\");\r\n\r\n\r\n    });\r\n</script>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
